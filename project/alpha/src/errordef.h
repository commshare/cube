#ifndef __ERRORDEF_H__
#define __ERRORDEF_H__

/*
* #modules:
 * quote error scope		: 100000~199999
 * 	 ctp-quote				: 125000~125999
 * 	 a50_quote				: 126000~126999
 * 	 dbf-quote				: 127000~127999
 *
 * trade error scope		: 200000~299999
 *	 a50-trade				: 230000~230999
 *
 * sigma error scope		: 300000~499999
 *	http-manager			: 301000~301999
 *	policy-manager			: 302000~302999
 *	order-manager			: 303000~303999
 *	business-control		: 304000~304999
 *	risk-manager			: 305000~305999
 *	market-manager			: 306000~306999
 *	returns-report-manager	: 307000~307999
 *	data_manager			: 308000~308999
 *	data_sync_manager		: 309000~309999
 *	data_query_manager		: 400000~400999
 *
 * other error scope		: 500000~999999
 *	gdservice				: 528000~528999
 *	quote-query				: 529000~529999
 *	omc						: 531000~531200
 *
 * external interface error scope: 800000~999999
 *	field_error				: 800000~819999
 *	business_error			: 820000~839999
 *	inner_error				: 840000~859999
*/

namespace serverframe
{

const int	FIELD_BASE = 800000;
const int	BUSI_BASE = 820000;
const int	SYSTEM_BASE = 840000;

//field_error: 800000~819999
const int	ERROR_FIELD_ACCOUNT						=FIELD_BASE + 1;
const int	ERROR_FIELD_EXCHANGE_CODE				=FIELD_BASE + 2;
const int	ERROR_FIELD_DATE						=FIELD_BASE + 3;
const int	ERROR_FIELD_SWITCH						=FIELD_BASE + 4;
const int	ERROR_FIELD_OPT							=FIELD_BASE + 5;
const int	ERROR_FIELD_FEE_TYPE					=FIELD_BASE + 6;
const int	ERROR_FIELD_CURRENCY_CODE				=FIELD_BASE + 7;
const int	ERROR_FIELD_BASE_CURRENCY_CODE			=FIELD_BASE + 8;
const int	ERROR_FIELD_PARAM_CODE					=FIELD_BASE + 9;
const int	ERROR_FIELD_PARAM_TYPE					=FIELD_BASE + 10;
const int	ERROR_FIELD_SECURITIES_TYPE				=FIELD_BASE + 11;
const int	ERROR_FIELD_SECURITIES_CODE				=FIELD_BASE + 12;
const int	ERROR_FIELD_HOLIDAY						=FIELD_BASE + 13;
const int	ERROR_FIELD_PRODUCT_TYPE				=FIELD_BASE + 14;
const int	ERROR_FIELD_STOP_LOSS_RATE				=FIELD_BASE + 15;
const int	ERROR_FIELD_STOP_WIN_RATE				=FIELD_BASE + 16;
const int	ERROR_FIELD_LOAN_RATE					=FIELD_BASE + 17;
const int	ERROR_FIELD_SYSTEM_NAME					=FIELD_BASE + 18;
const int	ERROR_FIELD_MODULE_NAME					=FIELD_BASE + 19;
const int	ERROR_FIELD_ERROR_CODE					=FIELD_BASE + 20;
const int	ERROR_FIELD_ENTRUST_TYPE				=FIELD_BASE + 21;
const int	ERROR_FIELD_CONTRACT_ID					=FIELD_BASE + 22;
const int	ERROR_FIELD_TRADE_FLAG					=FIELD_BASE + 23;
const int	ERROR_FIELD_BROKE_DAY					=FIELD_BASE + 24;
const int	ERROR_FIELD_OPERATOR					=FIELD_BASE + 25;
const int	ERROR_FIELD_SERVER_NAME					=FIELD_BASE + 26;
const int	ERROR_FIELD_EXT_ORDER_NO				=FIELD_BASE + 27;
const int	ERROR_FIELD_OBJECT						=FIELD_BASE + 28;
const int	ERROR_FIELD_SQL							=FIELD_BASE + 29;

//business_error: 820000~839999
const int	ERROR_BUSI_DB_NULL_RECORD				=BUSI_BASE + 1;

//system_error: 840000~859999
const int	ERROR_SYSTEM_UNAVAILABLE				=SYSTEM_BASE + 99999;
const int	ERROR_SYSTEM_TIMEOUT					=SYSTEM_BASE + 1;
const int	ERROR_SYSTEM_DB_CONTORL					=SYSTEM_BASE + 2;
const int	ERROR_SYSTEM_DB_NULL_RECORD				=SYSTEM_BASE + 3;
const int	ERROR_SYSTEM_DB_AFFECTED_ROWS			=SYSTEM_BASE + 4;
const int	ERROR_SYSTEM_HTTP_POST_ILLEGAL_JSON		=SYSTEM_BASE + 5;
const int	ERROR_SYSTEM_HTTP_POST_ILLEGAL_DATA_LEN	=SYSTEM_BASE + 6;
const int	ERROR_SYSTEM_QUOTE						=SYSTEM_BASE + 7;

// policy-manager    : 302000~302999 
const int	POLICY_BASE = 302000;
const int	ERROR_POLICY_CONFIGFILE_INVALID = POLICY_BASE+1;
const int	ERROR_POLICY_CONFIG_INVALID = POLICY_BASE+2;
const int	ERROR_POLICY_DB_CONNECT_INVALID = POLICY_BASE+3;
const int	ERROR_POLICY_DB_INVALID = POLICY_BASE+4;
const int	ERROR_POLICY_FRONT_SENDER_EXCEPTION = POLICY_BASE+5;
const int	ERROR_POLICY_ORDER_QUEUE_NOT_EMPTY = POLICY_BASE+6;
const int	ERROR_POLICY_LIM_PROSSOOR_NULL = POLICY_BASE+7;
const int	ERROR_POLICY_EXCEP_PROSSOOR_NULL = POLICY_BASE+8;
const int	ERROR_POLICY_NEW_EXCEPTION = POLICY_BASE+9;
const int	ERROR_POLICY_MARKET_EXCEPTION = POLICY_BASE+10;
const int	ERROR_POLICY_UNFREEZE_TOO_MUCH = POLICY_BASE+11;
const int	ERROR_POLICY_REDO_TOO_MUCH = POLICY_BASE+12;
const int	ERROR_POLICY_ORDER_TYPE_EXCEPTION = POLICY_BASE+13;

// risk-manager    : 305000~305999
const int	RISK_BASE = 305000;
const int	ERROR_RISK_CONFIGFILE_INVALID = RISK_BASE+1;
const int	ERROR_RISK_CONFIG_INVALID = RISK_BASE+2;
const int	ERROR_RISK_DB_CONNECT_INVALID = RISK_BASE+3;
const int	ERROR_RISK_DB_INVALID = RISK_BASE+4;
const int	ERROR_RISK_FRONTSENDER_EXCEPTION = RISK_BASE+5;
const int	ERROR_RISK_CONTRACTID_EXIST = RISK_BASE+6;
const int	ERROR_RISK_CONTRACTID_EXCEPTION = RISK_BASE+7;
const int	ERROR_RISK_MARKET_EXCEPTION = RISK_BASE+8;
const int	ERROR_RISK_NEW_EXCEPTION = RISK_BASE+9;
const int	ERROR_RISK_RISK_ORDER_REMOVE = RISK_BASE+10;
const int	ERROR_RISK_NOT_TRADE_TIME = RISK_BASE+11;
const int	ERROR_RISK_HQ_EXCEPTION = RISK_BASE+12;
const int	ERROR_RISK_FORCE_SELL_EXCEPTION = RISK_BASE+13;


const char *errno_transfer(long nerrno);

}

#endif //_ERROR_DEF_H__21DF6A1A_5813_48A3_BC73_639FBE370744_
