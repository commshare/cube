// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: system_protocal.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "system_protocal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace esunnysystem {
class rtn_statusDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_status>
     _instance;
} _rtn_status_default_instance_;

namespace protobuf_system_5fprotocal_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_status, systemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_status, systemsubid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_status, systemname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_status, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_status, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_status, localip_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(rtn_status)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_status_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "system_protocal.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _rtn_status_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_status_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025system_protocal.proto\022\014esunnysystem\"u\n"
      "\nrtn_status\022\020\n\010systemid\030\001 \001(\021\022\023\n\013systems"
      "ubid\030\002 \001(\021\022\022\n\nsystemname\030\003 \001(\t\022\n\n\002id\030\004 \001"
      "(\021\022\017\n\007content\030\005 \001(\t\022\017\n\007localIP\030\006 \001(\tb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 164);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "system_protocal.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_system_5fprotocal_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_status::kSystemidFieldNumber;
const int rtn_status::kSystemsubidFieldNumber;
const int rtn_status::kSystemnameFieldNumber;
const int rtn_status::kIdFieldNumber;
const int rtn_status::kContentFieldNumber;
const int rtn_status::kLocalIPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_status::rtn_status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_system_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:esunnysystem.rtn_status)
}
rtn_status::rtn_status(const rtn_status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  systemname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.systemname().size() > 0) {
    systemname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.systemname_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  localip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.localip().size() > 0) {
    localip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localip_);
  }
  ::memcpy(&systemid_, &from.systemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&systemid_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:esunnysystem.rtn_status)
}

void rtn_status::SharedCtor() {
  systemname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&systemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&systemid_)) + sizeof(id_));
  _cached_size_ = 0;
}

rtn_status::~rtn_status() {
  // @@protoc_insertion_point(destructor:esunnysystem.rtn_status)
  SharedDtor();
}

void rtn_status::SharedDtor() {
  systemname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void rtn_status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_status::descriptor() {
  protobuf_system_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_system_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_status& rtn_status::default_instance() {
  protobuf_system_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_status* rtn_status::New(::google::protobuf::Arena* arena) const {
  rtn_status* n = new rtn_status;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_status::Clear() {
// @@protoc_insertion_point(message_clear_start:esunnysystem.rtn_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  systemname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&systemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&systemid_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool rtn_status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:esunnysystem.rtn_status)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 systemid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &systemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 systemsubid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &systemsubid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string systemname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_systemname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->systemname().data(), static_cast<int>(this->systemname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "esunnysystem.rtn_status.systemname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "esunnysystem.rtn_status.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string localIP = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->localip().data(), static_cast<int>(this->localip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "esunnysystem.rtn_status.localIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:esunnysystem.rtn_status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:esunnysystem.rtn_status)
  return false;
#undef DO_
}

void rtn_status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:esunnysystem.rtn_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 systemid = 1;
  if (this->systemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->systemid(), output);
  }

  // sint32 systemsubid = 2;
  if (this->systemsubid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->systemsubid(), output);
  }

  // string systemname = 3;
  if (this->systemname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->systemname().data(), static_cast<int>(this->systemname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "esunnysystem.rtn_status.systemname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->systemname(), output);
  }

  // sint32 id = 4;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->id(), output);
  }

  // string content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "esunnysystem.rtn_status.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // string localIP = 6;
  if (this->localip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->localip().data(), static_cast<int>(this->localip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "esunnysystem.rtn_status.localIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->localip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:esunnysystem.rtn_status)
}

::google::protobuf::uint8* rtn_status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:esunnysystem.rtn_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 systemid = 1;
  if (this->systemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->systemid(), target);
  }

  // sint32 systemsubid = 2;
  if (this->systemsubid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->systemsubid(), target);
  }

  // string systemname = 3;
  if (this->systemname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->systemname().data(), static_cast<int>(this->systemname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "esunnysystem.rtn_status.systemname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->systemname(), target);
  }

  // sint32 id = 4;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->id(), target);
  }

  // string content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "esunnysystem.rtn_status.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // string localIP = 6;
  if (this->localip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->localip().data(), static_cast<int>(this->localip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "esunnysystem.rtn_status.localIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->localip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esunnysystem.rtn_status)
  return target;
}

size_t rtn_status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esunnysystem.rtn_status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string systemname = 3;
  if (this->systemname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->systemname());
  }

  // string content = 5;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // string localIP = 6;
  if (this->localip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->localip());
  }

  // sint32 systemid = 1;
  if (this->systemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->systemid());
  }

  // sint32 systemsubid = 2;
  if (this->systemsubid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->systemsubid());
  }

  // sint32 id = 4;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:esunnysystem.rtn_status)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:esunnysystem.rtn_status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:esunnysystem.rtn_status)
    MergeFrom(*source);
  }
}

void rtn_status::MergeFrom(const rtn_status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:esunnysystem.rtn_status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.systemname().size() > 0) {

    systemname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.systemname_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.localip().size() > 0) {

    localip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localip_);
  }
  if (from.systemid() != 0) {
    set_systemid(from.systemid());
  }
  if (from.systemsubid() != 0) {
    set_systemsubid(from.systemsubid());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void rtn_status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:esunnysystem.rtn_status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_status::CopyFrom(const rtn_status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esunnysystem.rtn_status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_status::IsInitialized() const {
  return true;
}

void rtn_status::Swap(rtn_status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_status::InternalSwap(rtn_status* other) {
  using std::swap;
  systemname_.Swap(&other->systemname_);
  content_.Swap(&other->content_);
  localip_.Swap(&other->localip_);
  swap(systemid_, other->systemid_);
  swap(systemsubid_, other->systemsubid_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_status::GetMetadata() const {
  protobuf_system_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_system_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_status

// sint32 systemid = 1;
void rtn_status::clear_systemid() {
  systemid_ = 0;
}
::google::protobuf::int32 rtn_status::systemid() const {
  // @@protoc_insertion_point(field_get:esunnysystem.rtn_status.systemid)
  return systemid_;
}
void rtn_status::set_systemid(::google::protobuf::int32 value) {
  
  systemid_ = value;
  // @@protoc_insertion_point(field_set:esunnysystem.rtn_status.systemid)
}

// sint32 systemsubid = 2;
void rtn_status::clear_systemsubid() {
  systemsubid_ = 0;
}
::google::protobuf::int32 rtn_status::systemsubid() const {
  // @@protoc_insertion_point(field_get:esunnysystem.rtn_status.systemsubid)
  return systemsubid_;
}
void rtn_status::set_systemsubid(::google::protobuf::int32 value) {
  
  systemsubid_ = value;
  // @@protoc_insertion_point(field_set:esunnysystem.rtn_status.systemsubid)
}

// string systemname = 3;
void rtn_status::clear_systemname() {
  systemname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& rtn_status::systemname() const {
  // @@protoc_insertion_point(field_get:esunnysystem.rtn_status.systemname)
  return systemname_.GetNoArena();
}
void rtn_status::set_systemname(const ::std::string& value) {
  
  systemname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:esunnysystem.rtn_status.systemname)
}
#if LANG_CXX11
void rtn_status::set_systemname(::std::string&& value) {
  
  systemname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:esunnysystem.rtn_status.systemname)
}
#endif
void rtn_status::set_systemname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  systemname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:esunnysystem.rtn_status.systemname)
}
void rtn_status::set_systemname(const char* value, size_t size) {
  
  systemname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:esunnysystem.rtn_status.systemname)
}
::std::string* rtn_status::mutable_systemname() {
  
  // @@protoc_insertion_point(field_mutable:esunnysystem.rtn_status.systemname)
  return systemname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* rtn_status::release_systemname() {
  // @@protoc_insertion_point(field_release:esunnysystem.rtn_status.systemname)
  
  return systemname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void rtn_status::set_allocated_systemname(::std::string* systemname) {
  if (systemname != NULL) {
    
  } else {
    
  }
  systemname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), systemname);
  // @@protoc_insertion_point(field_set_allocated:esunnysystem.rtn_status.systemname)
}

// sint32 id = 4;
void rtn_status::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 rtn_status::id() const {
  // @@protoc_insertion_point(field_get:esunnysystem.rtn_status.id)
  return id_;
}
void rtn_status::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:esunnysystem.rtn_status.id)
}

// string content = 5;
void rtn_status::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& rtn_status::content() const {
  // @@protoc_insertion_point(field_get:esunnysystem.rtn_status.content)
  return content_.GetNoArena();
}
void rtn_status::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:esunnysystem.rtn_status.content)
}
#if LANG_CXX11
void rtn_status::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:esunnysystem.rtn_status.content)
}
#endif
void rtn_status::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:esunnysystem.rtn_status.content)
}
void rtn_status::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:esunnysystem.rtn_status.content)
}
::std::string* rtn_status::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:esunnysystem.rtn_status.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* rtn_status::release_content() {
  // @@protoc_insertion_point(field_release:esunnysystem.rtn_status.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void rtn_status::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:esunnysystem.rtn_status.content)
}

// string localIP = 6;
void rtn_status::clear_localip() {
  localip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& rtn_status::localip() const {
  // @@protoc_insertion_point(field_get:esunnysystem.rtn_status.localIP)
  return localip_.GetNoArena();
}
void rtn_status::set_localip(const ::std::string& value) {
  
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:esunnysystem.rtn_status.localIP)
}
#if LANG_CXX11
void rtn_status::set_localip(::std::string&& value) {
  
  localip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:esunnysystem.rtn_status.localIP)
}
#endif
void rtn_status::set_localip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:esunnysystem.rtn_status.localIP)
}
void rtn_status::set_localip(const char* value, size_t size) {
  
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:esunnysystem.rtn_status.localIP)
}
::std::string* rtn_status::mutable_localip() {
  
  // @@protoc_insertion_point(field_mutable:esunnysystem.rtn_status.localIP)
  return localip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* rtn_status::release_localip() {
  // @@protoc_insertion_point(field_release:esunnysystem.rtn_status.localIP)
  
  return localip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void rtn_status::set_allocated_localip(::std::string* localip) {
  if (localip != NULL) {
    
  } else {
    
  }
  localip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localip);
  // @@protoc_insertion_point(field_set_allocated:esunnysystem.rtn_status.localIP)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace esunnysystem

// @@protoc_insertion_point(global_scope)
