// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quote_protocal.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "quote_protocal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace risk {
class quote_gateway_market_fieldDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<quote_gateway_market_field>
     _instance;
} _quote_gateway_market_field_default_instance_;
class req_quote_loginDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_quote_login>
     _instance;
} _req_quote_login_default_instance_;

namespace protobuf_quote_5fprotocal_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, tradingday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, instrumentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, exchangeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, exchangeinstid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, lastprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, presettlementprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, precloseprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, preopeninterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, openprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, highestprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, lowestprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, openinterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, closeprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, settlementprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, upperlimitprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, lowerlimitprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, predelta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, currdelta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, updatemillisec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, bidprice1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, bidvolume1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, askprice1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, askvolume1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, bidprice2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, bidvolume2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, askprice2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, askvolume2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, bidprice3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, bidvolume3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, askprice3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, askvolume3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, bidprice4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, bidvolume4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, askprice4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, askvolume4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, bidprice5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, bidvolume5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, askprice5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, askvolume5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, averageprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, actionday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quote_gateway_market_field, volumemultiple_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_quote_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_quote_login, riskerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_quote_login, password_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(quote_gateway_market_field)},
  { 50, -1, sizeof(req_quote_login)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_quote_gateway_market_field_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_quote_login_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "quote_protocal.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _quote_gateway_market_field_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_quote_gateway_market_field_default_instance_);_req_quote_login_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_quote_login_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024quote_protocal.proto\022\004risk\"\276\007\n\032quote_g"
      "ateway_market_field\022\022\n\nTradingDay\030\001 \001(\t\022"
      "\024\n\014InstrumentID\030\002 \001(\t\022\022\n\nExchangeID\030\003 \001("
      "\t\022\026\n\016ExchangeInstID\030\004 \001(\t\022\021\n\tLastPrice\030\005"
      " \001(\001\022\032\n\022PreSettlementPrice\030\006 \001(\001\022\025\n\rPreC"
      "losePrice\030\007 \001(\001\022\027\n\017PreOpenInterest\030\010 \001(\001"
      "\022\021\n\tOpenPrice\030\t \001(\001\022\024\n\014HighestPrice\030\n \001("
      "\001\022\023\n\013LowestPrice\030\013 \001(\001\022\016\n\006Volume\030\014 \001(\005\022\020"
      "\n\010Turnover\030\r \001(\001\022\024\n\014OpenInterest\030\016 \001(\001\022\022"
      "\n\nClosePrice\030\017 \001(\001\022\027\n\017SettlementPrice\030\020 "
      "\001(\001\022\027\n\017UpperLimitPrice\030\021 \001(\001\022\027\n\017LowerLim"
      "itPrice\030\022 \001(\001\022\020\n\010PreDelta\030\023 \001(\001\022\021\n\tCurrD"
      "elta\030\024 \001(\001\022\022\n\nUpdateTime\030\025 \001(\t\022\026\n\016Update"
      "Millisec\030\026 \001(\005\022\021\n\tBidPrice1\030\027 \001(\001\022\022\n\nBid"
      "Volume1\030\030 \001(\005\022\021\n\tAskPrice1\030\031 \001(\001\022\022\n\nAskV"
      "olume1\030\032 \001(\005\022\021\n\tBidPrice2\030\033 \001(\001\022\022\n\nBidVo"
      "lume2\030\034 \001(\005\022\021\n\tAskPrice2\030\035 \001(\001\022\022\n\nAskVol"
      "ume2\030\036 \001(\005\022\021\n\tBidPrice3\030\037 \001(\001\022\022\n\nBidVolu"
      "me3\030  \001(\005\022\021\n\tAskPrice3\030! \001(\001\022\022\n\nAskVolum"
      "e3\030\" \001(\005\022\021\n\tBidPrice4\030# \001(\001\022\022\n\nBidVolume"
      "4\030$ \001(\005\022\021\n\tAskPrice4\030% \001(\001\022\022\n\nAskVolume4"
      "\030& \001(\005\022\021\n\tBidPrice5\030\' \001(\001\022\022\n\nBidVolume5\030"
      "( \001(\005\022\021\n\tAskPrice5\030) \001(\001\022\022\n\nAskVolume5\030*"
      " \001(\005\022\024\n\014AveragePrice\030+ \001(\001\022\021\n\tActionDay\030"
      ", \001(\t\022\026\n\016VolumeMultiple\030- \001(\005\"5\n\017req_quo"
      "te_login\022\020\n\010riskerid\030\001 \001(\t\022\020\n\010password\030\002"
      " \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1052);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "quote_protocal.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_quote_5fprotocal_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int quote_gateway_market_field::kTradingDayFieldNumber;
const int quote_gateway_market_field::kInstrumentIDFieldNumber;
const int quote_gateway_market_field::kExchangeIDFieldNumber;
const int quote_gateway_market_field::kExchangeInstIDFieldNumber;
const int quote_gateway_market_field::kLastPriceFieldNumber;
const int quote_gateway_market_field::kPreSettlementPriceFieldNumber;
const int quote_gateway_market_field::kPreClosePriceFieldNumber;
const int quote_gateway_market_field::kPreOpenInterestFieldNumber;
const int quote_gateway_market_field::kOpenPriceFieldNumber;
const int quote_gateway_market_field::kHighestPriceFieldNumber;
const int quote_gateway_market_field::kLowestPriceFieldNumber;
const int quote_gateway_market_field::kVolumeFieldNumber;
const int quote_gateway_market_field::kTurnoverFieldNumber;
const int quote_gateway_market_field::kOpenInterestFieldNumber;
const int quote_gateway_market_field::kClosePriceFieldNumber;
const int quote_gateway_market_field::kSettlementPriceFieldNumber;
const int quote_gateway_market_field::kUpperLimitPriceFieldNumber;
const int quote_gateway_market_field::kLowerLimitPriceFieldNumber;
const int quote_gateway_market_field::kPreDeltaFieldNumber;
const int quote_gateway_market_field::kCurrDeltaFieldNumber;
const int quote_gateway_market_field::kUpdateTimeFieldNumber;
const int quote_gateway_market_field::kUpdateMillisecFieldNumber;
const int quote_gateway_market_field::kBidPrice1FieldNumber;
const int quote_gateway_market_field::kBidVolume1FieldNumber;
const int quote_gateway_market_field::kAskPrice1FieldNumber;
const int quote_gateway_market_field::kAskVolume1FieldNumber;
const int quote_gateway_market_field::kBidPrice2FieldNumber;
const int quote_gateway_market_field::kBidVolume2FieldNumber;
const int quote_gateway_market_field::kAskPrice2FieldNumber;
const int quote_gateway_market_field::kAskVolume2FieldNumber;
const int quote_gateway_market_field::kBidPrice3FieldNumber;
const int quote_gateway_market_field::kBidVolume3FieldNumber;
const int quote_gateway_market_field::kAskPrice3FieldNumber;
const int quote_gateway_market_field::kAskVolume3FieldNumber;
const int quote_gateway_market_field::kBidPrice4FieldNumber;
const int quote_gateway_market_field::kBidVolume4FieldNumber;
const int quote_gateway_market_field::kAskPrice4FieldNumber;
const int quote_gateway_market_field::kAskVolume4FieldNumber;
const int quote_gateway_market_field::kBidPrice5FieldNumber;
const int quote_gateway_market_field::kBidVolume5FieldNumber;
const int quote_gateway_market_field::kAskPrice5FieldNumber;
const int quote_gateway_market_field::kAskVolume5FieldNumber;
const int quote_gateway_market_field::kAveragePriceFieldNumber;
const int quote_gateway_market_field::kActionDayFieldNumber;
const int quote_gateway_market_field::kVolumeMultipleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

quote_gateway_market_field::quote_gateway_market_field()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_quote_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:risk.quote_gateway_market_field)
}
quote_gateway_market_field::quote_gateway_market_field(const quote_gateway_market_field& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tradingday().size() > 0) {
    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  instrumentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrumentid().size() > 0) {
    instrumentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrumentid_);
  }
  exchangeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchangeid().size() > 0) {
    exchangeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangeid_);
  }
  exchangeinstid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchangeinstid().size() > 0) {
    exchangeinstid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangeinstid_);
  }
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.updatetime().size() > 0) {
    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  actionday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.actionday().size() > 0) {
    actionday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actionday_);
  }
  ::memcpy(&lastprice_, &from.lastprice_,
    static_cast<size_t>(reinterpret_cast<char*>(&volumemultiple_) -
    reinterpret_cast<char*>(&lastprice_)) + sizeof(volumemultiple_));
  // @@protoc_insertion_point(copy_constructor:risk.quote_gateway_market_field)
}

void quote_gateway_market_field::SharedCtor() {
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrumentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeinstid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actionday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lastprice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volumemultiple_) -
      reinterpret_cast<char*>(&lastprice_)) + sizeof(volumemultiple_));
  _cached_size_ = 0;
}

quote_gateway_market_field::~quote_gateway_market_field() {
  // @@protoc_insertion_point(destructor:risk.quote_gateway_market_field)
  SharedDtor();
}

void quote_gateway_market_field::SharedDtor() {
  tradingday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrumentid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeinstid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actionday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void quote_gateway_market_field::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* quote_gateway_market_field::descriptor() {
  protobuf_quote_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_quote_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const quote_gateway_market_field& quote_gateway_market_field::default_instance() {
  protobuf_quote_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

quote_gateway_market_field* quote_gateway_market_field::New(::google::protobuf::Arena* arena) const {
  quote_gateway_market_field* n = new quote_gateway_market_field;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void quote_gateway_market_field::Clear() {
// @@protoc_insertion_point(message_clear_start:risk.quote_gateway_market_field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrumentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeinstid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actionday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lastprice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volumemultiple_) -
      reinterpret_cast<char*>(&lastprice_)) + sizeof(volumemultiple_));
  _internal_metadata_.Clear();
}

bool quote_gateway_market_field::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:risk.quote_gateway_market_field)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string TradingDay = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradingday().data(), static_cast<int>(this->tradingday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "risk.quote_gateway_market_field.TradingDay"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string InstrumentID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrumentid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrumentid().data(), static_cast<int>(this->instrumentid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "risk.quote_gateway_market_field.InstrumentID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ExchangeID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchangeid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchangeid().data(), static_cast<int>(this->exchangeid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "risk.quote_gateway_market_field.ExchangeID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ExchangeInstID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchangeinstid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchangeinstid().data(), static_cast<int>(this->exchangeinstid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "risk.quote_gateway_market_field.ExchangeInstID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double LastPrice = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lastprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PreSettlementPrice = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &presettlementprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PreClosePrice = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &precloseprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PreOpenInterest = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preopeninterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double OpenPrice = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double HighestPrice = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highestprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double LowestPrice = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowestprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Volume = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double Turnover = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double OpenInterest = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openinterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ClosePrice = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closeprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double SettlementPrice = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &settlementprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double UpperLimitPrice = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &upperlimitprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double LowerLimitPrice = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowerlimitprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PreDelta = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &predelta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double CurrDelta = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &currdelta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UpdateTime = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->updatetime().data(), static_cast<int>(this->updatetime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "risk.quote_gateway_market_field.UpdateTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 UpdateMillisec = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updatemillisec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double BidPrice1 = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BidVolume1 = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidvolume1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double AskPrice1 = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AskVolume1 = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askvolume1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double BidPrice2 = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(217u /* 217 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BidVolume2 = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidvolume2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double AskPrice2 = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(233u /* 233 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AskVolume2 = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askvolume2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double BidPrice3 = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(249u /* 249 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BidVolume3 = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidvolume3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double AskPrice3 = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 265 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AskVolume3 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askvolume3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double BidPrice4 = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 281 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BidVolume4 = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidvolume4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double AskPrice4 = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 297 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AskVolume4 = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askvolume4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double BidPrice5 = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 313 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BidVolume5 = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidvolume5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double AskPrice5 = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 329 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AskVolume5 = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askvolume5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double AveragePrice = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 345 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &averageprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ActionDay = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actionday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actionday().data(), static_cast<int>(this->actionday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "risk.quote_gateway_market_field.ActionDay"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 VolumeMultiple = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumemultiple_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:risk.quote_gateway_market_field)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:risk.quote_gateway_market_field)
  return false;
#undef DO_
}

void quote_gateway_market_field::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:risk.quote_gateway_market_field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string TradingDay = 1;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), static_cast<int>(this->tradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.TradingDay");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tradingday(), output);
  }

  // string InstrumentID = 2;
  if (this->instrumentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrumentid().data(), static_cast<int>(this->instrumentid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.InstrumentID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instrumentid(), output);
  }

  // string ExchangeID = 3;
  if (this->exchangeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangeid().data(), static_cast<int>(this->exchangeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.ExchangeID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->exchangeid(), output);
  }

  // string ExchangeInstID = 4;
  if (this->exchangeinstid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangeinstid().data(), static_cast<int>(this->exchangeinstid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.ExchangeInstID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchangeinstid(), output);
  }

  // double LastPrice = 5;
  if (this->lastprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lastprice(), output);
  }

  // double PreSettlementPrice = 6;
  if (this->presettlementprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->presettlementprice(), output);
  }

  // double PreClosePrice = 7;
  if (this->precloseprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->precloseprice(), output);
  }

  // double PreOpenInterest = 8;
  if (this->preopeninterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->preopeninterest(), output);
  }

  // double OpenPrice = 9;
  if (this->openprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->openprice(), output);
  }

  // double HighestPrice = 10;
  if (this->highestprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->highestprice(), output);
  }

  // double LowestPrice = 11;
  if (this->lowestprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->lowestprice(), output);
  }

  // int32 Volume = 12;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->volume(), output);
  }

  // double Turnover = 13;
  if (this->turnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->turnover(), output);
  }

  // double OpenInterest = 14;
  if (this->openinterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->openinterest(), output);
  }

  // double ClosePrice = 15;
  if (this->closeprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->closeprice(), output);
  }

  // double SettlementPrice = 16;
  if (this->settlementprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->settlementprice(), output);
  }

  // double UpperLimitPrice = 17;
  if (this->upperlimitprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->upperlimitprice(), output);
  }

  // double LowerLimitPrice = 18;
  if (this->lowerlimitprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->lowerlimitprice(), output);
  }

  // double PreDelta = 19;
  if (this->predelta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->predelta(), output);
  }

  // double CurrDelta = 20;
  if (this->currdelta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->currdelta(), output);
  }

  // string UpdateTime = 21;
  if (this->updatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatetime().data(), static_cast<int>(this->updatetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.UpdateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->updatetime(), output);
  }

  // int32 UpdateMillisec = 22;
  if (this->updatemillisec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->updatemillisec(), output);
  }

  // double BidPrice1 = 23;
  if (this->bidprice1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->bidprice1(), output);
  }

  // int32 BidVolume1 = 24;
  if (this->bidvolume1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->bidvolume1(), output);
  }

  // double AskPrice1 = 25;
  if (this->askprice1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->askprice1(), output);
  }

  // int32 AskVolume1 = 26;
  if (this->askvolume1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->askvolume1(), output);
  }

  // double BidPrice2 = 27;
  if (this->bidprice2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->bidprice2(), output);
  }

  // int32 BidVolume2 = 28;
  if (this->bidvolume2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->bidvolume2(), output);
  }

  // double AskPrice2 = 29;
  if (this->askprice2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->askprice2(), output);
  }

  // int32 AskVolume2 = 30;
  if (this->askvolume2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->askvolume2(), output);
  }

  // double BidPrice3 = 31;
  if (this->bidprice3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->bidprice3(), output);
  }

  // int32 BidVolume3 = 32;
  if (this->bidvolume3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->bidvolume3(), output);
  }

  // double AskPrice3 = 33;
  if (this->askprice3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(33, this->askprice3(), output);
  }

  // int32 AskVolume3 = 34;
  if (this->askvolume3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->askvolume3(), output);
  }

  // double BidPrice4 = 35;
  if (this->bidprice4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(35, this->bidprice4(), output);
  }

  // int32 BidVolume4 = 36;
  if (this->bidvolume4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->bidvolume4(), output);
  }

  // double AskPrice4 = 37;
  if (this->askprice4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(37, this->askprice4(), output);
  }

  // int32 AskVolume4 = 38;
  if (this->askvolume4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->askvolume4(), output);
  }

  // double BidPrice5 = 39;
  if (this->bidprice5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(39, this->bidprice5(), output);
  }

  // int32 BidVolume5 = 40;
  if (this->bidvolume5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->bidvolume5(), output);
  }

  // double AskPrice5 = 41;
  if (this->askprice5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(41, this->askprice5(), output);
  }

  // int32 AskVolume5 = 42;
  if (this->askvolume5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->askvolume5(), output);
  }

  // double AveragePrice = 43;
  if (this->averageprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(43, this->averageprice(), output);
  }

  // string ActionDay = 44;
  if (this->actionday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actionday().data(), static_cast<int>(this->actionday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.ActionDay");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      44, this->actionday(), output);
  }

  // int32 VolumeMultiple = 45;
  if (this->volumemultiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->volumemultiple(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:risk.quote_gateway_market_field)
}

::google::protobuf::uint8* quote_gateway_market_field::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:risk.quote_gateway_market_field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string TradingDay = 1;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), static_cast<int>(this->tradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.TradingDay");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tradingday(), target);
  }

  // string InstrumentID = 2;
  if (this->instrumentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrumentid().data(), static_cast<int>(this->instrumentid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.InstrumentID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instrumentid(), target);
  }

  // string ExchangeID = 3;
  if (this->exchangeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangeid().data(), static_cast<int>(this->exchangeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.ExchangeID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->exchangeid(), target);
  }

  // string ExchangeInstID = 4;
  if (this->exchangeinstid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangeinstid().data(), static_cast<int>(this->exchangeinstid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.ExchangeInstID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchangeinstid(), target);
  }

  // double LastPrice = 5;
  if (this->lastprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lastprice(), target);
  }

  // double PreSettlementPrice = 6;
  if (this->presettlementprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->presettlementprice(), target);
  }

  // double PreClosePrice = 7;
  if (this->precloseprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->precloseprice(), target);
  }

  // double PreOpenInterest = 8;
  if (this->preopeninterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->preopeninterest(), target);
  }

  // double OpenPrice = 9;
  if (this->openprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->openprice(), target);
  }

  // double HighestPrice = 10;
  if (this->highestprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->highestprice(), target);
  }

  // double LowestPrice = 11;
  if (this->lowestprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->lowestprice(), target);
  }

  // int32 Volume = 12;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->volume(), target);
  }

  // double Turnover = 13;
  if (this->turnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->turnover(), target);
  }

  // double OpenInterest = 14;
  if (this->openinterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->openinterest(), target);
  }

  // double ClosePrice = 15;
  if (this->closeprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->closeprice(), target);
  }

  // double SettlementPrice = 16;
  if (this->settlementprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->settlementprice(), target);
  }

  // double UpperLimitPrice = 17;
  if (this->upperlimitprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->upperlimitprice(), target);
  }

  // double LowerLimitPrice = 18;
  if (this->lowerlimitprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->lowerlimitprice(), target);
  }

  // double PreDelta = 19;
  if (this->predelta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->predelta(), target);
  }

  // double CurrDelta = 20;
  if (this->currdelta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->currdelta(), target);
  }

  // string UpdateTime = 21;
  if (this->updatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatetime().data(), static_cast<int>(this->updatetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.UpdateTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->updatetime(), target);
  }

  // int32 UpdateMillisec = 22;
  if (this->updatemillisec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->updatemillisec(), target);
  }

  // double BidPrice1 = 23;
  if (this->bidprice1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->bidprice1(), target);
  }

  // int32 BidVolume1 = 24;
  if (this->bidvolume1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->bidvolume1(), target);
  }

  // double AskPrice1 = 25;
  if (this->askprice1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(25, this->askprice1(), target);
  }

  // int32 AskVolume1 = 26;
  if (this->askvolume1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->askvolume1(), target);
  }

  // double BidPrice2 = 27;
  if (this->bidprice2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(27, this->bidprice2(), target);
  }

  // int32 BidVolume2 = 28;
  if (this->bidvolume2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->bidvolume2(), target);
  }

  // double AskPrice2 = 29;
  if (this->askprice2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(29, this->askprice2(), target);
  }

  // int32 AskVolume2 = 30;
  if (this->askvolume2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->askvolume2(), target);
  }

  // double BidPrice3 = 31;
  if (this->bidprice3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->bidprice3(), target);
  }

  // int32 BidVolume3 = 32;
  if (this->bidvolume3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->bidvolume3(), target);
  }

  // double AskPrice3 = 33;
  if (this->askprice3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(33, this->askprice3(), target);
  }

  // int32 AskVolume3 = 34;
  if (this->askvolume3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->askvolume3(), target);
  }

  // double BidPrice4 = 35;
  if (this->bidprice4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(35, this->bidprice4(), target);
  }

  // int32 BidVolume4 = 36;
  if (this->bidvolume4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->bidvolume4(), target);
  }

  // double AskPrice4 = 37;
  if (this->askprice4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(37, this->askprice4(), target);
  }

  // int32 AskVolume4 = 38;
  if (this->askvolume4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->askvolume4(), target);
  }

  // double BidPrice5 = 39;
  if (this->bidprice5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(39, this->bidprice5(), target);
  }

  // int32 BidVolume5 = 40;
  if (this->bidvolume5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->bidvolume5(), target);
  }

  // double AskPrice5 = 41;
  if (this->askprice5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(41, this->askprice5(), target);
  }

  // int32 AskVolume5 = 42;
  if (this->askvolume5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->askvolume5(), target);
  }

  // double AveragePrice = 43;
  if (this->averageprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(43, this->averageprice(), target);
  }

  // string ActionDay = 44;
  if (this->actionday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actionday().data(), static_cast<int>(this->actionday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.quote_gateway_market_field.ActionDay");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        44, this->actionday(), target);
  }

  // int32 VolumeMultiple = 45;
  if (this->volumemultiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->volumemultiple(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risk.quote_gateway_market_field)
  return target;
}

size_t quote_gateway_market_field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risk.quote_gateway_market_field)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string TradingDay = 1;
  if (this->tradingday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradingday());
  }

  // string InstrumentID = 2;
  if (this->instrumentid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrumentid());
  }

  // string ExchangeID = 3;
  if (this->exchangeid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchangeid());
  }

  // string ExchangeInstID = 4;
  if (this->exchangeinstid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchangeinstid());
  }

  // string UpdateTime = 21;
  if (this->updatetime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatetime());
  }

  // string ActionDay = 44;
  if (this->actionday().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actionday());
  }

  // double LastPrice = 5;
  if (this->lastprice() != 0) {
    total_size += 1 + 8;
  }

  // double PreSettlementPrice = 6;
  if (this->presettlementprice() != 0) {
    total_size += 1 + 8;
  }

  // double PreClosePrice = 7;
  if (this->precloseprice() != 0) {
    total_size += 1 + 8;
  }

  // double PreOpenInterest = 8;
  if (this->preopeninterest() != 0) {
    total_size += 1 + 8;
  }

  // double OpenPrice = 9;
  if (this->openprice() != 0) {
    total_size += 1 + 8;
  }

  // double HighestPrice = 10;
  if (this->highestprice() != 0) {
    total_size += 1 + 8;
  }

  // double LowestPrice = 11;
  if (this->lowestprice() != 0) {
    total_size += 1 + 8;
  }

  // double Turnover = 13;
  if (this->turnover() != 0) {
    total_size += 1 + 8;
  }

  // double OpenInterest = 14;
  if (this->openinterest() != 0) {
    total_size += 1 + 8;
  }

  // double ClosePrice = 15;
  if (this->closeprice() != 0) {
    total_size += 1 + 8;
  }

  // double SettlementPrice = 16;
  if (this->settlementprice() != 0) {
    total_size += 2 + 8;
  }

  // double UpperLimitPrice = 17;
  if (this->upperlimitprice() != 0) {
    total_size += 2 + 8;
  }

  // int32 Volume = 12;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // int32 UpdateMillisec = 22;
  if (this->updatemillisec() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->updatemillisec());
  }

  // double LowerLimitPrice = 18;
  if (this->lowerlimitprice() != 0) {
    total_size += 2 + 8;
  }

  // double PreDelta = 19;
  if (this->predelta() != 0) {
    total_size += 2 + 8;
  }

  // double CurrDelta = 20;
  if (this->currdelta() != 0) {
    total_size += 2 + 8;
  }

  // double BidPrice1 = 23;
  if (this->bidprice1() != 0) {
    total_size += 2 + 8;
  }

  // double AskPrice1 = 25;
  if (this->askprice1() != 0) {
    total_size += 2 + 8;
  }

  // int32 BidVolume1 = 24;
  if (this->bidvolume1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidvolume1());
  }

  // int32 AskVolume1 = 26;
  if (this->askvolume1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askvolume1());
  }

  // double BidPrice2 = 27;
  if (this->bidprice2() != 0) {
    total_size += 2 + 8;
  }

  // double AskPrice2 = 29;
  if (this->askprice2() != 0) {
    total_size += 2 + 8;
  }

  // int32 BidVolume2 = 28;
  if (this->bidvolume2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidvolume2());
  }

  // int32 AskVolume2 = 30;
  if (this->askvolume2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askvolume2());
  }

  // double BidPrice3 = 31;
  if (this->bidprice3() != 0) {
    total_size += 2 + 8;
  }

  // double AskPrice3 = 33;
  if (this->askprice3() != 0) {
    total_size += 2 + 8;
  }

  // int32 BidVolume3 = 32;
  if (this->bidvolume3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidvolume3());
  }

  // int32 AskVolume3 = 34;
  if (this->askvolume3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askvolume3());
  }

  // double BidPrice4 = 35;
  if (this->bidprice4() != 0) {
    total_size += 2 + 8;
  }

  // double AskPrice4 = 37;
  if (this->askprice4() != 0) {
    total_size += 2 + 8;
  }

  // int32 BidVolume4 = 36;
  if (this->bidvolume4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidvolume4());
  }

  // int32 AskVolume4 = 38;
  if (this->askvolume4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askvolume4());
  }

  // double BidPrice5 = 39;
  if (this->bidprice5() != 0) {
    total_size += 2 + 8;
  }

  // double AskPrice5 = 41;
  if (this->askprice5() != 0) {
    total_size += 2 + 8;
  }

  // int32 BidVolume5 = 40;
  if (this->bidvolume5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidvolume5());
  }

  // int32 AskVolume5 = 42;
  if (this->askvolume5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askvolume5());
  }

  // double AveragePrice = 43;
  if (this->averageprice() != 0) {
    total_size += 2 + 8;
  }

  // int32 VolumeMultiple = 45;
  if (this->volumemultiple() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumemultiple());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void quote_gateway_market_field::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:risk.quote_gateway_market_field)
  GOOGLE_DCHECK_NE(&from, this);
  const quote_gateway_market_field* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const quote_gateway_market_field>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:risk.quote_gateway_market_field)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:risk.quote_gateway_market_field)
    MergeFrom(*source);
  }
}

void quote_gateway_market_field::MergeFrom(const quote_gateway_market_field& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:risk.quote_gateway_market_field)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tradingday().size() > 0) {

    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  if (from.instrumentid().size() > 0) {

    instrumentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrumentid_);
  }
  if (from.exchangeid().size() > 0) {

    exchangeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangeid_);
  }
  if (from.exchangeinstid().size() > 0) {

    exchangeinstid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangeinstid_);
  }
  if (from.updatetime().size() > 0) {

    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  if (from.actionday().size() > 0) {

    actionday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actionday_);
  }
  if (from.lastprice() != 0) {
    set_lastprice(from.lastprice());
  }
  if (from.presettlementprice() != 0) {
    set_presettlementprice(from.presettlementprice());
  }
  if (from.precloseprice() != 0) {
    set_precloseprice(from.precloseprice());
  }
  if (from.preopeninterest() != 0) {
    set_preopeninterest(from.preopeninterest());
  }
  if (from.openprice() != 0) {
    set_openprice(from.openprice());
  }
  if (from.highestprice() != 0) {
    set_highestprice(from.highestprice());
  }
  if (from.lowestprice() != 0) {
    set_lowestprice(from.lowestprice());
  }
  if (from.turnover() != 0) {
    set_turnover(from.turnover());
  }
  if (from.openinterest() != 0) {
    set_openinterest(from.openinterest());
  }
  if (from.closeprice() != 0) {
    set_closeprice(from.closeprice());
  }
  if (from.settlementprice() != 0) {
    set_settlementprice(from.settlementprice());
  }
  if (from.upperlimitprice() != 0) {
    set_upperlimitprice(from.upperlimitprice());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.updatemillisec() != 0) {
    set_updatemillisec(from.updatemillisec());
  }
  if (from.lowerlimitprice() != 0) {
    set_lowerlimitprice(from.lowerlimitprice());
  }
  if (from.predelta() != 0) {
    set_predelta(from.predelta());
  }
  if (from.currdelta() != 0) {
    set_currdelta(from.currdelta());
  }
  if (from.bidprice1() != 0) {
    set_bidprice1(from.bidprice1());
  }
  if (from.askprice1() != 0) {
    set_askprice1(from.askprice1());
  }
  if (from.bidvolume1() != 0) {
    set_bidvolume1(from.bidvolume1());
  }
  if (from.askvolume1() != 0) {
    set_askvolume1(from.askvolume1());
  }
  if (from.bidprice2() != 0) {
    set_bidprice2(from.bidprice2());
  }
  if (from.askprice2() != 0) {
    set_askprice2(from.askprice2());
  }
  if (from.bidvolume2() != 0) {
    set_bidvolume2(from.bidvolume2());
  }
  if (from.askvolume2() != 0) {
    set_askvolume2(from.askvolume2());
  }
  if (from.bidprice3() != 0) {
    set_bidprice3(from.bidprice3());
  }
  if (from.askprice3() != 0) {
    set_askprice3(from.askprice3());
  }
  if (from.bidvolume3() != 0) {
    set_bidvolume3(from.bidvolume3());
  }
  if (from.askvolume3() != 0) {
    set_askvolume3(from.askvolume3());
  }
  if (from.bidprice4() != 0) {
    set_bidprice4(from.bidprice4());
  }
  if (from.askprice4() != 0) {
    set_askprice4(from.askprice4());
  }
  if (from.bidvolume4() != 0) {
    set_bidvolume4(from.bidvolume4());
  }
  if (from.askvolume4() != 0) {
    set_askvolume4(from.askvolume4());
  }
  if (from.bidprice5() != 0) {
    set_bidprice5(from.bidprice5());
  }
  if (from.askprice5() != 0) {
    set_askprice5(from.askprice5());
  }
  if (from.bidvolume5() != 0) {
    set_bidvolume5(from.bidvolume5());
  }
  if (from.askvolume5() != 0) {
    set_askvolume5(from.askvolume5());
  }
  if (from.averageprice() != 0) {
    set_averageprice(from.averageprice());
  }
  if (from.volumemultiple() != 0) {
    set_volumemultiple(from.volumemultiple());
  }
}

void quote_gateway_market_field::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:risk.quote_gateway_market_field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void quote_gateway_market_field::CopyFrom(const quote_gateway_market_field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risk.quote_gateway_market_field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool quote_gateway_market_field::IsInitialized() const {
  return true;
}

void quote_gateway_market_field::Swap(quote_gateway_market_field* other) {
  if (other == this) return;
  InternalSwap(other);
}
void quote_gateway_market_field::InternalSwap(quote_gateway_market_field* other) {
  using std::swap;
  tradingday_.Swap(&other->tradingday_);
  instrumentid_.Swap(&other->instrumentid_);
  exchangeid_.Swap(&other->exchangeid_);
  exchangeinstid_.Swap(&other->exchangeinstid_);
  updatetime_.Swap(&other->updatetime_);
  actionday_.Swap(&other->actionday_);
  swap(lastprice_, other->lastprice_);
  swap(presettlementprice_, other->presettlementprice_);
  swap(precloseprice_, other->precloseprice_);
  swap(preopeninterest_, other->preopeninterest_);
  swap(openprice_, other->openprice_);
  swap(highestprice_, other->highestprice_);
  swap(lowestprice_, other->lowestprice_);
  swap(turnover_, other->turnover_);
  swap(openinterest_, other->openinterest_);
  swap(closeprice_, other->closeprice_);
  swap(settlementprice_, other->settlementprice_);
  swap(upperlimitprice_, other->upperlimitprice_);
  swap(volume_, other->volume_);
  swap(updatemillisec_, other->updatemillisec_);
  swap(lowerlimitprice_, other->lowerlimitprice_);
  swap(predelta_, other->predelta_);
  swap(currdelta_, other->currdelta_);
  swap(bidprice1_, other->bidprice1_);
  swap(askprice1_, other->askprice1_);
  swap(bidvolume1_, other->bidvolume1_);
  swap(askvolume1_, other->askvolume1_);
  swap(bidprice2_, other->bidprice2_);
  swap(askprice2_, other->askprice2_);
  swap(bidvolume2_, other->bidvolume2_);
  swap(askvolume2_, other->askvolume2_);
  swap(bidprice3_, other->bidprice3_);
  swap(askprice3_, other->askprice3_);
  swap(bidvolume3_, other->bidvolume3_);
  swap(askvolume3_, other->askvolume3_);
  swap(bidprice4_, other->bidprice4_);
  swap(askprice4_, other->askprice4_);
  swap(bidvolume4_, other->bidvolume4_);
  swap(askvolume4_, other->askvolume4_);
  swap(bidprice5_, other->bidprice5_);
  swap(askprice5_, other->askprice5_);
  swap(bidvolume5_, other->bidvolume5_);
  swap(askvolume5_, other->askvolume5_);
  swap(averageprice_, other->averageprice_);
  swap(volumemultiple_, other->volumemultiple_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata quote_gateway_market_field::GetMetadata() const {
  protobuf_quote_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_quote_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// quote_gateway_market_field

// string TradingDay = 1;
void quote_gateway_market_field::clear_tradingday() {
  tradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quote_gateway_market_field::tradingday() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.TradingDay)
  return tradingday_.GetNoArena();
}
void quote_gateway_market_field::set_tradingday(const ::std::string& value) {
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.TradingDay)
}
#if LANG_CXX11
void quote_gateway_market_field::set_tradingday(::std::string&& value) {
  
  tradingday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:risk.quote_gateway_market_field.TradingDay)
}
#endif
void quote_gateway_market_field::set_tradingday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:risk.quote_gateway_market_field.TradingDay)
}
void quote_gateway_market_field::set_tradingday(const char* value, size_t size) {
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:risk.quote_gateway_market_field.TradingDay)
}
::std::string* quote_gateway_market_field::mutable_tradingday() {
  
  // @@protoc_insertion_point(field_mutable:risk.quote_gateway_market_field.TradingDay)
  return tradingday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quote_gateway_market_field::release_tradingday() {
  // @@protoc_insertion_point(field_release:risk.quote_gateway_market_field.TradingDay)
  
  return tradingday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quote_gateway_market_field::set_allocated_tradingday(::std::string* tradingday) {
  if (tradingday != NULL) {
    
  } else {
    
  }
  tradingday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradingday);
  // @@protoc_insertion_point(field_set_allocated:risk.quote_gateway_market_field.TradingDay)
}

// string InstrumentID = 2;
void quote_gateway_market_field::clear_instrumentid() {
  instrumentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quote_gateway_market_field::instrumentid() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.InstrumentID)
  return instrumentid_.GetNoArena();
}
void quote_gateway_market_field::set_instrumentid(const ::std::string& value) {
  
  instrumentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.InstrumentID)
}
#if LANG_CXX11
void quote_gateway_market_field::set_instrumentid(::std::string&& value) {
  
  instrumentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:risk.quote_gateway_market_field.InstrumentID)
}
#endif
void quote_gateway_market_field::set_instrumentid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instrumentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:risk.quote_gateway_market_field.InstrumentID)
}
void quote_gateway_market_field::set_instrumentid(const char* value, size_t size) {
  
  instrumentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:risk.quote_gateway_market_field.InstrumentID)
}
::std::string* quote_gateway_market_field::mutable_instrumentid() {
  
  // @@protoc_insertion_point(field_mutable:risk.quote_gateway_market_field.InstrumentID)
  return instrumentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quote_gateway_market_field::release_instrumentid() {
  // @@protoc_insertion_point(field_release:risk.quote_gateway_market_field.InstrumentID)
  
  return instrumentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quote_gateway_market_field::set_allocated_instrumentid(::std::string* instrumentid) {
  if (instrumentid != NULL) {
    
  } else {
    
  }
  instrumentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrumentid);
  // @@protoc_insertion_point(field_set_allocated:risk.quote_gateway_market_field.InstrumentID)
}

// string ExchangeID = 3;
void quote_gateway_market_field::clear_exchangeid() {
  exchangeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quote_gateway_market_field::exchangeid() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.ExchangeID)
  return exchangeid_.GetNoArena();
}
void quote_gateway_market_field::set_exchangeid(const ::std::string& value) {
  
  exchangeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.ExchangeID)
}
#if LANG_CXX11
void quote_gateway_market_field::set_exchangeid(::std::string&& value) {
  
  exchangeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:risk.quote_gateway_market_field.ExchangeID)
}
#endif
void quote_gateway_market_field::set_exchangeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchangeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:risk.quote_gateway_market_field.ExchangeID)
}
void quote_gateway_market_field::set_exchangeid(const char* value, size_t size) {
  
  exchangeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:risk.quote_gateway_market_field.ExchangeID)
}
::std::string* quote_gateway_market_field::mutable_exchangeid() {
  
  // @@protoc_insertion_point(field_mutable:risk.quote_gateway_market_field.ExchangeID)
  return exchangeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quote_gateway_market_field::release_exchangeid() {
  // @@protoc_insertion_point(field_release:risk.quote_gateway_market_field.ExchangeID)
  
  return exchangeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quote_gateway_market_field::set_allocated_exchangeid(::std::string* exchangeid) {
  if (exchangeid != NULL) {
    
  } else {
    
  }
  exchangeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangeid);
  // @@protoc_insertion_point(field_set_allocated:risk.quote_gateway_market_field.ExchangeID)
}

// string ExchangeInstID = 4;
void quote_gateway_market_field::clear_exchangeinstid() {
  exchangeinstid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quote_gateway_market_field::exchangeinstid() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.ExchangeInstID)
  return exchangeinstid_.GetNoArena();
}
void quote_gateway_market_field::set_exchangeinstid(const ::std::string& value) {
  
  exchangeinstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.ExchangeInstID)
}
#if LANG_CXX11
void quote_gateway_market_field::set_exchangeinstid(::std::string&& value) {
  
  exchangeinstid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:risk.quote_gateway_market_field.ExchangeInstID)
}
#endif
void quote_gateway_market_field::set_exchangeinstid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchangeinstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:risk.quote_gateway_market_field.ExchangeInstID)
}
void quote_gateway_market_field::set_exchangeinstid(const char* value, size_t size) {
  
  exchangeinstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:risk.quote_gateway_market_field.ExchangeInstID)
}
::std::string* quote_gateway_market_field::mutable_exchangeinstid() {
  
  // @@protoc_insertion_point(field_mutable:risk.quote_gateway_market_field.ExchangeInstID)
  return exchangeinstid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quote_gateway_market_field::release_exchangeinstid() {
  // @@protoc_insertion_point(field_release:risk.quote_gateway_market_field.ExchangeInstID)
  
  return exchangeinstid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quote_gateway_market_field::set_allocated_exchangeinstid(::std::string* exchangeinstid) {
  if (exchangeinstid != NULL) {
    
  } else {
    
  }
  exchangeinstid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangeinstid);
  // @@protoc_insertion_point(field_set_allocated:risk.quote_gateway_market_field.ExchangeInstID)
}

// double LastPrice = 5;
void quote_gateway_market_field::clear_lastprice() {
  lastprice_ = 0;
}
double quote_gateway_market_field::lastprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.LastPrice)
  return lastprice_;
}
void quote_gateway_market_field::set_lastprice(double value) {
  
  lastprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.LastPrice)
}

// double PreSettlementPrice = 6;
void quote_gateway_market_field::clear_presettlementprice() {
  presettlementprice_ = 0;
}
double quote_gateway_market_field::presettlementprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.PreSettlementPrice)
  return presettlementprice_;
}
void quote_gateway_market_field::set_presettlementprice(double value) {
  
  presettlementprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.PreSettlementPrice)
}

// double PreClosePrice = 7;
void quote_gateway_market_field::clear_precloseprice() {
  precloseprice_ = 0;
}
double quote_gateway_market_field::precloseprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.PreClosePrice)
  return precloseprice_;
}
void quote_gateway_market_field::set_precloseprice(double value) {
  
  precloseprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.PreClosePrice)
}

// double PreOpenInterest = 8;
void quote_gateway_market_field::clear_preopeninterest() {
  preopeninterest_ = 0;
}
double quote_gateway_market_field::preopeninterest() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.PreOpenInterest)
  return preopeninterest_;
}
void quote_gateway_market_field::set_preopeninterest(double value) {
  
  preopeninterest_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.PreOpenInterest)
}

// double OpenPrice = 9;
void quote_gateway_market_field::clear_openprice() {
  openprice_ = 0;
}
double quote_gateway_market_field::openprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.OpenPrice)
  return openprice_;
}
void quote_gateway_market_field::set_openprice(double value) {
  
  openprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.OpenPrice)
}

// double HighestPrice = 10;
void quote_gateway_market_field::clear_highestprice() {
  highestprice_ = 0;
}
double quote_gateway_market_field::highestprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.HighestPrice)
  return highestprice_;
}
void quote_gateway_market_field::set_highestprice(double value) {
  
  highestprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.HighestPrice)
}

// double LowestPrice = 11;
void quote_gateway_market_field::clear_lowestprice() {
  lowestprice_ = 0;
}
double quote_gateway_market_field::lowestprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.LowestPrice)
  return lowestprice_;
}
void quote_gateway_market_field::set_lowestprice(double value) {
  
  lowestprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.LowestPrice)
}

// int32 Volume = 12;
void quote_gateway_market_field::clear_volume() {
  volume_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::volume() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.Volume)
  return volume_;
}
void quote_gateway_market_field::set_volume(::google::protobuf::int32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.Volume)
}

// double Turnover = 13;
void quote_gateway_market_field::clear_turnover() {
  turnover_ = 0;
}
double quote_gateway_market_field::turnover() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.Turnover)
  return turnover_;
}
void quote_gateway_market_field::set_turnover(double value) {
  
  turnover_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.Turnover)
}

// double OpenInterest = 14;
void quote_gateway_market_field::clear_openinterest() {
  openinterest_ = 0;
}
double quote_gateway_market_field::openinterest() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.OpenInterest)
  return openinterest_;
}
void quote_gateway_market_field::set_openinterest(double value) {
  
  openinterest_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.OpenInterest)
}

// double ClosePrice = 15;
void quote_gateway_market_field::clear_closeprice() {
  closeprice_ = 0;
}
double quote_gateway_market_field::closeprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.ClosePrice)
  return closeprice_;
}
void quote_gateway_market_field::set_closeprice(double value) {
  
  closeprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.ClosePrice)
}

// double SettlementPrice = 16;
void quote_gateway_market_field::clear_settlementprice() {
  settlementprice_ = 0;
}
double quote_gateway_market_field::settlementprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.SettlementPrice)
  return settlementprice_;
}
void quote_gateway_market_field::set_settlementprice(double value) {
  
  settlementprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.SettlementPrice)
}

// double UpperLimitPrice = 17;
void quote_gateway_market_field::clear_upperlimitprice() {
  upperlimitprice_ = 0;
}
double quote_gateway_market_field::upperlimitprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.UpperLimitPrice)
  return upperlimitprice_;
}
void quote_gateway_market_field::set_upperlimitprice(double value) {
  
  upperlimitprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.UpperLimitPrice)
}

// double LowerLimitPrice = 18;
void quote_gateway_market_field::clear_lowerlimitprice() {
  lowerlimitprice_ = 0;
}
double quote_gateway_market_field::lowerlimitprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.LowerLimitPrice)
  return lowerlimitprice_;
}
void quote_gateway_market_field::set_lowerlimitprice(double value) {
  
  lowerlimitprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.LowerLimitPrice)
}

// double PreDelta = 19;
void quote_gateway_market_field::clear_predelta() {
  predelta_ = 0;
}
double quote_gateway_market_field::predelta() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.PreDelta)
  return predelta_;
}
void quote_gateway_market_field::set_predelta(double value) {
  
  predelta_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.PreDelta)
}

// double CurrDelta = 20;
void quote_gateway_market_field::clear_currdelta() {
  currdelta_ = 0;
}
double quote_gateway_market_field::currdelta() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.CurrDelta)
  return currdelta_;
}
void quote_gateway_market_field::set_currdelta(double value) {
  
  currdelta_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.CurrDelta)
}

// string UpdateTime = 21;
void quote_gateway_market_field::clear_updatetime() {
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quote_gateway_market_field::updatetime() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.UpdateTime)
  return updatetime_.GetNoArena();
}
void quote_gateway_market_field::set_updatetime(const ::std::string& value) {
  
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.UpdateTime)
}
#if LANG_CXX11
void quote_gateway_market_field::set_updatetime(::std::string&& value) {
  
  updatetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:risk.quote_gateway_market_field.UpdateTime)
}
#endif
void quote_gateway_market_field::set_updatetime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:risk.quote_gateway_market_field.UpdateTime)
}
void quote_gateway_market_field::set_updatetime(const char* value, size_t size) {
  
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:risk.quote_gateway_market_field.UpdateTime)
}
::std::string* quote_gateway_market_field::mutable_updatetime() {
  
  // @@protoc_insertion_point(field_mutable:risk.quote_gateway_market_field.UpdateTime)
  return updatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quote_gateway_market_field::release_updatetime() {
  // @@protoc_insertion_point(field_release:risk.quote_gateway_market_field.UpdateTime)
  
  return updatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quote_gateway_market_field::set_allocated_updatetime(::std::string* updatetime) {
  if (updatetime != NULL) {
    
  } else {
    
  }
  updatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updatetime);
  // @@protoc_insertion_point(field_set_allocated:risk.quote_gateway_market_field.UpdateTime)
}

// int32 UpdateMillisec = 22;
void quote_gateway_market_field::clear_updatemillisec() {
  updatemillisec_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::updatemillisec() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.UpdateMillisec)
  return updatemillisec_;
}
void quote_gateway_market_field::set_updatemillisec(::google::protobuf::int32 value) {
  
  updatemillisec_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.UpdateMillisec)
}

// double BidPrice1 = 23;
void quote_gateway_market_field::clear_bidprice1() {
  bidprice1_ = 0;
}
double quote_gateway_market_field::bidprice1() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.BidPrice1)
  return bidprice1_;
}
void quote_gateway_market_field::set_bidprice1(double value) {
  
  bidprice1_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.BidPrice1)
}

// int32 BidVolume1 = 24;
void quote_gateway_market_field::clear_bidvolume1() {
  bidvolume1_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::bidvolume1() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.BidVolume1)
  return bidvolume1_;
}
void quote_gateway_market_field::set_bidvolume1(::google::protobuf::int32 value) {
  
  bidvolume1_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.BidVolume1)
}

// double AskPrice1 = 25;
void quote_gateway_market_field::clear_askprice1() {
  askprice1_ = 0;
}
double quote_gateway_market_field::askprice1() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AskPrice1)
  return askprice1_;
}
void quote_gateway_market_field::set_askprice1(double value) {
  
  askprice1_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AskPrice1)
}

// int32 AskVolume1 = 26;
void quote_gateway_market_field::clear_askvolume1() {
  askvolume1_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::askvolume1() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AskVolume1)
  return askvolume1_;
}
void quote_gateway_market_field::set_askvolume1(::google::protobuf::int32 value) {
  
  askvolume1_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AskVolume1)
}

// double BidPrice2 = 27;
void quote_gateway_market_field::clear_bidprice2() {
  bidprice2_ = 0;
}
double quote_gateway_market_field::bidprice2() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.BidPrice2)
  return bidprice2_;
}
void quote_gateway_market_field::set_bidprice2(double value) {
  
  bidprice2_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.BidPrice2)
}

// int32 BidVolume2 = 28;
void quote_gateway_market_field::clear_bidvolume2() {
  bidvolume2_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::bidvolume2() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.BidVolume2)
  return bidvolume2_;
}
void quote_gateway_market_field::set_bidvolume2(::google::protobuf::int32 value) {
  
  bidvolume2_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.BidVolume2)
}

// double AskPrice2 = 29;
void quote_gateway_market_field::clear_askprice2() {
  askprice2_ = 0;
}
double quote_gateway_market_field::askprice2() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AskPrice2)
  return askprice2_;
}
void quote_gateway_market_field::set_askprice2(double value) {
  
  askprice2_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AskPrice2)
}

// int32 AskVolume2 = 30;
void quote_gateway_market_field::clear_askvolume2() {
  askvolume2_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::askvolume2() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AskVolume2)
  return askvolume2_;
}
void quote_gateway_market_field::set_askvolume2(::google::protobuf::int32 value) {
  
  askvolume2_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AskVolume2)
}

// double BidPrice3 = 31;
void quote_gateway_market_field::clear_bidprice3() {
  bidprice3_ = 0;
}
double quote_gateway_market_field::bidprice3() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.BidPrice3)
  return bidprice3_;
}
void quote_gateway_market_field::set_bidprice3(double value) {
  
  bidprice3_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.BidPrice3)
}

// int32 BidVolume3 = 32;
void quote_gateway_market_field::clear_bidvolume3() {
  bidvolume3_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::bidvolume3() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.BidVolume3)
  return bidvolume3_;
}
void quote_gateway_market_field::set_bidvolume3(::google::protobuf::int32 value) {
  
  bidvolume3_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.BidVolume3)
}

// double AskPrice3 = 33;
void quote_gateway_market_field::clear_askprice3() {
  askprice3_ = 0;
}
double quote_gateway_market_field::askprice3() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AskPrice3)
  return askprice3_;
}
void quote_gateway_market_field::set_askprice3(double value) {
  
  askprice3_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AskPrice3)
}

// int32 AskVolume3 = 34;
void quote_gateway_market_field::clear_askvolume3() {
  askvolume3_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::askvolume3() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AskVolume3)
  return askvolume3_;
}
void quote_gateway_market_field::set_askvolume3(::google::protobuf::int32 value) {
  
  askvolume3_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AskVolume3)
}

// double BidPrice4 = 35;
void quote_gateway_market_field::clear_bidprice4() {
  bidprice4_ = 0;
}
double quote_gateway_market_field::bidprice4() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.BidPrice4)
  return bidprice4_;
}
void quote_gateway_market_field::set_bidprice4(double value) {
  
  bidprice4_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.BidPrice4)
}

// int32 BidVolume4 = 36;
void quote_gateway_market_field::clear_bidvolume4() {
  bidvolume4_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::bidvolume4() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.BidVolume4)
  return bidvolume4_;
}
void quote_gateway_market_field::set_bidvolume4(::google::protobuf::int32 value) {
  
  bidvolume4_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.BidVolume4)
}

// double AskPrice4 = 37;
void quote_gateway_market_field::clear_askprice4() {
  askprice4_ = 0;
}
double quote_gateway_market_field::askprice4() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AskPrice4)
  return askprice4_;
}
void quote_gateway_market_field::set_askprice4(double value) {
  
  askprice4_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AskPrice4)
}

// int32 AskVolume4 = 38;
void quote_gateway_market_field::clear_askvolume4() {
  askvolume4_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::askvolume4() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AskVolume4)
  return askvolume4_;
}
void quote_gateway_market_field::set_askvolume4(::google::protobuf::int32 value) {
  
  askvolume4_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AskVolume4)
}

// double BidPrice5 = 39;
void quote_gateway_market_field::clear_bidprice5() {
  bidprice5_ = 0;
}
double quote_gateway_market_field::bidprice5() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.BidPrice5)
  return bidprice5_;
}
void quote_gateway_market_field::set_bidprice5(double value) {
  
  bidprice5_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.BidPrice5)
}

// int32 BidVolume5 = 40;
void quote_gateway_market_field::clear_bidvolume5() {
  bidvolume5_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::bidvolume5() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.BidVolume5)
  return bidvolume5_;
}
void quote_gateway_market_field::set_bidvolume5(::google::protobuf::int32 value) {
  
  bidvolume5_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.BidVolume5)
}

// double AskPrice5 = 41;
void quote_gateway_market_field::clear_askprice5() {
  askprice5_ = 0;
}
double quote_gateway_market_field::askprice5() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AskPrice5)
  return askprice5_;
}
void quote_gateway_market_field::set_askprice5(double value) {
  
  askprice5_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AskPrice5)
}

// int32 AskVolume5 = 42;
void quote_gateway_market_field::clear_askvolume5() {
  askvolume5_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::askvolume5() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AskVolume5)
  return askvolume5_;
}
void quote_gateway_market_field::set_askvolume5(::google::protobuf::int32 value) {
  
  askvolume5_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AskVolume5)
}

// double AveragePrice = 43;
void quote_gateway_market_field::clear_averageprice() {
  averageprice_ = 0;
}
double quote_gateway_market_field::averageprice() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.AveragePrice)
  return averageprice_;
}
void quote_gateway_market_field::set_averageprice(double value) {
  
  averageprice_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.AveragePrice)
}

// string ActionDay = 44;
void quote_gateway_market_field::clear_actionday() {
  actionday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quote_gateway_market_field::actionday() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.ActionDay)
  return actionday_.GetNoArena();
}
void quote_gateway_market_field::set_actionday(const ::std::string& value) {
  
  actionday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.ActionDay)
}
#if LANG_CXX11
void quote_gateway_market_field::set_actionday(::std::string&& value) {
  
  actionday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:risk.quote_gateway_market_field.ActionDay)
}
#endif
void quote_gateway_market_field::set_actionday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actionday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:risk.quote_gateway_market_field.ActionDay)
}
void quote_gateway_market_field::set_actionday(const char* value, size_t size) {
  
  actionday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:risk.quote_gateway_market_field.ActionDay)
}
::std::string* quote_gateway_market_field::mutable_actionday() {
  
  // @@protoc_insertion_point(field_mutable:risk.quote_gateway_market_field.ActionDay)
  return actionday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quote_gateway_market_field::release_actionday() {
  // @@protoc_insertion_point(field_release:risk.quote_gateway_market_field.ActionDay)
  
  return actionday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quote_gateway_market_field::set_allocated_actionday(::std::string* actionday) {
  if (actionday != NULL) {
    
  } else {
    
  }
  actionday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actionday);
  // @@protoc_insertion_point(field_set_allocated:risk.quote_gateway_market_field.ActionDay)
}

// int32 VolumeMultiple = 45;
void quote_gateway_market_field::clear_volumemultiple() {
  volumemultiple_ = 0;
}
::google::protobuf::int32 quote_gateway_market_field::volumemultiple() const {
  // @@protoc_insertion_point(field_get:risk.quote_gateway_market_field.VolumeMultiple)
  return volumemultiple_;
}
void quote_gateway_market_field::set_volumemultiple(::google::protobuf::int32 value) {
  
  volumemultiple_ = value;
  // @@protoc_insertion_point(field_set:risk.quote_gateway_market_field.VolumeMultiple)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_quote_login::kRiskeridFieldNumber;
const int req_quote_login::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_quote_login::req_quote_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_quote_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:risk.req_quote_login)
}
req_quote_login::req_quote_login(const req_quote_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  riskerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.riskerid().size() > 0) {
    riskerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.riskerid_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:risk.req_quote_login)
}

void req_quote_login::SharedCtor() {
  riskerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

req_quote_login::~req_quote_login() {
  // @@protoc_insertion_point(destructor:risk.req_quote_login)
  SharedDtor();
}

void req_quote_login::SharedDtor() {
  riskerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_quote_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_quote_login::descriptor() {
  protobuf_quote_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_quote_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_quote_login& req_quote_login::default_instance() {
  protobuf_quote_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_quote_login* req_quote_login::New(::google::protobuf::Arena* arena) const {
  req_quote_login* n = new req_quote_login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_quote_login::Clear() {
// @@protoc_insertion_point(message_clear_start:risk.req_quote_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  riskerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool req_quote_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:risk.req_quote_login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string riskerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_riskerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->riskerid().data(), static_cast<int>(this->riskerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "risk.req_quote_login.riskerid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "risk.req_quote_login.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:risk.req_quote_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:risk.req_quote_login)
  return false;
#undef DO_
}

void req_quote_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:risk.req_quote_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string riskerid = 1;
  if (this->riskerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->riskerid().data(), static_cast<int>(this->riskerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.req_quote_login.riskerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->riskerid(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.req_quote_login.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:risk.req_quote_login)
}

::google::protobuf::uint8* req_quote_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:risk.req_quote_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string riskerid = 1;
  if (this->riskerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->riskerid().data(), static_cast<int>(this->riskerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.req_quote_login.riskerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->riskerid(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "risk.req_quote_login.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risk.req_quote_login)
  return target;
}

size_t req_quote_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risk.req_quote_login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string riskerid = 1;
  if (this->riskerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->riskerid());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_quote_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:risk.req_quote_login)
  GOOGLE_DCHECK_NE(&from, this);
  const req_quote_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_quote_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:risk.req_quote_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:risk.req_quote_login)
    MergeFrom(*source);
  }
}

void req_quote_login::MergeFrom(const req_quote_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:risk.req_quote_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.riskerid().size() > 0) {

    riskerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.riskerid_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void req_quote_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:risk.req_quote_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_quote_login::CopyFrom(const req_quote_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risk.req_quote_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_quote_login::IsInitialized() const {
  return true;
}

void req_quote_login::Swap(req_quote_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_quote_login::InternalSwap(req_quote_login* other) {
  using std::swap;
  riskerid_.Swap(&other->riskerid_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_quote_login::GetMetadata() const {
  protobuf_quote_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_quote_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_quote_login

// string riskerid = 1;
void req_quote_login::clear_riskerid() {
  riskerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_quote_login::riskerid() const {
  // @@protoc_insertion_point(field_get:risk.req_quote_login.riskerid)
  return riskerid_.GetNoArena();
}
void req_quote_login::set_riskerid(const ::std::string& value) {
  
  riskerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:risk.req_quote_login.riskerid)
}
#if LANG_CXX11
void req_quote_login::set_riskerid(::std::string&& value) {
  
  riskerid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:risk.req_quote_login.riskerid)
}
#endif
void req_quote_login::set_riskerid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  riskerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:risk.req_quote_login.riskerid)
}
void req_quote_login::set_riskerid(const char* value, size_t size) {
  
  riskerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:risk.req_quote_login.riskerid)
}
::std::string* req_quote_login::mutable_riskerid() {
  
  // @@protoc_insertion_point(field_mutable:risk.req_quote_login.riskerid)
  return riskerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_quote_login::release_riskerid() {
  // @@protoc_insertion_point(field_release:risk.req_quote_login.riskerid)
  
  return riskerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_quote_login::set_allocated_riskerid(::std::string* riskerid) {
  if (riskerid != NULL) {
    
  } else {
    
  }
  riskerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), riskerid);
  // @@protoc_insertion_point(field_set_allocated:risk.req_quote_login.riskerid)
}

// string password = 2;
void req_quote_login::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_quote_login::password() const {
  // @@protoc_insertion_point(field_get:risk.req_quote_login.password)
  return password_.GetNoArena();
}
void req_quote_login::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:risk.req_quote_login.password)
}
#if LANG_CXX11
void req_quote_login::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:risk.req_quote_login.password)
}
#endif
void req_quote_login::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:risk.req_quote_login.password)
}
void req_quote_login::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:risk.req_quote_login.password)
}
::std::string* req_quote_login::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:risk.req_quote_login.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_quote_login::release_password() {
  // @@protoc_insertion_point(field_release:risk.req_quote_login.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_quote_login::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:risk.req_quote_login.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace risk

// @@protoc_insertion_point(global_scope)
