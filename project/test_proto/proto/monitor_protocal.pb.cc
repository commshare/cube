// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monitor_protocal.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "monitor_protocal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace monitor {
class sub_serverinfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<sub_serverinfo>
     _instance;
} _sub_serverinfo_default_instance_;
class unsub_serverinfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<unsub_serverinfo>
     _instance;
} _unsub_serverinfo_default_instance_;
class serverinfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<serverinfo>
     _instance;
} _serverinfo_default_instance_;
class rtn_serverinfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_serverinfo>
     _instance;
} _rtn_serverinfo_default_instance_;

namespace protobuf_monitor_5fprotocal_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sub_serverinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sub_serverinfo, requestid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(unsub_serverinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(unsub_serverinfo, requestid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(serverinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(serverinfo, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(serverinfo, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_serverinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_serverinfo, field_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(sub_serverinfo)},
  { 6, -1, sizeof(unsub_serverinfo)},
  { 12, -1, sizeof(serverinfo)},
  { 19, -1, sizeof(rtn_serverinfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_sub_serverinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_unsub_serverinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_serverinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_serverinfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "monitor_protocal.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _sub_serverinfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_sub_serverinfo_default_instance_);_unsub_serverinfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_unsub_serverinfo_default_instance_);_serverinfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_serverinfo_default_instance_);_rtn_serverinfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_serverinfo_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026monitor_protocal.proto\022\007monitor\"#\n\016sub"
      "_serverinfo\022\021\n\trequestid\030\001 \001(\005\"%\n\020unsub_"
      "serverinfo\022\021\n\trequestid\030\001 \001(\005\"-\n\nserveri"
      "nfo\022\020\n\010serverid\030\001 \001(\005\022\r\n\005count\030\002 \001(\005\"4\n\016"
      "rtn_serverinfo\022\"\n\005field\030\001 \003(\0132\023.monitor."
      "serverinfob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 218);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "monitor_protocal.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_monitor_5fprotocal_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sub_serverinfo::kRequestidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sub_serverinfo::sub_serverinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_monitor_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:monitor.sub_serverinfo)
}
sub_serverinfo::sub_serverinfo(const sub_serverinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:monitor.sub_serverinfo)
}

void sub_serverinfo::SharedCtor() {
  requestid_ = 0;
  _cached_size_ = 0;
}

sub_serverinfo::~sub_serverinfo() {
  // @@protoc_insertion_point(destructor:monitor.sub_serverinfo)
  SharedDtor();
}

void sub_serverinfo::SharedDtor() {
}

void sub_serverinfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sub_serverinfo::descriptor() {
  protobuf_monitor_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_monitor_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const sub_serverinfo& sub_serverinfo::default_instance() {
  protobuf_monitor_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

sub_serverinfo* sub_serverinfo::New(::google::protobuf::Arena* arena) const {
  sub_serverinfo* n = new sub_serverinfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void sub_serverinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:monitor.sub_serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool sub_serverinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:monitor.sub_serverinfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:monitor.sub_serverinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:monitor.sub_serverinfo)
  return false;
#undef DO_
}

void sub_serverinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:monitor.sub_serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:monitor.sub_serverinfo)
}

::google::protobuf::uint8* sub_serverinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:monitor.sub_serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:monitor.sub_serverinfo)
  return target;
}

size_t sub_serverinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:monitor.sub_serverinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sub_serverinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:monitor.sub_serverinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const sub_serverinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sub_serverinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:monitor.sub_serverinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:monitor.sub_serverinfo)
    MergeFrom(*source);
  }
}

void sub_serverinfo::MergeFrom(const sub_serverinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:monitor.sub_serverinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void sub_serverinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:monitor.sub_serverinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sub_serverinfo::CopyFrom(const sub_serverinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:monitor.sub_serverinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sub_serverinfo::IsInitialized() const {
  return true;
}

void sub_serverinfo::Swap(sub_serverinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sub_serverinfo::InternalSwap(sub_serverinfo* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata sub_serverinfo::GetMetadata() const {
  protobuf_monitor_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_monitor_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// sub_serverinfo

// int32 requestid = 1;
void sub_serverinfo::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 sub_serverinfo::requestid() const {
  // @@protoc_insertion_point(field_get:monitor.sub_serverinfo.requestid)
  return requestid_;
}
void sub_serverinfo::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:monitor.sub_serverinfo.requestid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int unsub_serverinfo::kRequestidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

unsub_serverinfo::unsub_serverinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_monitor_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:monitor.unsub_serverinfo)
}
unsub_serverinfo::unsub_serverinfo(const unsub_serverinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:monitor.unsub_serverinfo)
}

void unsub_serverinfo::SharedCtor() {
  requestid_ = 0;
  _cached_size_ = 0;
}

unsub_serverinfo::~unsub_serverinfo() {
  // @@protoc_insertion_point(destructor:monitor.unsub_serverinfo)
  SharedDtor();
}

void unsub_serverinfo::SharedDtor() {
}

void unsub_serverinfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* unsub_serverinfo::descriptor() {
  protobuf_monitor_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_monitor_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const unsub_serverinfo& unsub_serverinfo::default_instance() {
  protobuf_monitor_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

unsub_serverinfo* unsub_serverinfo::New(::google::protobuf::Arena* arena) const {
  unsub_serverinfo* n = new unsub_serverinfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void unsub_serverinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:monitor.unsub_serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool unsub_serverinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:monitor.unsub_serverinfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:monitor.unsub_serverinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:monitor.unsub_serverinfo)
  return false;
#undef DO_
}

void unsub_serverinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:monitor.unsub_serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:monitor.unsub_serverinfo)
}

::google::protobuf::uint8* unsub_serverinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:monitor.unsub_serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:monitor.unsub_serverinfo)
  return target;
}

size_t unsub_serverinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:monitor.unsub_serverinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void unsub_serverinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:monitor.unsub_serverinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const unsub_serverinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const unsub_serverinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:monitor.unsub_serverinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:monitor.unsub_serverinfo)
    MergeFrom(*source);
  }
}

void unsub_serverinfo::MergeFrom(const unsub_serverinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:monitor.unsub_serverinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void unsub_serverinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:monitor.unsub_serverinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void unsub_serverinfo::CopyFrom(const unsub_serverinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:monitor.unsub_serverinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool unsub_serverinfo::IsInitialized() const {
  return true;
}

void unsub_serverinfo::Swap(unsub_serverinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void unsub_serverinfo::InternalSwap(unsub_serverinfo* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata unsub_serverinfo::GetMetadata() const {
  protobuf_monitor_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_monitor_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// unsub_serverinfo

// int32 requestid = 1;
void unsub_serverinfo::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 unsub_serverinfo::requestid() const {
  // @@protoc_insertion_point(field_get:monitor.unsub_serverinfo.requestid)
  return requestid_;
}
void unsub_serverinfo::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:monitor.unsub_serverinfo.requestid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int serverinfo::kServeridFieldNumber;
const int serverinfo::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

serverinfo::serverinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_monitor_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:monitor.serverinfo)
}
serverinfo::serverinfo(const serverinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:monitor.serverinfo)
}

void serverinfo::SharedCtor() {
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(count_));
  _cached_size_ = 0;
}

serverinfo::~serverinfo() {
  // @@protoc_insertion_point(destructor:monitor.serverinfo)
  SharedDtor();
}

void serverinfo::SharedDtor() {
}

void serverinfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* serverinfo::descriptor() {
  protobuf_monitor_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_monitor_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const serverinfo& serverinfo::default_instance() {
  protobuf_monitor_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

serverinfo* serverinfo::New(::google::protobuf::Arena* arena) const {
  serverinfo* n = new serverinfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void serverinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:monitor.serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool serverinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:monitor.serverinfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:monitor.serverinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:monitor.serverinfo)
  return false;
#undef DO_
}

void serverinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:monitor.serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:monitor.serverinfo)
}

::google::protobuf::uint8* serverinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:monitor.serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:monitor.serverinfo)
  return target;
}

size_t serverinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:monitor.serverinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void serverinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:monitor.serverinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const serverinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const serverinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:monitor.serverinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:monitor.serverinfo)
    MergeFrom(*source);
  }
}

void serverinfo::MergeFrom(const serverinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:monitor.serverinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void serverinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:monitor.serverinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void serverinfo::CopyFrom(const serverinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:monitor.serverinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool serverinfo::IsInitialized() const {
  return true;
}

void serverinfo::Swap(serverinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void serverinfo::InternalSwap(serverinfo* other) {
  using std::swap;
  swap(serverid_, other->serverid_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata serverinfo::GetMetadata() const {
  protobuf_monitor_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_monitor_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// serverinfo

// int32 serverid = 1;
void serverinfo::clear_serverid() {
  serverid_ = 0;
}
::google::protobuf::int32 serverinfo::serverid() const {
  // @@protoc_insertion_point(field_get:monitor.serverinfo.serverid)
  return serverid_;
}
void serverinfo::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:monitor.serverinfo.serverid)
}

// int32 count = 2;
void serverinfo::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 serverinfo::count() const {
  // @@protoc_insertion_point(field_get:monitor.serverinfo.count)
  return count_;
}
void serverinfo::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:monitor.serverinfo.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_serverinfo::kFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_serverinfo::rtn_serverinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_monitor_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:monitor.rtn_serverinfo)
}
rtn_serverinfo::rtn_serverinfo(const rtn_serverinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      field_(from.field_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:monitor.rtn_serverinfo)
}

void rtn_serverinfo::SharedCtor() {
  _cached_size_ = 0;
}

rtn_serverinfo::~rtn_serverinfo() {
  // @@protoc_insertion_point(destructor:monitor.rtn_serverinfo)
  SharedDtor();
}

void rtn_serverinfo::SharedDtor() {
}

void rtn_serverinfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_serverinfo::descriptor() {
  protobuf_monitor_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_monitor_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_serverinfo& rtn_serverinfo::default_instance() {
  protobuf_monitor_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_serverinfo* rtn_serverinfo::New(::google::protobuf::Arena* arena) const {
  rtn_serverinfo* n = new rtn_serverinfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_serverinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:monitor.rtn_serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.Clear();
  _internal_metadata_.Clear();
}

bool rtn_serverinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:monitor.rtn_serverinfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .monitor.serverinfo field = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:monitor.rtn_serverinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:monitor.rtn_serverinfo)
  return false;
#undef DO_
}

void rtn_serverinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:monitor.rtn_serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .monitor.serverinfo field = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->field(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:monitor.rtn_serverinfo)
}

::google::protobuf::uint8* rtn_serverinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:monitor.rtn_serverinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .monitor.serverinfo field = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->field(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:monitor.rtn_serverinfo)
  return target;
}

size_t rtn_serverinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:monitor.rtn_serverinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .monitor.serverinfo field = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_serverinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:monitor.rtn_serverinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_serverinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_serverinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:monitor.rtn_serverinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:monitor.rtn_serverinfo)
    MergeFrom(*source);
  }
}

void rtn_serverinfo::MergeFrom(const rtn_serverinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:monitor.rtn_serverinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_.MergeFrom(from.field_);
}

void rtn_serverinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:monitor.rtn_serverinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_serverinfo::CopyFrom(const rtn_serverinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:monitor.rtn_serverinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_serverinfo::IsInitialized() const {
  return true;
}

void rtn_serverinfo::Swap(rtn_serverinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_serverinfo::InternalSwap(rtn_serverinfo* other) {
  using std::swap;
  field_.InternalSwap(&other->field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_serverinfo::GetMetadata() const {
  protobuf_monitor_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_monitor_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_serverinfo

// repeated .monitor.serverinfo field = 1;
int rtn_serverinfo::field_size() const {
  return field_.size();
}
void rtn_serverinfo::clear_field() {
  field_.Clear();
}
const ::monitor::serverinfo& rtn_serverinfo::field(int index) const {
  // @@protoc_insertion_point(field_get:monitor.rtn_serverinfo.field)
  return field_.Get(index);
}
::monitor::serverinfo* rtn_serverinfo::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:monitor.rtn_serverinfo.field)
  return field_.Mutable(index);
}
::monitor::serverinfo* rtn_serverinfo::add_field() {
  // @@protoc_insertion_point(field_add:monitor.rtn_serverinfo.field)
  return field_.Add();
}
::google::protobuf::RepeatedPtrField< ::monitor::serverinfo >*
rtn_serverinfo::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:monitor.rtn_serverinfo.field)
  return &field_;
}
const ::google::protobuf::RepeatedPtrField< ::monitor::serverinfo >&
rtn_serverinfo::field() const {
  // @@protoc_insertion_point(field_list:monitor.rtn_serverinfo.field)
  return field_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace monitor

// @@protoc_insertion_point(global_scope)
