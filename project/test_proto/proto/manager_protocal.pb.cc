// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manager_protocal.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "manager_protocal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace manager {
class error_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<error_info>
     _instance;
} _error_info_default_instance_;
class rsp_action_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_action_info>
     _instance;
} _rsp_action_info_default_instance_;
class rsp_head_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_head_info>
     _instance;
} _rsp_head_info_default_instance_;
class sys_authDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<sys_auth>
     _instance;
} _sys_auth_default_instance_;
class role_authDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<role_auth>
     _instance;
} _role_auth_default_instance_;
class req_loginDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_login>
     _instance;
} _req_login_default_instance_;
class rsp_loginDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_login>
     _instance;
} _rsp_login_default_instance_;
class req_sys_subsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_sys_subs>
     _instance;
} _req_sys_subs_default_instance_;
class sys_userDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<sys_user>
     _instance;
} _sys_user_default_instance_;
class rsp_sys_subsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_sys_subs>
     _instance;
} _rsp_sys_subs_default_instance_;
class req_add_sys_userDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_add_sys_user>
     _instance;
} _req_add_sys_user_default_instance_;
class req_del_sys_userDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_del_sys_user>
     _instance;
} _req_del_sys_user_default_instance_;
class req_edit_sys_userDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_edit_sys_user>
     _instance;
} _req_edit_sys_user_default_instance_;
class sys_investorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<sys_investor>
     _instance;
} _sys_investor_default_instance_;
class req_risk_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_risk_investors>
     _instance;
} _req_risk_investors_default_instance_;
class rsp_risk_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_risk_investors>
     _instance;
} _rsp_risk_investors_default_instance_;
class req_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_investors>
     _instance;
} _req_investors_default_instance_;
class rsp_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_investors>
     _instance;
} _rsp_investors_default_instance_;
class req_add_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_add_investors>
     _instance;
} _req_add_investors_default_instance_;
class req_del_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_del_investors>
     _instance;
} _req_del_investors_default_instance_;
class rtn_change_treeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_change_tree>
     _instance;
} _rtn_change_tree_default_instance_;
class rtn_change_risker_investorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_change_risker_investor>
     _instance;
} _rtn_change_risker_investor_default_instance_;
class rtn_change_investorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_change_investor>
     _instance;
} _rtn_change_investor_default_instance_;
class insmrgnrate_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<insmrgnrate_info>
     _instance;
} _insmrgnrate_info_default_instance_;
class req_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_insmrgnrate>
     _instance;
} _req_insmrgnrate_default_instance_;
class rsp_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_insmrgnrate>
     _instance;
} _rsp_insmrgnrate_default_instance_;
class req_edit_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_edit_insmrgnrate>
     _instance;
} _req_edit_insmrgnrate_default_instance_;
class rtn_change_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_change_insmrgnrate>
     _instance;
} _rtn_change_insmrgnrate_default_instance_;
class req_option_argvDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_option_argv>
     _instance;
} _req_option_argv_default_instance_;
class option_argvDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<option_argv>
     _instance;
} _option_argv_default_instance_;
class rsp_option_argvDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_option_argv>
     _instance;
} _rsp_option_argv_default_instance_;
class req_option_argv_adjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_option_argv_adj>
     _instance;
} _req_option_argv_adj_default_instance_;

namespace protobuf_manager_5fprotocal_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[32];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(error_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(error_info, errorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(error_info, errormsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_action_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_action_info, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_action_info, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_head_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_head_info, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_head_info, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_head_info, islast_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_auth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_auth, authid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_auth, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_auth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_auth, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_auth, auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_login, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_login, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_login, pwd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_login, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_login, auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_sys_subs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_sys_subs, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_sys_subs, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, father_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, auths_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_sys_subs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_sys_subs, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_sys_subs, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_sys_user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_sys_user, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_sys_user, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_sys_user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_sys_user, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_sys_user, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_sys_user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_sys_user, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_sys_user, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_investor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_investor, investor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_investor, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_investor, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_risk_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_risk_investors, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_risk_investors, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_risk_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_risk_investors, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_risk_investors, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_risk_investors, investors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_investors, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_investors, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_investors, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_investors, investors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_investors, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_investors, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_investors, investor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_investors, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_investors, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_investors, investor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_tree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_tree, operatorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_tree, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_risker_investor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_risker_investor, operatorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_risker_investor, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_risker_investor, investor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_investor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_investor, operatorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_investor, investor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, tradingday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, contractcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, exchangecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, hedgeflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, marginrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, segmrgn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_insmrgnrate, requestid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_insmrgnrate, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_insmrgnrate, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_insmrgnrate, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_insmrgnrate, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_insmrgnrate, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_option_argv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_option_argv, requestid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, price_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, vol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, iterations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_option_argv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_option_argv, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_option_argv, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_option_argv_adj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_option_argv_adj, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_option_argv_adj, info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(error_info)},
  { 7, -1, sizeof(rsp_action_info)},
  { 14, -1, sizeof(rsp_head_info)},
  { 22, -1, sizeof(sys_auth)},
  { 29, -1, sizeof(role_auth)},
  { 36, -1, sizeof(req_login)},
  { 44, -1, sizeof(rsp_login)},
  { 51, -1, sizeof(req_sys_subs)},
  { 58, -1, sizeof(sys_user)},
  { 71, -1, sizeof(rsp_sys_subs)},
  { 78, -1, sizeof(req_add_sys_user)},
  { 85, -1, sizeof(req_del_sys_user)},
  { 92, -1, sizeof(req_edit_sys_user)},
  { 99, -1, sizeof(sys_investor)},
  { 107, -1, sizeof(req_risk_investors)},
  { 114, -1, sizeof(rsp_risk_investors)},
  { 122, -1, sizeof(req_investors)},
  { 129, -1, sizeof(rsp_investors)},
  { 136, -1, sizeof(req_add_investors)},
  { 144, -1, sizeof(req_del_investors)},
  { 152, -1, sizeof(rtn_change_tree)},
  { 159, -1, sizeof(rtn_change_risker_investor)},
  { 167, -1, sizeof(rtn_change_investor)},
  { 174, -1, sizeof(insmrgnrate_info)},
  { 186, -1, sizeof(req_insmrgnrate)},
  { 192, -1, sizeof(rsp_insmrgnrate)},
  { 199, -1, sizeof(req_edit_insmrgnrate)},
  { 206, -1, sizeof(rtn_change_insmrgnrate)},
  { 212, -1, sizeof(req_option_argv)},
  { 218, -1, sizeof(option_argv)},
  { 228, -1, sizeof(rsp_option_argv)},
  { 235, -1, sizeof(req_option_argv_adj)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_error_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_action_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_head_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_sys_auth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_role_auth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_sys_subs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_sys_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_sys_subs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_add_sys_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_del_sys_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_edit_sys_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_sys_investor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_risk_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_risk_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_add_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_del_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_change_tree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_change_risker_investor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_change_investor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_insmrgnrate_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_edit_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_change_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_option_argv_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_option_argv_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_option_argv_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_option_argv_adj_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "manager_protocal.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 32);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _error_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_error_info_default_instance_);_rsp_action_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_action_info_default_instance_);_rsp_head_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_head_info_default_instance_);_sys_auth_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_sys_auth_default_instance_);_role_auth_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_role_auth_default_instance_);_req_login_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_login_default_instance_);_rsp_login_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_login_default_instance_);_req_sys_subs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_sys_subs_default_instance_);_sys_user_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_sys_user_default_instance_);_rsp_sys_subs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_sys_subs_default_instance_);_req_add_sys_user_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_add_sys_user_default_instance_);_req_del_sys_user_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_del_sys_user_default_instance_);_req_edit_sys_user_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_edit_sys_user_default_instance_);_sys_investor_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_sys_investor_default_instance_);_req_risk_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_risk_investors_default_instance_);_rsp_risk_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_risk_investors_default_instance_);_req_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_investors_default_instance_);_rsp_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_investors_default_instance_);_req_add_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_add_investors_default_instance_);_req_del_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_del_investors_default_instance_);_rtn_change_tree_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_change_tree_default_instance_);_rtn_change_risker_investor_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_change_risker_investor_default_instance_);_rtn_change_investor_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_change_investor_default_instance_);_insmrgnrate_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_insmrgnrate_info_default_instance_);_req_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_insmrgnrate_default_instance_);_rsp_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_insmrgnrate_default_instance_);_req_edit_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_edit_insmrgnrate_default_instance_);_rtn_change_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_change_insmrgnrate_default_instance_);_req_option_argv_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_option_argv_default_instance_);_option_argv_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_option_argv_default_instance_);_rsp_option_argv_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_option_argv_default_instance_);_req_option_argv_adj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_option_argv_adj_default_instance_);_rsp_action_info_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::error_info*>(
      ::manager::error_info::internal_default_instance());
  _rsp_head_info_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::error_info*>(
      ::manager::error_info::internal_default_instance());
  _rsp_login_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _rsp_sys_subs_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _req_add_sys_user_default_instance_._instance.get_mutable()->user_ = const_cast< ::manager::sys_user*>(
      ::manager::sys_user::internal_default_instance());
  _req_edit_sys_user_default_instance_._instance.get_mutable()->user_ = const_cast< ::manager::sys_user*>(
      ::manager::sys_user::internal_default_instance());
  _rsp_risk_investors_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _rsp_investors_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _rtn_change_tree_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::sys_user*>(
      ::manager::sys_user::internal_default_instance());
  _rsp_insmrgnrate_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _rsp_option_argv_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _rsp_option_argv_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::option_argv*>(
      ::manager::option_argv::internal_default_instance());
  _req_option_argv_adj_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::option_argv*>(
      ::manager::option_argv::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026manager_protocal.proto\022\007manager\"/\n\nerr"
      "or_info\022\017\n\007errorid\030\001 \001(\021\022\020\n\010errormsg\030\002 \001"
      "(\t\"G\n\017rsp_action_info\022\021\n\trequestid\030\001 \001(\005"
      "\022!\n\004info\030\002 \001(\0132\023.manager.error_info\"U\n\rr"
      "sp_head_info\022\021\n\trequestid\030\001 \001(\005\022!\n\004info\030"
      "\002 \001(\0132\023.manager.error_info\022\016\n\006islast\030\003 \001"
      "(\010\"(\n\010sys_auth\022\016\n\006authid\030\001 \001(\005\022\014\n\004name\030\002"
      " \001(\t\"<\n\trole_auth\022\016\n\006roleid\030\001 \001(\005\022\037\n\004aut"
      "h\030\002 \003(\0132\021.manager.sys_auth\";\n\treq_login\022"
      "\021\n\trequestid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\022\013\n\003pw"
      "d\030\003 \001(\t\"U\n\trsp_login\022&\n\006header\030\001 \001(\0132\026.m"
      "anager.rsp_head_info\022 \n\004auth\030\002 \003(\0132\022.man"
      "ager.role_auth\"1\n\014req_sys_subs\022\021\n\treques"
      "tid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\"\225\001\n\010sys_user\022\n"
      "\n\002id\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\022\020\n\010username\030\003"
      " \001(\t\022\016\n\006father\030\004 \001(\t\022\016\n\006roleid\030\005 \001(\005\022\013\n\003"
      "pwd\030\006 \001(\t\022\014\n\004desc\030\007 \001(\t\022 \n\005auths\030\010 \003(\0132\021"
      ".manager.sys_auth\"W\n\014rsp_sys_subs\022&\n\006hea"
      "der\030\001 \001(\0132\026.manager.rsp_head_info\022\037\n\004inf"
      "o\030\002 \003(\0132\021.manager.sys_user\"F\n\020req_add_sy"
      "s_user\022\021\n\trequestid\030\001 \001(\005\022\037\n\004user\030\002 \001(\0132"
      "\021.manager.sys_user\"5\n\020req_del_sys_user\022\021"
      "\n\trequestid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\"G\n\021req"
      "_edit_sys_user\022\021\n\trequestid\030\001 \001(\005\022\037\n\004use"
      "r\030\002 \001(\0132\021.manager.sys_user\"=\n\014sys_invest"
      "or\022\020\n\010investor\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005st"
      "ate\030\003 \001(\005\"7\n\022req_risk_investors\022\021\n\treque"
      "stid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\"v\n\022rsp_risk_i"
      "nvestors\022&\n\006header\030\001 \001(\0132\026.manager.rsp_h"
      "ead_info\022\016\n\006userid\030\002 \001(\t\022(\n\tinvestors\030\003 "
      "\003(\0132\025.manager.sys_investor\"1\n\rreq_invest"
      "ors\022\021\n\trequestid\030\001 \001(\005\022\r\n\005state\030\002 \001(\005\"a\n"
      "\rrsp_investors\022&\n\006header\030\001 \001(\0132\026.manager"
      ".rsp_head_info\022(\n\tinvestors\030\002 \003(\0132\025.mana"
      "ger.sys_investor\"H\n\021req_add_investors\022\021\n"
      "\trequestid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\022\020\n\010inve"
      "stor\030\003 \003(\t\"H\n\021req_del_investors\022\021\n\treque"
      "stid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\022\020\n\010investor\030\003"
      " \003(\t\"F\n\017rtn_change_tree\022\022\n\noperatorid\030\001 "
      "\001(\005\022\037\n\004info\030\002 \001(\0132\021.manager.sys_user\"R\n\032"
      "rtn_change_risker_investor\022\022\n\noperatorid"
      "\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\022\020\n\010investor\030\003 \003(\t"
      "\";\n\023rtn_change_investor\022\022\n\noperatorid\030\001 "
      "\001(\005\022\020\n\010investor\030\002 \003(\t\"\235\001\n\020insmrgnrate_in"
      "fo\022\022\n\ntradingday\030\001 \001(\t\022\024\n\014contractcode\030\002"
      " \001(\t\022\024\n\014exchangecode\030\003 \001(\t\022\021\n\tdirection\030"
      "\004 \001(\t\022\021\n\thedgeflag\030\005 \001(\t\022\022\n\nmarginrate\030\006"
      " \001(\001\022\017\n\007segmrgn\030\007 \001(\001\"$\n\017req_insmrgnrate"
      "\022\021\n\trequestid\030\001 \001(\005\"c\n\017rsp_insmrgnrate\022&"
      "\n\006header\030\001 \001(\0132\026.manager.rsp_head_info\022("
      "\n\005infos\030\002 \003(\0132\031.manager.insmrgnrate_info"
      "\"S\n\024req_edit_insmrgnrate\022\021\n\trequestid\030\001 "
      "\001(\005\022(\n\005infos\030\002 \003(\0132\031.manager.insmrgnrate"
      "_info\"B\n\026rtn_change_insmrgnrate\022(\n\005infos"
      "\030\001 \003(\0132\031.manager.insmrgnrate_info\"$\n\017req"
      "_option_argv\022\021\n\trequestid\030\001 \001(\005\"^\n\013optio"
      "n_argv\022\022\n\nprice_type\030\001 \001(\005\022\013\n\003vol\030\002 \001(\001\022"
      "\014\n\004rate\030\003 \001(\001\022\014\n\004step\030\004 \001(\005\022\022\n\niteration"
      "s\030\005 \001(\005\"]\n\017rsp_option_argv\022&\n\006header\030\001 \001"
      "(\0132\026.manager.rsp_head_info\022\"\n\004info\030\002 \001(\013"
      "2\024.manager.option_argv\"L\n\023req_option_arg"
      "v_adj\022\021\n\trequestid\030\001 \001(\005\022\"\n\004info\030\002 \001(\0132\024"
      ".manager.option_argvb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2508);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "manager_protocal.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_manager_5fprotocal_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int error_info::kErroridFieldNumber;
const int error_info::kErrormsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

error_info::error_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.error_info)
}
error_info::error_info(const error_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errormsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errormsg().size() > 0) {
    errormsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormsg_);
  }
  errorid_ = from.errorid_;
  // @@protoc_insertion_point(copy_constructor:manager.error_info)
}

void error_info::SharedCtor() {
  errormsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorid_ = 0;
  _cached_size_ = 0;
}

error_info::~error_info() {
  // @@protoc_insertion_point(destructor:manager.error_info)
  SharedDtor();
}

void error_info::SharedDtor() {
  errormsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void error_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* error_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const error_info& error_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

error_info* error_info::New(::google::protobuf::Arena* arena) const {
  error_info* n = new error_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void error_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.error_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorid_ = 0;
  _internal_metadata_.Clear();
}

bool error_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.error_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 errorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &errorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errormsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errormsg().data(), static_cast<int>(this->errormsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.error_info.errormsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.error_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.error_info)
  return false;
#undef DO_
}

void error_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.error_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 errorid = 1;
  if (this->errorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->errorid(), output);
  }

  // string errormsg = 2;
  if (this->errormsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errormsg().data(), static_cast<int>(this->errormsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.error_info.errormsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errormsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.error_info)
}

::google::protobuf::uint8* error_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.error_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 errorid = 1;
  if (this->errorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->errorid(), target);
  }

  // string errormsg = 2;
  if (this->errormsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errormsg().data(), static_cast<int>(this->errormsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.error_info.errormsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errormsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.error_info)
  return target;
}

size_t error_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.error_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errormsg = 2;
  if (this->errormsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errormsg());
  }

  // sint32 errorid = 1;
  if (this->errorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->errorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void error_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.error_info)
  GOOGLE_DCHECK_NE(&from, this);
  const error_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const error_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.error_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.error_info)
    MergeFrom(*source);
  }
}

void error_info::MergeFrom(const error_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.error_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errormsg().size() > 0) {

    errormsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormsg_);
  }
  if (from.errorid() != 0) {
    set_errorid(from.errorid());
  }
}

void error_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.error_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void error_info::CopyFrom(const error_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.error_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool error_info::IsInitialized() const {
  return true;
}

void error_info::Swap(error_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void error_info::InternalSwap(error_info* other) {
  using std::swap;
  errormsg_.Swap(&other->errormsg_);
  swap(errorid_, other->errorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata error_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// error_info

// sint32 errorid = 1;
void error_info::clear_errorid() {
  errorid_ = 0;
}
::google::protobuf::int32 error_info::errorid() const {
  // @@protoc_insertion_point(field_get:manager.error_info.errorid)
  return errorid_;
}
void error_info::set_errorid(::google::protobuf::int32 value) {
  
  errorid_ = value;
  // @@protoc_insertion_point(field_set:manager.error_info.errorid)
}

// string errormsg = 2;
void error_info::clear_errormsg() {
  errormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& error_info::errormsg() const {
  // @@protoc_insertion_point(field_get:manager.error_info.errormsg)
  return errormsg_.GetNoArena();
}
void error_info::set_errormsg(const ::std::string& value) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.error_info.errormsg)
}
#if LANG_CXX11
void error_info::set_errormsg(::std::string&& value) {
  
  errormsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.error_info.errormsg)
}
#endif
void error_info::set_errormsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.error_info.errormsg)
}
void error_info::set_errormsg(const char* value, size_t size) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.error_info.errormsg)
}
::std::string* error_info::mutable_errormsg() {
  
  // @@protoc_insertion_point(field_mutable:manager.error_info.errormsg)
  return errormsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* error_info::release_errormsg() {
  // @@protoc_insertion_point(field_release:manager.error_info.errormsg)
  
  return errormsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void error_info::set_allocated_errormsg(::std::string* errormsg) {
  if (errormsg != NULL) {
    
  } else {
    
  }
  errormsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormsg);
  // @@protoc_insertion_point(field_set_allocated:manager.error_info.errormsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_action_info::kRequestidFieldNumber;
const int rsp_action_info::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_action_info::rsp_action_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_action_info)
}
rsp_action_info::rsp_action_info(const rsp_action_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::error_info(*from.info_);
  } else {
    info_ = NULL;
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.rsp_action_info)
}

void rsp_action_info::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&info_)) + sizeof(requestid_));
  _cached_size_ = 0;
}

rsp_action_info::~rsp_action_info() {
  // @@protoc_insertion_point(destructor:manager.rsp_action_info)
  SharedDtor();
}

void rsp_action_info::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void rsp_action_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_action_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_action_info& rsp_action_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_action_info* rsp_action_info::New(::google::protobuf::Arena* arena) const {
  rsp_action_info* n = new rsp_action_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_action_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_action_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool rsp_action_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_action_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.error_info info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_action_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_action_info)
  return false;
#undef DO_
}

void rsp_action_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_action_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.error_info info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_action_info)
}

::google::protobuf::uint8* rsp_action_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_action_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.error_info info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_action_info)
  return target;
}

size_t rsp_action_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_action_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.error_info info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_action_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_action_info)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_action_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_action_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_action_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_action_info)
    MergeFrom(*source);
  }
}

void rsp_action_info::MergeFrom(const rsp_action_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_action_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::error_info::MergeFrom(from.info());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void rsp_action_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_action_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_action_info::CopyFrom(const rsp_action_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_action_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_action_info::IsInitialized() const {
  return true;
}

void rsp_action_info::Swap(rsp_action_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_action_info::InternalSwap(rsp_action_info* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_action_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_action_info

// int32 requestid = 1;
void rsp_action_info::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 rsp_action_info::requestid() const {
  // @@protoc_insertion_point(field_get:manager.rsp_action_info.requestid)
  return requestid_;
}
void rsp_action_info::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.rsp_action_info.requestid)
}

// .manager.error_info info = 2;
bool rsp_action_info::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void rsp_action_info::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::error_info& rsp_action_info::info() const {
  const ::manager::error_info* p = info_;
  // @@protoc_insertion_point(field_get:manager.rsp_action_info.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::error_info*>(
      &::manager::_error_info_default_instance_);
}
::manager::error_info* rsp_action_info::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::error_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_action_info.info)
  return info_;
}
::manager::error_info* rsp_action_info::release_info() {
  // @@protoc_insertion_point(field_release:manager.rsp_action_info.info)
  
  ::manager::error_info* temp = info_;
  info_ = NULL;
  return temp;
}
void rsp_action_info::set_allocated_info(::manager::error_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_action_info.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_head_info::kRequestidFieldNumber;
const int rsp_head_info::kInfoFieldNumber;
const int rsp_head_info::kIslastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_head_info::rsp_head_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_head_info)
}
rsp_head_info::rsp_head_info(const rsp_head_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::error_info(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&islast_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(islast_));
  // @@protoc_insertion_point(copy_constructor:manager.rsp_head_info)
}

void rsp_head_info::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islast_) -
      reinterpret_cast<char*>(&info_)) + sizeof(islast_));
  _cached_size_ = 0;
}

rsp_head_info::~rsp_head_info() {
  // @@protoc_insertion_point(destructor:manager.rsp_head_info)
  SharedDtor();
}

void rsp_head_info::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void rsp_head_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_head_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_head_info& rsp_head_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_head_info* rsp_head_info::New(::google::protobuf::Arena* arena) const {
  rsp_head_info* n = new rsp_head_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_head_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_head_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islast_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(islast_));
  _internal_metadata_.Clear();
}

bool rsp_head_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_head_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.error_info info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool islast = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islast_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_head_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_head_info)
  return false;
#undef DO_
}

void rsp_head_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_head_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.error_info info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // bool islast = 3;
  if (this->islast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->islast(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_head_info)
}

::google::protobuf::uint8* rsp_head_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_head_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.error_info info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  // bool islast = 3;
  if (this->islast() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->islast(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_head_info)
  return target;
}

size_t rsp_head_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_head_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.error_info info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  // bool islast = 3;
  if (this->islast() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_head_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_head_info)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_head_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_head_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_head_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_head_info)
    MergeFrom(*source);
  }
}

void rsp_head_info::MergeFrom(const rsp_head_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_head_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::error_info::MergeFrom(from.info());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
  if (from.islast() != 0) {
    set_islast(from.islast());
  }
}

void rsp_head_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_head_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_head_info::CopyFrom(const rsp_head_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_head_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_head_info::IsInitialized() const {
  return true;
}

void rsp_head_info::Swap(rsp_head_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_head_info::InternalSwap(rsp_head_info* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(requestid_, other->requestid_);
  swap(islast_, other->islast_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_head_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_head_info

// int32 requestid = 1;
void rsp_head_info::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 rsp_head_info::requestid() const {
  // @@protoc_insertion_point(field_get:manager.rsp_head_info.requestid)
  return requestid_;
}
void rsp_head_info::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.rsp_head_info.requestid)
}

// .manager.error_info info = 2;
bool rsp_head_info::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void rsp_head_info::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::error_info& rsp_head_info::info() const {
  const ::manager::error_info* p = info_;
  // @@protoc_insertion_point(field_get:manager.rsp_head_info.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::error_info*>(
      &::manager::_error_info_default_instance_);
}
::manager::error_info* rsp_head_info::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::error_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_head_info.info)
  return info_;
}
::manager::error_info* rsp_head_info::release_info() {
  // @@protoc_insertion_point(field_release:manager.rsp_head_info.info)
  
  ::manager::error_info* temp = info_;
  info_ = NULL;
  return temp;
}
void rsp_head_info::set_allocated_info(::manager::error_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_head_info.info)
}

// bool islast = 3;
void rsp_head_info::clear_islast() {
  islast_ = false;
}
bool rsp_head_info::islast() const {
  // @@protoc_insertion_point(field_get:manager.rsp_head_info.islast)
  return islast_;
}
void rsp_head_info::set_islast(bool value) {
  
  islast_ = value;
  // @@protoc_insertion_point(field_set:manager.rsp_head_info.islast)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sys_auth::kAuthidFieldNumber;
const int sys_auth::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sys_auth::sys_auth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.sys_auth)
}
sys_auth::sys_auth(const sys_auth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  authid_ = from.authid_;
  // @@protoc_insertion_point(copy_constructor:manager.sys_auth)
}

void sys_auth::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authid_ = 0;
  _cached_size_ = 0;
}

sys_auth::~sys_auth() {
  // @@protoc_insertion_point(destructor:manager.sys_auth)
  SharedDtor();
}

void sys_auth::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void sys_auth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sys_auth::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const sys_auth& sys_auth::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

sys_auth* sys_auth::New(::google::protobuf::Arena* arena) const {
  sys_auth* n = new sys_auth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void sys_auth::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.sys_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authid_ = 0;
  _internal_metadata_.Clear();
}

bool sys_auth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.sys_auth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 authid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &authid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_auth.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.sys_auth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.sys_auth)
  return false;
#undef DO_
}

void sys_auth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.sys_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 authid = 1;
  if (this->authid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->authid(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_auth.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.sys_auth)
}

::google::protobuf::uint8* sys_auth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.sys_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 authid = 1;
  if (this->authid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->authid(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_auth.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.sys_auth)
  return target;
}

size_t sys_auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.sys_auth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 authid = 1;
  if (this->authid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->authid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sys_auth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.sys_auth)
  GOOGLE_DCHECK_NE(&from, this);
  const sys_auth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sys_auth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.sys_auth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.sys_auth)
    MergeFrom(*source);
  }
}

void sys_auth::MergeFrom(const sys_auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.sys_auth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.authid() != 0) {
    set_authid(from.authid());
  }
}

void sys_auth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.sys_auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sys_auth::CopyFrom(const sys_auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.sys_auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sys_auth::IsInitialized() const {
  return true;
}

void sys_auth::Swap(sys_auth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sys_auth::InternalSwap(sys_auth* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(authid_, other->authid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata sys_auth::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// sys_auth

// int32 authid = 1;
void sys_auth::clear_authid() {
  authid_ = 0;
}
::google::protobuf::int32 sys_auth::authid() const {
  // @@protoc_insertion_point(field_get:manager.sys_auth.authid)
  return authid_;
}
void sys_auth::set_authid(::google::protobuf::int32 value) {
  
  authid_ = value;
  // @@protoc_insertion_point(field_set:manager.sys_auth.authid)
}

// string name = 2;
void sys_auth::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_auth::name() const {
  // @@protoc_insertion_point(field_get:manager.sys_auth.name)
  return name_.GetNoArena();
}
void sys_auth::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_auth.name)
}
#if LANG_CXX11
void sys_auth::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_auth.name)
}
#endif
void sys_auth::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_auth.name)
}
void sys_auth::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_auth.name)
}
::std::string* sys_auth::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_auth.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_auth::release_name() {
  // @@protoc_insertion_point(field_release:manager.sys_auth.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_auth::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_auth.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int role_auth::kRoleidFieldNumber;
const int role_auth::kAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

role_auth::role_auth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.role_auth)
}
role_auth::role_auth(const role_auth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      auth_(from.auth_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:manager.role_auth)
}

void role_auth::SharedCtor() {
  roleid_ = 0;
  _cached_size_ = 0;
}

role_auth::~role_auth() {
  // @@protoc_insertion_point(destructor:manager.role_auth)
  SharedDtor();
}

void role_auth::SharedDtor() {
}

void role_auth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* role_auth::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const role_auth& role_auth::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

role_auth* role_auth::New(::google::protobuf::Arena* arena) const {
  role_auth* n = new role_auth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void role_auth::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.role_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auth_.Clear();
  roleid_ = 0;
  _internal_metadata_.Clear();
}

bool role_auth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.role_auth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 roleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.sys_auth auth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.role_auth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.role_auth)
  return false;
#undef DO_
}

void role_auth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.role_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roleid = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // repeated .manager.sys_auth auth = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auth_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->auth(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.role_auth)
}

::google::protobuf::uint8* role_auth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.role_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roleid = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // repeated .manager.sys_auth auth = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auth_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->auth(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.role_auth)
  return target;
}

size_t role_auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.role_auth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.sys_auth auth = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->auth_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->auth(static_cast<int>(i)));
    }
  }

  // int32 roleid = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void role_auth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.role_auth)
  GOOGLE_DCHECK_NE(&from, this);
  const role_auth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const role_auth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.role_auth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.role_auth)
    MergeFrom(*source);
  }
}

void role_auth::MergeFrom(const role_auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.role_auth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auth_.MergeFrom(from.auth_);
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void role_auth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.role_auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void role_auth::CopyFrom(const role_auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.role_auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool role_auth::IsInitialized() const {
  return true;
}

void role_auth::Swap(role_auth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void role_auth::InternalSwap(role_auth* other) {
  using std::swap;
  auth_.InternalSwap(&other->auth_);
  swap(roleid_, other->roleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata role_auth::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// role_auth

// int32 roleid = 1;
void role_auth::clear_roleid() {
  roleid_ = 0;
}
::google::protobuf::int32 role_auth::roleid() const {
  // @@protoc_insertion_point(field_get:manager.role_auth.roleid)
  return roleid_;
}
void role_auth::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:manager.role_auth.roleid)
}

// repeated .manager.sys_auth auth = 2;
int role_auth::auth_size() const {
  return auth_.size();
}
void role_auth::clear_auth() {
  auth_.Clear();
}
const ::manager::sys_auth& role_auth::auth(int index) const {
  // @@protoc_insertion_point(field_get:manager.role_auth.auth)
  return auth_.Get(index);
}
::manager::sys_auth* role_auth::mutable_auth(int index) {
  // @@protoc_insertion_point(field_mutable:manager.role_auth.auth)
  return auth_.Mutable(index);
}
::manager::sys_auth* role_auth::add_auth() {
  // @@protoc_insertion_point(field_add:manager.role_auth.auth)
  return auth_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::sys_auth >*
role_auth::mutable_auth() {
  // @@protoc_insertion_point(field_mutable_list:manager.role_auth.auth)
  return &auth_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::sys_auth >&
role_auth::auth() const {
  // @@protoc_insertion_point(field_list:manager.role_auth.auth)
  return auth_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_login::kRequestidFieldNumber;
const int req_login::kUseridFieldNumber;
const int req_login::kPwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_login::req_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_login)
}
req_login::req_login(const req_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pwd().size() > 0) {
    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_login)
}

void req_login::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_login::~req_login() {
  // @@protoc_insertion_point(destructor:manager.req_login)
  SharedDtor();
}

void req_login::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_login::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_login& req_login::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_login* req_login::New(::google::protobuf::Arena* arena) const {
  req_login* n = new req_login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_login::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_login.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pwd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), static_cast<int>(this->pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_login.pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_login)
  return false;
#undef DO_
}

void req_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_login.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // string pwd = 3;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_login.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pwd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_login)
}

::google::protobuf::uint8* req_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_login.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // string pwd = 3;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_login.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pwd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_login)
  return target;
}

size_t req_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string pwd = 3;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_login)
  GOOGLE_DCHECK_NE(&from, this);
  const req_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_login)
    MergeFrom(*source);
  }
}

void req_login::MergeFrom(const req_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_login::CopyFrom(const req_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_login::IsInitialized() const {
  return true;
}

void req_login::Swap(req_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_login::InternalSwap(req_login* other) {
  using std::swap;
  userid_.Swap(&other->userid_);
  pwd_.Swap(&other->pwd_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_login::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_login

// int32 requestid = 1;
void req_login::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_login::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_login.requestid)
  return requestid_;
}
void req_login::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_login.requestid)
}

// string userid = 2;
void req_login::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_login::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_login.userid)
  return userid_.GetNoArena();
}
void req_login::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_login.userid)
}
#if LANG_CXX11
void req_login::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_login.userid)
}
#endif
void req_login::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_login.userid)
}
void req_login::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_login.userid)
}
::std::string* req_login::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_login.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_login::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_login.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_login::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_login.userid)
}

// string pwd = 3;
void req_login::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_login::pwd() const {
  // @@protoc_insertion_point(field_get:manager.req_login.pwd)
  return pwd_.GetNoArena();
}
void req_login::set_pwd(const ::std::string& value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_login.pwd)
}
#if LANG_CXX11
void req_login::set_pwd(::std::string&& value) {
  
  pwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_login.pwd)
}
#endif
void req_login::set_pwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_login.pwd)
}
void req_login::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_login.pwd)
}
::std::string* req_login::mutable_pwd() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_login.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_login::release_pwd() {
  // @@protoc_insertion_point(field_release:manager.req_login.pwd)
  
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_login::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:manager.req_login.pwd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_login::kHeaderFieldNumber;
const int rsp_login::kAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_login::rsp_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_login)
}
rsp_login::rsp_login(const rsp_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      auth_(from.auth_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_login)
}

void rsp_login::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_login::~rsp_login() {
  // @@protoc_insertion_point(destructor:manager.rsp_login)
  SharedDtor();
}

void rsp_login::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void rsp_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_login::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_login& rsp_login::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_login* rsp_login::New(::google::protobuf::Arena* arena) const {
  rsp_login* n = new rsp_login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_login::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auth_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.role_auth auth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_login)
  return false;
#undef DO_
}

void rsp_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .manager.role_auth auth = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auth_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->auth(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_login)
}

::google::protobuf::uint8* rsp_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .manager.role_auth auth = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auth_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->auth(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_login)
  return target;
}

size_t rsp_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.role_auth auth = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->auth_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->auth(static_cast<int>(i)));
    }
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_login)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_login)
    MergeFrom(*source);
  }
}

void rsp_login::MergeFrom(const rsp_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auth_.MergeFrom(from.auth_);
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_login::CopyFrom(const rsp_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_login::IsInitialized() const {
  return true;
}

void rsp_login::Swap(rsp_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_login::InternalSwap(rsp_login* other) {
  using std::swap;
  auth_.InternalSwap(&other->auth_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_login::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_login

// .manager.rsp_head_info header = 1;
bool rsp_login::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_login::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_login::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_login.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_login::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_login.header)
  return header_;
}
::manager::rsp_head_info* rsp_login::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_login.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_login::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_login.header)
}

// repeated .manager.role_auth auth = 2;
int rsp_login::auth_size() const {
  return auth_.size();
}
void rsp_login::clear_auth() {
  auth_.Clear();
}
const ::manager::role_auth& rsp_login::auth(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_login.auth)
  return auth_.Get(index);
}
::manager::role_auth* rsp_login::mutable_auth(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_login.auth)
  return auth_.Mutable(index);
}
::manager::role_auth* rsp_login::add_auth() {
  // @@protoc_insertion_point(field_add:manager.rsp_login.auth)
  return auth_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::role_auth >*
rsp_login::mutable_auth() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_login.auth)
  return &auth_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::role_auth >&
rsp_login::auth() const {
  // @@protoc_insertion_point(field_list:manager.rsp_login.auth)
  return auth_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_sys_subs::kRequestidFieldNumber;
const int req_sys_subs::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_sys_subs::req_sys_subs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_sys_subs)
}
req_sys_subs::req_sys_subs(const req_sys_subs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_sys_subs)
}

void req_sys_subs::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_sys_subs::~req_sys_subs() {
  // @@protoc_insertion_point(destructor:manager.req_sys_subs)
  SharedDtor();
}

void req_sys_subs::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_sys_subs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_sys_subs::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_sys_subs& req_sys_subs::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_sys_subs* req_sys_subs::New(::google::protobuf::Arena* arena) const {
  req_sys_subs* n = new req_sys_subs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_sys_subs::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_sys_subs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_sys_subs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_sys_subs.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_sys_subs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_sys_subs)
  return false;
#undef DO_
}

void req_sys_subs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_sys_subs.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_sys_subs)
}

::google::protobuf::uint8* req_sys_subs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_sys_subs.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_sys_subs)
  return target;
}

size_t req_sys_subs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_sys_subs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_sys_subs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_sys_subs)
  GOOGLE_DCHECK_NE(&from, this);
  const req_sys_subs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_sys_subs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_sys_subs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_sys_subs)
    MergeFrom(*source);
  }
}

void req_sys_subs::MergeFrom(const req_sys_subs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_sys_subs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_sys_subs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_sys_subs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_sys_subs::CopyFrom(const req_sys_subs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_sys_subs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_sys_subs::IsInitialized() const {
  return true;
}

void req_sys_subs::Swap(req_sys_subs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_sys_subs::InternalSwap(req_sys_subs* other) {
  using std::swap;
  userid_.Swap(&other->userid_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_sys_subs::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_sys_subs

// int32 requestid = 1;
void req_sys_subs::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_sys_subs::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_sys_subs.requestid)
  return requestid_;
}
void req_sys_subs::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_sys_subs.requestid)
}

// string userid = 2;
void req_sys_subs::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_sys_subs::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_sys_subs.userid)
  return userid_.GetNoArena();
}
void req_sys_subs::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_sys_subs.userid)
}
#if LANG_CXX11
void req_sys_subs::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_sys_subs.userid)
}
#endif
void req_sys_subs::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_sys_subs.userid)
}
void req_sys_subs::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_sys_subs.userid)
}
::std::string* req_sys_subs::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_sys_subs.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_sys_subs::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_sys_subs.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_sys_subs::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_sys_subs.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sys_user::kIdFieldNumber;
const int sys_user::kUseridFieldNumber;
const int sys_user::kUsernameFieldNumber;
const int sys_user::kFatherFieldNumber;
const int sys_user::kRoleidFieldNumber;
const int sys_user::kPwdFieldNumber;
const int sys_user::kDescFieldNumber;
const int sys_user::kAuthsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sys_user::sys_user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.sys_user)
}
sys_user::sys_user(const sys_user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      auths_(from.auths_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  father_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.father().size() > 0) {
    father_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.father_);
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pwd().size() > 0) {
    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(roleid_));
  // @@protoc_insertion_point(copy_constructor:manager.sys_user)
}

void sys_user::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  father_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(roleid_));
  _cached_size_ = 0;
}

sys_user::~sys_user() {
  // @@protoc_insertion_point(destructor:manager.sys_user)
  SharedDtor();
}

void sys_user::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  father_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void sys_user::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sys_user::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const sys_user& sys_user::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

sys_user* sys_user::New(::google::protobuf::Arena* arena) const {
  sys_user* n = new sys_user;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void sys_user::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auths_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  father_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(roleid_));
  _internal_metadata_.Clear();
}

bool sys_user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.sys_user)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_user.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_user.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string father = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_father()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->father().data(), static_cast<int>(this->father().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_user.father"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 roleid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pwd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), static_cast<int>(this->pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_user.pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_user.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.sys_auth auths = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_auths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.sys_user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.sys_user)
  return false;
#undef DO_
}

void sys_user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // string father = 4;
  if (this->father().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->father().data(), static_cast<int>(this->father().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.father");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->father(), output);
  }

  // int32 roleid = 5;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->roleid(), output);
  }

  // string pwd = 6;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->pwd(), output);
  }

  // string desc = 7;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->desc(), output);
  }

  // repeated .manager.sys_auth auths = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auths_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->auths(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.sys_user)
}

::google::protobuf::uint8* sys_user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // string father = 4;
  if (this->father().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->father().data(), static_cast<int>(this->father().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.father");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->father(), target);
  }

  // int32 roleid = 5;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->roleid(), target);
  }

  // string pwd = 6;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->pwd(), target);
  }

  // string desc = 7;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->desc(), target);
  }

  // repeated .manager.sys_auth auths = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auths_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->auths(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.sys_user)
  return target;
}

size_t sys_user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.sys_user)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.sys_auth auths = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->auths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->auths(static_cast<int>(i)));
    }
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string username = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string father = 4;
  if (this->father().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->father());
  }

  // string pwd = 6;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  // string desc = 7;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 roleid = 5;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sys_user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  const sys_user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sys_user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.sys_user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.sys_user)
    MergeFrom(*source);
  }
}

void sys_user::MergeFrom(const sys_user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auths_.MergeFrom(from.auths_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.father().size() > 0) {

    father_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.father_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void sys_user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sys_user::CopyFrom(const sys_user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sys_user::IsInitialized() const {
  return true;
}

void sys_user::Swap(sys_user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sys_user::InternalSwap(sys_user* other) {
  using std::swap;
  auths_.InternalSwap(&other->auths_);
  userid_.Swap(&other->userid_);
  username_.Swap(&other->username_);
  father_.Swap(&other->father_);
  pwd_.Swap(&other->pwd_);
  desc_.Swap(&other->desc_);
  swap(id_, other->id_);
  swap(roleid_, other->roleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata sys_user::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// sys_user

// int32 id = 1;
void sys_user::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 sys_user::id() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.id)
  return id_;
}
void sys_user::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:manager.sys_user.id)
}

// string userid = 2;
void sys_user::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_user::userid() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.userid)
  return userid_.GetNoArena();
}
void sys_user::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_user.userid)
}
#if LANG_CXX11
void sys_user::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_user.userid)
}
#endif
void sys_user::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_user.userid)
}
void sys_user::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_user.userid)
}
::std::string* sys_user::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_user.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_user::release_userid() {
  // @@protoc_insertion_point(field_release:manager.sys_user.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_user::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_user.userid)
}

// string username = 3;
void sys_user::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_user::username() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.username)
  return username_.GetNoArena();
}
void sys_user::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_user.username)
}
#if LANG_CXX11
void sys_user::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_user.username)
}
#endif
void sys_user::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_user.username)
}
void sys_user::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_user.username)
}
::std::string* sys_user::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_user.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_user::release_username() {
  // @@protoc_insertion_point(field_release:manager.sys_user.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_user::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_user.username)
}

// string father = 4;
void sys_user::clear_father() {
  father_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_user::father() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.father)
  return father_.GetNoArena();
}
void sys_user::set_father(const ::std::string& value) {
  
  father_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_user.father)
}
#if LANG_CXX11
void sys_user::set_father(::std::string&& value) {
  
  father_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_user.father)
}
#endif
void sys_user::set_father(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  father_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_user.father)
}
void sys_user::set_father(const char* value, size_t size) {
  
  father_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_user.father)
}
::std::string* sys_user::mutable_father() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_user.father)
  return father_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_user::release_father() {
  // @@protoc_insertion_point(field_release:manager.sys_user.father)
  
  return father_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_user::set_allocated_father(::std::string* father) {
  if (father != NULL) {
    
  } else {
    
  }
  father_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), father);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_user.father)
}

// int32 roleid = 5;
void sys_user::clear_roleid() {
  roleid_ = 0;
}
::google::protobuf::int32 sys_user::roleid() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.roleid)
  return roleid_;
}
void sys_user::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:manager.sys_user.roleid)
}

// string pwd = 6;
void sys_user::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_user::pwd() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.pwd)
  return pwd_.GetNoArena();
}
void sys_user::set_pwd(const ::std::string& value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_user.pwd)
}
#if LANG_CXX11
void sys_user::set_pwd(::std::string&& value) {
  
  pwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_user.pwd)
}
#endif
void sys_user::set_pwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_user.pwd)
}
void sys_user::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_user.pwd)
}
::std::string* sys_user::mutable_pwd() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_user.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_user::release_pwd() {
  // @@protoc_insertion_point(field_release:manager.sys_user.pwd)
  
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_user::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_user.pwd)
}

// string desc = 7;
void sys_user::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_user::desc() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.desc)
  return desc_.GetNoArena();
}
void sys_user::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_user.desc)
}
#if LANG_CXX11
void sys_user::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_user.desc)
}
#endif
void sys_user::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_user.desc)
}
void sys_user::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_user.desc)
}
::std::string* sys_user::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_user.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_user::release_desc() {
  // @@protoc_insertion_point(field_release:manager.sys_user.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_user::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_user.desc)
}

// repeated .manager.sys_auth auths = 8;
int sys_user::auths_size() const {
  return auths_.size();
}
void sys_user::clear_auths() {
  auths_.Clear();
}
const ::manager::sys_auth& sys_user::auths(int index) const {
  // @@protoc_insertion_point(field_get:manager.sys_user.auths)
  return auths_.Get(index);
}
::manager::sys_auth* sys_user::mutable_auths(int index) {
  // @@protoc_insertion_point(field_mutable:manager.sys_user.auths)
  return auths_.Mutable(index);
}
::manager::sys_auth* sys_user::add_auths() {
  // @@protoc_insertion_point(field_add:manager.sys_user.auths)
  return auths_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::sys_auth >*
sys_user::mutable_auths() {
  // @@protoc_insertion_point(field_mutable_list:manager.sys_user.auths)
  return &auths_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::sys_auth >&
sys_user::auths() const {
  // @@protoc_insertion_point(field_list:manager.sys_user.auths)
  return auths_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_sys_subs::kHeaderFieldNumber;
const int rsp_sys_subs::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_sys_subs::rsp_sys_subs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_sys_subs)
}
rsp_sys_subs::rsp_sys_subs(const rsp_sys_subs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      info_(from.info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_sys_subs)
}

void rsp_sys_subs::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_sys_subs::~rsp_sys_subs() {
  // @@protoc_insertion_point(destructor:manager.rsp_sys_subs)
  SharedDtor();
}

void rsp_sys_subs::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void rsp_sys_subs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_sys_subs::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_sys_subs& rsp_sys_subs::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_sys_subs* rsp_sys_subs::New(::google::protobuf::Arena* arena) const {
  rsp_sys_subs* n = new rsp_sys_subs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_sys_subs::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_sys_subs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_sys_subs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.sys_user info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_sys_subs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_sys_subs)
  return false;
#undef DO_
}

void rsp_sys_subs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .manager.sys_user info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_sys_subs)
}

::google::protobuf::uint8* rsp_sys_subs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .manager.sys_user info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_sys_subs)
  return target;
}

size_t rsp_sys_subs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_sys_subs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.sys_user info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info(static_cast<int>(i)));
    }
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_sys_subs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_sys_subs)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_sys_subs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_sys_subs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_sys_subs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_sys_subs)
    MergeFrom(*source);
  }
}

void rsp_sys_subs::MergeFrom(const rsp_sys_subs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_sys_subs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_sys_subs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_sys_subs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_sys_subs::CopyFrom(const rsp_sys_subs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_sys_subs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_sys_subs::IsInitialized() const {
  return true;
}

void rsp_sys_subs::Swap(rsp_sys_subs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_sys_subs::InternalSwap(rsp_sys_subs* other) {
  using std::swap;
  info_.InternalSwap(&other->info_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_sys_subs::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_sys_subs

// .manager.rsp_head_info header = 1;
bool rsp_sys_subs::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_sys_subs::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_sys_subs::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_sys_subs.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_sys_subs::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_sys_subs.header)
  return header_;
}
::manager::rsp_head_info* rsp_sys_subs::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_sys_subs.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_sys_subs::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_sys_subs.header)
}

// repeated .manager.sys_user info = 2;
int rsp_sys_subs::info_size() const {
  return info_.size();
}
void rsp_sys_subs::clear_info() {
  info_.Clear();
}
const ::manager::sys_user& rsp_sys_subs::info(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_sys_subs.info)
  return info_.Get(index);
}
::manager::sys_user* rsp_sys_subs::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_sys_subs.info)
  return info_.Mutable(index);
}
::manager::sys_user* rsp_sys_subs::add_info() {
  // @@protoc_insertion_point(field_add:manager.rsp_sys_subs.info)
  return info_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::sys_user >*
rsp_sys_subs::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_sys_subs.info)
  return &info_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::sys_user >&
rsp_sys_subs::info() const {
  // @@protoc_insertion_point(field_list:manager.rsp_sys_subs.info)
  return info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_add_sys_user::kRequestidFieldNumber;
const int req_add_sys_user::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_add_sys_user::req_add_sys_user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_add_sys_user)
}
req_add_sys_user::req_add_sys_user(const req_add_sys_user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::manager::sys_user(*from.user_);
  } else {
    user_ = NULL;
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_add_sys_user)
}

void req_add_sys_user::SharedCtor() {
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&user_)) + sizeof(requestid_));
  _cached_size_ = 0;
}

req_add_sys_user::~req_add_sys_user() {
  // @@protoc_insertion_point(destructor:manager.req_add_sys_user)
  SharedDtor();
}

void req_add_sys_user::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
}

void req_add_sys_user::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_add_sys_user::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_add_sys_user& req_add_sys_user::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_add_sys_user* req_add_sys_user::New(::google::protobuf::Arena* arena) const {
  req_add_sys_user* n = new req_add_sys_user;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_add_sys_user::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_add_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_add_sys_user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_add_sys_user)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.sys_user user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_add_sys_user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_add_sys_user)
  return false;
#undef DO_
}

void req_add_sys_user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_add_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.sys_user user = 2;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_add_sys_user)
}

::google::protobuf::uint8* req_add_sys_user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_add_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.sys_user user = 2;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->user_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_add_sys_user)
  return target;
}

size_t req_add_sys_user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_add_sys_user)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.sys_user user = 2;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_add_sys_user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_add_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  const req_add_sys_user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_add_sys_user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_add_sys_user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_add_sys_user)
    MergeFrom(*source);
  }
}

void req_add_sys_user::MergeFrom(const req_add_sys_user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_add_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    mutable_user()->::manager::sys_user::MergeFrom(from.user());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_add_sys_user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_add_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_add_sys_user::CopyFrom(const req_add_sys_user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_add_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_add_sys_user::IsInitialized() const {
  return true;
}

void req_add_sys_user::Swap(req_add_sys_user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_add_sys_user::InternalSwap(req_add_sys_user* other) {
  using std::swap;
  swap(user_, other->user_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_add_sys_user::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_add_sys_user

// int32 requestid = 1;
void req_add_sys_user::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_add_sys_user::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_add_sys_user.requestid)
  return requestid_;
}
void req_add_sys_user::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_add_sys_user.requestid)
}

// .manager.sys_user user = 2;
bool req_add_sys_user::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
void req_add_sys_user::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
const ::manager::sys_user& req_add_sys_user::user() const {
  const ::manager::sys_user* p = user_;
  // @@protoc_insertion_point(field_get:manager.req_add_sys_user.user)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::sys_user*>(
      &::manager::_sys_user_default_instance_);
}
::manager::sys_user* req_add_sys_user::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::manager::sys_user;
  }
  // @@protoc_insertion_point(field_mutable:manager.req_add_sys_user.user)
  return user_;
}
::manager::sys_user* req_add_sys_user::release_user() {
  // @@protoc_insertion_point(field_release:manager.req_add_sys_user.user)
  
  ::manager::sys_user* temp = user_;
  user_ = NULL;
  return temp;
}
void req_add_sys_user::set_allocated_user(::manager::sys_user* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.req_add_sys_user.user)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_del_sys_user::kRequestidFieldNumber;
const int req_del_sys_user::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_del_sys_user::req_del_sys_user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_del_sys_user)
}
req_del_sys_user::req_del_sys_user(const req_del_sys_user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_del_sys_user)
}

void req_del_sys_user::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_del_sys_user::~req_del_sys_user() {
  // @@protoc_insertion_point(destructor:manager.req_del_sys_user)
  SharedDtor();
}

void req_del_sys_user::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_del_sys_user::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_del_sys_user::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_del_sys_user& req_del_sys_user::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_del_sys_user* req_del_sys_user::New(::google::protobuf::Arena* arena) const {
  req_del_sys_user* n = new req_del_sys_user;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_del_sys_user::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_del_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_del_sys_user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_del_sys_user)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_del_sys_user.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_del_sys_user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_del_sys_user)
  return false;
#undef DO_
}

void req_del_sys_user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_del_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_sys_user.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_del_sys_user)
}

::google::protobuf::uint8* req_del_sys_user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_del_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_sys_user.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_del_sys_user)
  return target;
}

size_t req_del_sys_user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_del_sys_user)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_del_sys_user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_del_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  const req_del_sys_user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_del_sys_user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_del_sys_user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_del_sys_user)
    MergeFrom(*source);
  }
}

void req_del_sys_user::MergeFrom(const req_del_sys_user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_del_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_del_sys_user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_del_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_del_sys_user::CopyFrom(const req_del_sys_user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_del_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_del_sys_user::IsInitialized() const {
  return true;
}

void req_del_sys_user::Swap(req_del_sys_user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_del_sys_user::InternalSwap(req_del_sys_user* other) {
  using std::swap;
  userid_.Swap(&other->userid_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_del_sys_user::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_del_sys_user

// int32 requestid = 1;
void req_del_sys_user::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_del_sys_user::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_del_sys_user.requestid)
  return requestid_;
}
void req_del_sys_user::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_del_sys_user.requestid)
}

// string userid = 2;
void req_del_sys_user::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_del_sys_user::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_del_sys_user.userid)
  return userid_.GetNoArena();
}
void req_del_sys_user::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_del_sys_user.userid)
}
#if LANG_CXX11
void req_del_sys_user::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_del_sys_user.userid)
}
#endif
void req_del_sys_user::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_del_sys_user.userid)
}
void req_del_sys_user::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_del_sys_user.userid)
}
::std::string* req_del_sys_user::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_del_sys_user.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_del_sys_user::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_del_sys_user.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_del_sys_user::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_del_sys_user.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_edit_sys_user::kRequestidFieldNumber;
const int req_edit_sys_user::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_edit_sys_user::req_edit_sys_user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_edit_sys_user)
}
req_edit_sys_user::req_edit_sys_user(const req_edit_sys_user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::manager::sys_user(*from.user_);
  } else {
    user_ = NULL;
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_edit_sys_user)
}

void req_edit_sys_user::SharedCtor() {
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&user_)) + sizeof(requestid_));
  _cached_size_ = 0;
}

req_edit_sys_user::~req_edit_sys_user() {
  // @@protoc_insertion_point(destructor:manager.req_edit_sys_user)
  SharedDtor();
}

void req_edit_sys_user::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
}

void req_edit_sys_user::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_edit_sys_user::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_edit_sys_user& req_edit_sys_user::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_edit_sys_user* req_edit_sys_user::New(::google::protobuf::Arena* arena) const {
  req_edit_sys_user* n = new req_edit_sys_user;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_edit_sys_user::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_edit_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_edit_sys_user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_edit_sys_user)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.sys_user user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_edit_sys_user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_edit_sys_user)
  return false;
#undef DO_
}

void req_edit_sys_user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_edit_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.sys_user user = 2;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_edit_sys_user)
}

::google::protobuf::uint8* req_edit_sys_user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_edit_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.sys_user user = 2;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->user_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_edit_sys_user)
  return target;
}

size_t req_edit_sys_user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_edit_sys_user)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.sys_user user = 2;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_edit_sys_user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_edit_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  const req_edit_sys_user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_edit_sys_user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_edit_sys_user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_edit_sys_user)
    MergeFrom(*source);
  }
}

void req_edit_sys_user::MergeFrom(const req_edit_sys_user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_edit_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    mutable_user()->::manager::sys_user::MergeFrom(from.user());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_edit_sys_user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_edit_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_edit_sys_user::CopyFrom(const req_edit_sys_user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_edit_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_edit_sys_user::IsInitialized() const {
  return true;
}

void req_edit_sys_user::Swap(req_edit_sys_user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_edit_sys_user::InternalSwap(req_edit_sys_user* other) {
  using std::swap;
  swap(user_, other->user_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_edit_sys_user::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_edit_sys_user

// int32 requestid = 1;
void req_edit_sys_user::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_edit_sys_user::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_edit_sys_user.requestid)
  return requestid_;
}
void req_edit_sys_user::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_edit_sys_user.requestid)
}

// .manager.sys_user user = 2;
bool req_edit_sys_user::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
void req_edit_sys_user::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
const ::manager::sys_user& req_edit_sys_user::user() const {
  const ::manager::sys_user* p = user_;
  // @@protoc_insertion_point(field_get:manager.req_edit_sys_user.user)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::sys_user*>(
      &::manager::_sys_user_default_instance_);
}
::manager::sys_user* req_edit_sys_user::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::manager::sys_user;
  }
  // @@protoc_insertion_point(field_mutable:manager.req_edit_sys_user.user)
  return user_;
}
::manager::sys_user* req_edit_sys_user::release_user() {
  // @@protoc_insertion_point(field_release:manager.req_edit_sys_user.user)
  
  ::manager::sys_user* temp = user_;
  user_ = NULL;
  return temp;
}
void req_edit_sys_user::set_allocated_user(::manager::sys_user* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.req_edit_sys_user.user)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sys_investor::kInvestorFieldNumber;
const int sys_investor::kNameFieldNumber;
const int sys_investor::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sys_investor::sys_investor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.sys_investor)
}
sys_investor::sys_investor(const sys_investor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  investor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor().size() > 0) {
    investor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:manager.sys_investor)
}

void sys_investor::SharedCtor() {
  investor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  _cached_size_ = 0;
}

sys_investor::~sys_investor() {
  // @@protoc_insertion_point(destructor:manager.sys_investor)
  SharedDtor();
}

void sys_investor::SharedDtor() {
  investor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void sys_investor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sys_investor::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const sys_investor& sys_investor::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

sys_investor* sys_investor::New(::google::protobuf::Arena* arena) const {
  sys_investor* n = new sys_investor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void sys_investor::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.sys_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  _internal_metadata_.Clear();
}

bool sys_investor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.sys_investor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string investor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor().data(), static_cast<int>(this->investor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_investor.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_investor.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.sys_investor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.sys_investor)
  return false;
#undef DO_
}

void sys_investor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.sys_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string investor = 1;
  if (this->investor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor().data(), static_cast<int>(this->investor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_investor.investor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->investor(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_investor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.sys_investor)
}

::google::protobuf::uint8* sys_investor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.sys_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string investor = 1;
  if (this->investor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor().data(), static_cast<int>(this->investor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_investor.investor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->investor(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_investor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.sys_investor)
  return target;
}

size_t sys_investor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.sys_investor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string investor = 1;
  if (this->investor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sys_investor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.sys_investor)
  GOOGLE_DCHECK_NE(&from, this);
  const sys_investor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sys_investor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.sys_investor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.sys_investor)
    MergeFrom(*source);
  }
}

void sys_investor::MergeFrom(const sys_investor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.sys_investor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.investor().size() > 0) {

    investor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void sys_investor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.sys_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sys_investor::CopyFrom(const sys_investor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.sys_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sys_investor::IsInitialized() const {
  return true;
}

void sys_investor::Swap(sys_investor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sys_investor::InternalSwap(sys_investor* other) {
  using std::swap;
  investor_.Swap(&other->investor_);
  name_.Swap(&other->name_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata sys_investor::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// sys_investor

// string investor = 1;
void sys_investor::clear_investor() {
  investor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_investor::investor() const {
  // @@protoc_insertion_point(field_get:manager.sys_investor.investor)
  return investor_.GetNoArena();
}
void sys_investor::set_investor(const ::std::string& value) {
  
  investor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_investor.investor)
}
#if LANG_CXX11
void sys_investor::set_investor(::std::string&& value) {
  
  investor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_investor.investor)
}
#endif
void sys_investor::set_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  investor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_investor.investor)
}
void sys_investor::set_investor(const char* value, size_t size) {
  
  investor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_investor.investor)
}
::std::string* sys_investor::mutable_investor() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_investor.investor)
  return investor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_investor::release_investor() {
  // @@protoc_insertion_point(field_release:manager.sys_investor.investor)
  
  return investor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_investor::set_allocated_investor(::std::string* investor) {
  if (investor != NULL) {
    
  } else {
    
  }
  investor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investor);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_investor.investor)
}

// string name = 2;
void sys_investor::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_investor::name() const {
  // @@protoc_insertion_point(field_get:manager.sys_investor.name)
  return name_.GetNoArena();
}
void sys_investor::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_investor.name)
}
#if LANG_CXX11
void sys_investor::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_investor.name)
}
#endif
void sys_investor::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_investor.name)
}
void sys_investor::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_investor.name)
}
::std::string* sys_investor::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_investor.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_investor::release_name() {
  // @@protoc_insertion_point(field_release:manager.sys_investor.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_investor::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_investor.name)
}

// int32 state = 3;
void sys_investor::clear_state() {
  state_ = 0;
}
::google::protobuf::int32 sys_investor::state() const {
  // @@protoc_insertion_point(field_get:manager.sys_investor.state)
  return state_;
}
void sys_investor::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:manager.sys_investor.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_risk_investors::kRequestidFieldNumber;
const int req_risk_investors::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_risk_investors::req_risk_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_risk_investors)
}
req_risk_investors::req_risk_investors(const req_risk_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_risk_investors)
}

void req_risk_investors::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_risk_investors::~req_risk_investors() {
  // @@protoc_insertion_point(destructor:manager.req_risk_investors)
  SharedDtor();
}

void req_risk_investors::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_risk_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_risk_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_risk_investors& req_risk_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_risk_investors* req_risk_investors::New(::google::protobuf::Arena* arena) const {
  req_risk_investors* n = new req_risk_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_risk_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_risk_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_risk_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_risk_investors.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_risk_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_risk_investors)
  return false;
#undef DO_
}

void req_risk_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_risk_investors.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_risk_investors)
}

::google::protobuf::uint8* req_risk_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_risk_investors.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_risk_investors)
  return target;
}

size_t req_risk_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_risk_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_risk_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_risk_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const req_risk_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_risk_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_risk_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_risk_investors)
    MergeFrom(*source);
  }
}

void req_risk_investors::MergeFrom(const req_risk_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_risk_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_risk_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_risk_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_risk_investors::CopyFrom(const req_risk_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_risk_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_risk_investors::IsInitialized() const {
  return true;
}

void req_risk_investors::Swap(req_risk_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_risk_investors::InternalSwap(req_risk_investors* other) {
  using std::swap;
  userid_.Swap(&other->userid_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_risk_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_risk_investors

// int32 requestid = 1;
void req_risk_investors::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_risk_investors::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_risk_investors.requestid)
  return requestid_;
}
void req_risk_investors::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_risk_investors.requestid)
}

// string userid = 2;
void req_risk_investors::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_risk_investors::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_risk_investors.userid)
  return userid_.GetNoArena();
}
void req_risk_investors::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_risk_investors.userid)
}
#if LANG_CXX11
void req_risk_investors::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_risk_investors.userid)
}
#endif
void req_risk_investors::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_risk_investors.userid)
}
void req_risk_investors::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_risk_investors.userid)
}
::std::string* req_risk_investors::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_risk_investors.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_risk_investors::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_risk_investors.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_risk_investors::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_risk_investors.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_risk_investors::kHeaderFieldNumber;
const int rsp_risk_investors::kUseridFieldNumber;
const int rsp_risk_investors::kInvestorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_risk_investors::rsp_risk_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_risk_investors)
}
rsp_risk_investors::rsp_risk_investors(const rsp_risk_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investors_(from.investors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_risk_investors)
}

void rsp_risk_investors::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_risk_investors::~rsp_risk_investors() {
  // @@protoc_insertion_point(destructor:manager.rsp_risk_investors)
  SharedDtor();
}

void rsp_risk_investors::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void rsp_risk_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_risk_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_risk_investors& rsp_risk_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_risk_investors* rsp_risk_investors::New(::google::protobuf::Arena* arena) const {
  rsp_risk_investors* n = new rsp_risk_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_risk_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investors_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_risk_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_risk_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.rsp_risk_investors.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.sys_investor investors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_investors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_risk_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_risk_investors)
  return false;
#undef DO_
}

void rsp_risk_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rsp_risk_investors.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // repeated .manager.sys_investor investors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->investors(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_risk_investors)
}

::google::protobuf::uint8* rsp_risk_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rsp_risk_investors.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // repeated .manager.sys_investor investors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->investors(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_risk_investors)
  return target;
}

size_t rsp_risk_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_risk_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.sys_investor investors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->investors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->investors(static_cast<int>(i)));
    }
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_risk_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_risk_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_risk_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_risk_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_risk_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_risk_investors)
    MergeFrom(*source);
  }
}

void rsp_risk_investors::MergeFrom(const rsp_risk_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_risk_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investors_.MergeFrom(from.investors_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_risk_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_risk_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_risk_investors::CopyFrom(const rsp_risk_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_risk_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_risk_investors::IsInitialized() const {
  return true;
}

void rsp_risk_investors::Swap(rsp_risk_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_risk_investors::InternalSwap(rsp_risk_investors* other) {
  using std::swap;
  investors_.InternalSwap(&other->investors_);
  userid_.Swap(&other->userid_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_risk_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_risk_investors

// .manager.rsp_head_info header = 1;
bool rsp_risk_investors::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_risk_investors::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_risk_investors::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_risk_investors.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_risk_investors::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_risk_investors.header)
  return header_;
}
::manager::rsp_head_info* rsp_risk_investors::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_risk_investors.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_risk_investors::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_risk_investors.header)
}

// string userid = 2;
void rsp_risk_investors::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& rsp_risk_investors::userid() const {
  // @@protoc_insertion_point(field_get:manager.rsp_risk_investors.userid)
  return userid_.GetNoArena();
}
void rsp_risk_investors::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.rsp_risk_investors.userid)
}
#if LANG_CXX11
void rsp_risk_investors::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.rsp_risk_investors.userid)
}
#endif
void rsp_risk_investors::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.rsp_risk_investors.userid)
}
void rsp_risk_investors::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.rsp_risk_investors.userid)
}
::std::string* rsp_risk_investors::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.rsp_risk_investors.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* rsp_risk_investors::release_userid() {
  // @@protoc_insertion_point(field_release:manager.rsp_risk_investors.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void rsp_risk_investors::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_risk_investors.userid)
}

// repeated .manager.sys_investor investors = 3;
int rsp_risk_investors::investors_size() const {
  return investors_.size();
}
void rsp_risk_investors::clear_investors() {
  investors_.Clear();
}
const ::manager::sys_investor& rsp_risk_investors::investors(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_risk_investors.investors)
  return investors_.Get(index);
}
::manager::sys_investor* rsp_risk_investors::mutable_investors(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_risk_investors.investors)
  return investors_.Mutable(index);
}
::manager::sys_investor* rsp_risk_investors::add_investors() {
  // @@protoc_insertion_point(field_add:manager.rsp_risk_investors.investors)
  return investors_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::sys_investor >*
rsp_risk_investors::mutable_investors() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_risk_investors.investors)
  return &investors_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::sys_investor >&
rsp_risk_investors::investors() const {
  // @@protoc_insertion_point(field_list:manager.rsp_risk_investors.investors)
  return investors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_investors::kRequestidFieldNumber;
const int req_investors::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_investors::req_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_investors)
}
req_investors::req_investors(const req_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:manager.req_investors)
}

void req_investors::SharedCtor() {
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(state_));
  _cached_size_ = 0;
}

req_investors::~req_investors() {
  // @@protoc_insertion_point(destructor:manager.req_investors)
  SharedDtor();
}

void req_investors::SharedDtor() {
}

void req_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_investors& req_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_investors* req_investors::New(::google::protobuf::Arena* arena) const {
  req_investors* n = new req_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool req_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_investors)
  return false;
#undef DO_
}

void req_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // int32 state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_investors)
}

::google::protobuf::uint8* req_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // int32 state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_investors)
  return target;
}

size_t req_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  // int32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const req_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_investors)
    MergeFrom(*source);
  }
}

void req_investors::MergeFrom(const req_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void req_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_investors::CopyFrom(const req_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_investors::IsInitialized() const {
  return true;
}

void req_investors::Swap(req_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_investors::InternalSwap(req_investors* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_investors

// int32 requestid = 1;
void req_investors::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_investors::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_investors.requestid)
  return requestid_;
}
void req_investors::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_investors.requestid)
}

// int32 state = 2;
void req_investors::clear_state() {
  state_ = 0;
}
::google::protobuf::int32 req_investors::state() const {
  // @@protoc_insertion_point(field_get:manager.req_investors.state)
  return state_;
}
void req_investors::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:manager.req_investors.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_investors::kHeaderFieldNumber;
const int rsp_investors::kInvestorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_investors::rsp_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_investors)
}
rsp_investors::rsp_investors(const rsp_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investors_(from.investors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_investors)
}

void rsp_investors::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_investors::~rsp_investors() {
  // @@protoc_insertion_point(destructor:manager.rsp_investors)
  SharedDtor();
}

void rsp_investors::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void rsp_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_investors& rsp_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_investors* rsp_investors::New(::google::protobuf::Arena* arena) const {
  rsp_investors* n = new rsp_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investors_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.sys_investor investors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_investors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_investors)
  return false;
#undef DO_
}

void rsp_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .manager.sys_investor investors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->investors(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_investors)
}

::google::protobuf::uint8* rsp_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .manager.sys_investor investors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->investors(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_investors)
  return target;
}

size_t rsp_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.sys_investor investors = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->investors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->investors(static_cast<int>(i)));
    }
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_investors)
    MergeFrom(*source);
  }
}

void rsp_investors::MergeFrom(const rsp_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investors_.MergeFrom(from.investors_);
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_investors::CopyFrom(const rsp_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_investors::IsInitialized() const {
  return true;
}

void rsp_investors::Swap(rsp_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_investors::InternalSwap(rsp_investors* other) {
  using std::swap;
  investors_.InternalSwap(&other->investors_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_investors

// .manager.rsp_head_info header = 1;
bool rsp_investors::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_investors::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_investors::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_investors.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_investors::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_investors.header)
  return header_;
}
::manager::rsp_head_info* rsp_investors::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_investors.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_investors::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_investors.header)
}

// repeated .manager.sys_investor investors = 2;
int rsp_investors::investors_size() const {
  return investors_.size();
}
void rsp_investors::clear_investors() {
  investors_.Clear();
}
const ::manager::sys_investor& rsp_investors::investors(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_investors.investors)
  return investors_.Get(index);
}
::manager::sys_investor* rsp_investors::mutable_investors(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_investors.investors)
  return investors_.Mutable(index);
}
::manager::sys_investor* rsp_investors::add_investors() {
  // @@protoc_insertion_point(field_add:manager.rsp_investors.investors)
  return investors_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::sys_investor >*
rsp_investors::mutable_investors() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_investors.investors)
  return &investors_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::sys_investor >&
rsp_investors::investors() const {
  // @@protoc_insertion_point(field_list:manager.rsp_investors.investors)
  return investors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_add_investors::kRequestidFieldNumber;
const int req_add_investors::kUseridFieldNumber;
const int req_add_investors::kInvestorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_add_investors::req_add_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_add_investors)
}
req_add_investors::req_add_investors(const req_add_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investor_(from.investor_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_add_investors)
}

void req_add_investors::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_add_investors::~req_add_investors() {
  // @@protoc_insertion_point(destructor:manager.req_add_investors)
  SharedDtor();
}

void req_add_investors::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_add_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_add_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_add_investors& req_add_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_add_investors* req_add_investors::New(::google::protobuf::Arena* arena) const {
  req_add_investors* n = new req_add_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_add_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_add_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_add_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_add_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_add_investors.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string investor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor(this->investor_size() - 1).data(),
            static_cast<int>(this->investor(this->investor_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_add_investors.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_add_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_add_investors)
  return false;
#undef DO_
}

void req_add_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_add_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_add_investors.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_add_investors.investor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->investor(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_add_investors)
}

::google::protobuf::uint8* req_add_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_add_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_add_investors.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_add_investors.investor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->investor(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_add_investors)
  return target;
}

size_t req_add_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_add_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string investor = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->investor_size());
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->investor(i));
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_add_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_add_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const req_add_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_add_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_add_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_add_investors)
    MergeFrom(*source);
  }
}

void req_add_investors::MergeFrom(const req_add_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_add_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investor_.MergeFrom(from.investor_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_add_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_add_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_add_investors::CopyFrom(const req_add_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_add_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_add_investors::IsInitialized() const {
  return true;
}

void req_add_investors::Swap(req_add_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_add_investors::InternalSwap(req_add_investors* other) {
  using std::swap;
  investor_.InternalSwap(&other->investor_);
  userid_.Swap(&other->userid_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_add_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_add_investors

// int32 requestid = 1;
void req_add_investors::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_add_investors::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_add_investors.requestid)
  return requestid_;
}
void req_add_investors::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_add_investors.requestid)
}

// string userid = 2;
void req_add_investors::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_add_investors::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_add_investors.userid)
  return userid_.GetNoArena();
}
void req_add_investors::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_add_investors.userid)
}
#if LANG_CXX11
void req_add_investors::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_add_investors.userid)
}
#endif
void req_add_investors::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_add_investors.userid)
}
void req_add_investors::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_add_investors.userid)
}
::std::string* req_add_investors::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_add_investors.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_add_investors::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_add_investors.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_add_investors::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_add_investors.userid)
}

// repeated string investor = 3;
int req_add_investors::investor_size() const {
  return investor_.size();
}
void req_add_investors::clear_investor() {
  investor_.Clear();
}
const ::std::string& req_add_investors::investor(int index) const {
  // @@protoc_insertion_point(field_get:manager.req_add_investors.investor)
  return investor_.Get(index);
}
::std::string* req_add_investors::mutable_investor(int index) {
  // @@protoc_insertion_point(field_mutable:manager.req_add_investors.investor)
  return investor_.Mutable(index);
}
void req_add_investors::set_investor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:manager.req_add_investors.investor)
  investor_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void req_add_investors::set_investor(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:manager.req_add_investors.investor)
  investor_.Mutable(index)->assign(std::move(value));
}
#endif
void req_add_investors::set_investor(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:manager.req_add_investors.investor)
}
void req_add_investors::set_investor(int index, const char* value, size_t size) {
  investor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manager.req_add_investors.investor)
}
::std::string* req_add_investors::add_investor() {
  // @@protoc_insertion_point(field_add_mutable:manager.req_add_investors.investor)
  return investor_.Add();
}
void req_add_investors::add_investor(const ::std::string& value) {
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:manager.req_add_investors.investor)
}
#if LANG_CXX11
void req_add_investors::add_investor(::std::string&& value) {
  investor_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:manager.req_add_investors.investor)
}
#endif
void req_add_investors::add_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:manager.req_add_investors.investor)
}
void req_add_investors::add_investor(const char* value, size_t size) {
  investor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:manager.req_add_investors.investor)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
req_add_investors::investor() const {
  // @@protoc_insertion_point(field_list:manager.req_add_investors.investor)
  return investor_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
req_add_investors::mutable_investor() {
  // @@protoc_insertion_point(field_mutable_list:manager.req_add_investors.investor)
  return &investor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_del_investors::kRequestidFieldNumber;
const int req_del_investors::kUseridFieldNumber;
const int req_del_investors::kInvestorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_del_investors::req_del_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_del_investors)
}
req_del_investors::req_del_investors(const req_del_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investor_(from.investor_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_del_investors)
}

void req_del_investors::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_del_investors::~req_del_investors() {
  // @@protoc_insertion_point(destructor:manager.req_del_investors)
  SharedDtor();
}

void req_del_investors::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_del_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_del_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_del_investors& req_del_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_del_investors* req_del_investors::New(::google::protobuf::Arena* arena) const {
  req_del_investors* n = new req_del_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_del_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_del_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_del_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_del_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_del_investors.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string investor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor(this->investor_size() - 1).data(),
            static_cast<int>(this->investor(this->investor_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_del_investors.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_del_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_del_investors)
  return false;
#undef DO_
}

void req_del_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_del_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_investors.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_investors.investor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->investor(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_del_investors)
}

::google::protobuf::uint8* req_del_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_del_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_investors.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_investors.investor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->investor(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_del_investors)
  return target;
}

size_t req_del_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_del_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string investor = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->investor_size());
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->investor(i));
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_del_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_del_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const req_del_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_del_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_del_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_del_investors)
    MergeFrom(*source);
  }
}

void req_del_investors::MergeFrom(const req_del_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_del_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investor_.MergeFrom(from.investor_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_del_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_del_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_del_investors::CopyFrom(const req_del_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_del_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_del_investors::IsInitialized() const {
  return true;
}

void req_del_investors::Swap(req_del_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_del_investors::InternalSwap(req_del_investors* other) {
  using std::swap;
  investor_.InternalSwap(&other->investor_);
  userid_.Swap(&other->userid_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_del_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_del_investors

// int32 requestid = 1;
void req_del_investors::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_del_investors::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_del_investors.requestid)
  return requestid_;
}
void req_del_investors::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_del_investors.requestid)
}

// string userid = 2;
void req_del_investors::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_del_investors::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_del_investors.userid)
  return userid_.GetNoArena();
}
void req_del_investors::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_del_investors.userid)
}
#if LANG_CXX11
void req_del_investors::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_del_investors.userid)
}
#endif
void req_del_investors::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_del_investors.userid)
}
void req_del_investors::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_del_investors.userid)
}
::std::string* req_del_investors::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_del_investors.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_del_investors::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_del_investors.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_del_investors::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_del_investors.userid)
}

// repeated string investor = 3;
int req_del_investors::investor_size() const {
  return investor_.size();
}
void req_del_investors::clear_investor() {
  investor_.Clear();
}
const ::std::string& req_del_investors::investor(int index) const {
  // @@protoc_insertion_point(field_get:manager.req_del_investors.investor)
  return investor_.Get(index);
}
::std::string* req_del_investors::mutable_investor(int index) {
  // @@protoc_insertion_point(field_mutable:manager.req_del_investors.investor)
  return investor_.Mutable(index);
}
void req_del_investors::set_investor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:manager.req_del_investors.investor)
  investor_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void req_del_investors::set_investor(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:manager.req_del_investors.investor)
  investor_.Mutable(index)->assign(std::move(value));
}
#endif
void req_del_investors::set_investor(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:manager.req_del_investors.investor)
}
void req_del_investors::set_investor(int index, const char* value, size_t size) {
  investor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manager.req_del_investors.investor)
}
::std::string* req_del_investors::add_investor() {
  // @@protoc_insertion_point(field_add_mutable:manager.req_del_investors.investor)
  return investor_.Add();
}
void req_del_investors::add_investor(const ::std::string& value) {
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:manager.req_del_investors.investor)
}
#if LANG_CXX11
void req_del_investors::add_investor(::std::string&& value) {
  investor_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:manager.req_del_investors.investor)
}
#endif
void req_del_investors::add_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:manager.req_del_investors.investor)
}
void req_del_investors::add_investor(const char* value, size_t size) {
  investor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:manager.req_del_investors.investor)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
req_del_investors::investor() const {
  // @@protoc_insertion_point(field_list:manager.req_del_investors.investor)
  return investor_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
req_del_investors::mutable_investor() {
  // @@protoc_insertion_point(field_mutable_list:manager.req_del_investors.investor)
  return &investor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_change_tree::kOperatoridFieldNumber;
const int rtn_change_tree::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_change_tree::rtn_change_tree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rtn_change_tree)
}
rtn_change_tree::rtn_change_tree(const rtn_change_tree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::sys_user(*from.info_);
  } else {
    info_ = NULL;
  }
  operatorid_ = from.operatorid_;
  // @@protoc_insertion_point(copy_constructor:manager.rtn_change_tree)
}

void rtn_change_tree::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operatorid_) -
      reinterpret_cast<char*>(&info_)) + sizeof(operatorid_));
  _cached_size_ = 0;
}

rtn_change_tree::~rtn_change_tree() {
  // @@protoc_insertion_point(destructor:manager.rtn_change_tree)
  SharedDtor();
}

void rtn_change_tree::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void rtn_change_tree::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_change_tree::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_change_tree& rtn_change_tree::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_change_tree* rtn_change_tree::New(::google::protobuf::Arena* arena) const {
  rtn_change_tree* n = new rtn_change_tree;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_change_tree::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rtn_change_tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  operatorid_ = 0;
  _internal_metadata_.Clear();
}

bool rtn_change_tree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rtn_change_tree)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 operatorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operatorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.sys_user info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rtn_change_tree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rtn_change_tree)
  return false;
#undef DO_
}

void rtn_change_tree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rtn_change_tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operatorid(), output);
  }

  // .manager.sys_user info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rtn_change_tree)
}

::google::protobuf::uint8* rtn_change_tree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rtn_change_tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operatorid(), target);
  }

  // .manager.sys_user info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rtn_change_tree)
  return target;
}

size_t rtn_change_tree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rtn_change_tree)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.sys_user info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->operatorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_change_tree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rtn_change_tree)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_change_tree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_change_tree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rtn_change_tree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rtn_change_tree)
    MergeFrom(*source);
  }
}

void rtn_change_tree::MergeFrom(const rtn_change_tree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rtn_change_tree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::sys_user::MergeFrom(from.info());
  }
  if (from.operatorid() != 0) {
    set_operatorid(from.operatorid());
  }
}

void rtn_change_tree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rtn_change_tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_change_tree::CopyFrom(const rtn_change_tree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rtn_change_tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_change_tree::IsInitialized() const {
  return true;
}

void rtn_change_tree::Swap(rtn_change_tree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_change_tree::InternalSwap(rtn_change_tree* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(operatorid_, other->operatorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_change_tree::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_change_tree

// int32 operatorid = 1;
void rtn_change_tree::clear_operatorid() {
  operatorid_ = 0;
}
::google::protobuf::int32 rtn_change_tree::operatorid() const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_tree.operatorid)
  return operatorid_;
}
void rtn_change_tree::set_operatorid(::google::protobuf::int32 value) {
  
  operatorid_ = value;
  // @@protoc_insertion_point(field_set:manager.rtn_change_tree.operatorid)
}

// .manager.sys_user info = 2;
bool rtn_change_tree::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void rtn_change_tree::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::sys_user& rtn_change_tree::info() const {
  const ::manager::sys_user* p = info_;
  // @@protoc_insertion_point(field_get:manager.rtn_change_tree.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::sys_user*>(
      &::manager::_sys_user_default_instance_);
}
::manager::sys_user* rtn_change_tree::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::sys_user;
  }
  // @@protoc_insertion_point(field_mutable:manager.rtn_change_tree.info)
  return info_;
}
::manager::sys_user* rtn_change_tree::release_info() {
  // @@protoc_insertion_point(field_release:manager.rtn_change_tree.info)
  
  ::manager::sys_user* temp = info_;
  info_ = NULL;
  return temp;
}
void rtn_change_tree::set_allocated_info(::manager::sys_user* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rtn_change_tree.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_change_risker_investor::kOperatoridFieldNumber;
const int rtn_change_risker_investor::kUseridFieldNumber;
const int rtn_change_risker_investor::kInvestorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_change_risker_investor::rtn_change_risker_investor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rtn_change_risker_investor)
}
rtn_change_risker_investor::rtn_change_risker_investor(const rtn_change_risker_investor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investor_(from.investor_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  operatorid_ = from.operatorid_;
  // @@protoc_insertion_point(copy_constructor:manager.rtn_change_risker_investor)
}

void rtn_change_risker_investor::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operatorid_ = 0;
  _cached_size_ = 0;
}

rtn_change_risker_investor::~rtn_change_risker_investor() {
  // @@protoc_insertion_point(destructor:manager.rtn_change_risker_investor)
  SharedDtor();
}

void rtn_change_risker_investor::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void rtn_change_risker_investor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_change_risker_investor::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_change_risker_investor& rtn_change_risker_investor::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_change_risker_investor* rtn_change_risker_investor::New(::google::protobuf::Arena* arena) const {
  rtn_change_risker_investor* n = new rtn_change_risker_investor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_change_risker_investor::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rtn_change_risker_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operatorid_ = 0;
  _internal_metadata_.Clear();
}

bool rtn_change_risker_investor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rtn_change_risker_investor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 operatorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operatorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.rtn_change_risker_investor.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string investor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor(this->investor_size() - 1).data(),
            static_cast<int>(this->investor(this->investor_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.rtn_change_risker_investor.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rtn_change_risker_investor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rtn_change_risker_investor)
  return false;
#undef DO_
}

void rtn_change_risker_investor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rtn_change_risker_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operatorid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_risker_investor.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_risker_investor.investor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->investor(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rtn_change_risker_investor)
}

::google::protobuf::uint8* rtn_change_risker_investor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rtn_change_risker_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operatorid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_risker_investor.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_risker_investor.investor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->investor(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rtn_change_risker_investor)
  return target;
}

size_t rtn_change_risker_investor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rtn_change_risker_investor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string investor = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->investor_size());
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->investor(i));
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->operatorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_change_risker_investor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rtn_change_risker_investor)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_change_risker_investor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_change_risker_investor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rtn_change_risker_investor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rtn_change_risker_investor)
    MergeFrom(*source);
  }
}

void rtn_change_risker_investor::MergeFrom(const rtn_change_risker_investor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rtn_change_risker_investor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investor_.MergeFrom(from.investor_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.operatorid() != 0) {
    set_operatorid(from.operatorid());
  }
}

void rtn_change_risker_investor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rtn_change_risker_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_change_risker_investor::CopyFrom(const rtn_change_risker_investor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rtn_change_risker_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_change_risker_investor::IsInitialized() const {
  return true;
}

void rtn_change_risker_investor::Swap(rtn_change_risker_investor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_change_risker_investor::InternalSwap(rtn_change_risker_investor* other) {
  using std::swap;
  investor_.InternalSwap(&other->investor_);
  userid_.Swap(&other->userid_);
  swap(operatorid_, other->operatorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_change_risker_investor::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_change_risker_investor

// int32 operatorid = 1;
void rtn_change_risker_investor::clear_operatorid() {
  operatorid_ = 0;
}
::google::protobuf::int32 rtn_change_risker_investor::operatorid() const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_risker_investor.operatorid)
  return operatorid_;
}
void rtn_change_risker_investor::set_operatorid(::google::protobuf::int32 value) {
  
  operatorid_ = value;
  // @@protoc_insertion_point(field_set:manager.rtn_change_risker_investor.operatorid)
}

// string userid = 2;
void rtn_change_risker_investor::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& rtn_change_risker_investor::userid() const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_risker_investor.userid)
  return userid_.GetNoArena();
}
void rtn_change_risker_investor::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.rtn_change_risker_investor.userid)
}
#if LANG_CXX11
void rtn_change_risker_investor::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.rtn_change_risker_investor.userid)
}
#endif
void rtn_change_risker_investor::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.rtn_change_risker_investor.userid)
}
void rtn_change_risker_investor::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.rtn_change_risker_investor.userid)
}
::std::string* rtn_change_risker_investor::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.rtn_change_risker_investor.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* rtn_change_risker_investor::release_userid() {
  // @@protoc_insertion_point(field_release:manager.rtn_change_risker_investor.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void rtn_change_risker_investor::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.rtn_change_risker_investor.userid)
}

// repeated string investor = 3;
int rtn_change_risker_investor::investor_size() const {
  return investor_.size();
}
void rtn_change_risker_investor::clear_investor() {
  investor_.Clear();
}
const ::std::string& rtn_change_risker_investor::investor(int index) const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_risker_investor.investor)
  return investor_.Get(index);
}
::std::string* rtn_change_risker_investor::mutable_investor(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rtn_change_risker_investor.investor)
  return investor_.Mutable(index);
}
void rtn_change_risker_investor::set_investor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:manager.rtn_change_risker_investor.investor)
  investor_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void rtn_change_risker_investor::set_investor(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:manager.rtn_change_risker_investor.investor)
  investor_.Mutable(index)->assign(std::move(value));
}
#endif
void rtn_change_risker_investor::set_investor(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:manager.rtn_change_risker_investor.investor)
}
void rtn_change_risker_investor::set_investor(int index, const char* value, size_t size) {
  investor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manager.rtn_change_risker_investor.investor)
}
::std::string* rtn_change_risker_investor::add_investor() {
  // @@protoc_insertion_point(field_add_mutable:manager.rtn_change_risker_investor.investor)
  return investor_.Add();
}
void rtn_change_risker_investor::add_investor(const ::std::string& value) {
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:manager.rtn_change_risker_investor.investor)
}
#if LANG_CXX11
void rtn_change_risker_investor::add_investor(::std::string&& value) {
  investor_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:manager.rtn_change_risker_investor.investor)
}
#endif
void rtn_change_risker_investor::add_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:manager.rtn_change_risker_investor.investor)
}
void rtn_change_risker_investor::add_investor(const char* value, size_t size) {
  investor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:manager.rtn_change_risker_investor.investor)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
rtn_change_risker_investor::investor() const {
  // @@protoc_insertion_point(field_list:manager.rtn_change_risker_investor.investor)
  return investor_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
rtn_change_risker_investor::mutable_investor() {
  // @@protoc_insertion_point(field_mutable_list:manager.rtn_change_risker_investor.investor)
  return &investor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_change_investor::kOperatoridFieldNumber;
const int rtn_change_investor::kInvestorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_change_investor::rtn_change_investor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rtn_change_investor)
}
rtn_change_investor::rtn_change_investor(const rtn_change_investor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investor_(from.investor_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operatorid_ = from.operatorid_;
  // @@protoc_insertion_point(copy_constructor:manager.rtn_change_investor)
}

void rtn_change_investor::SharedCtor() {
  operatorid_ = 0;
  _cached_size_ = 0;
}

rtn_change_investor::~rtn_change_investor() {
  // @@protoc_insertion_point(destructor:manager.rtn_change_investor)
  SharedDtor();
}

void rtn_change_investor::SharedDtor() {
}

void rtn_change_investor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_change_investor::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_change_investor& rtn_change_investor::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_change_investor* rtn_change_investor::New(::google::protobuf::Arena* arena) const {
  rtn_change_investor* n = new rtn_change_investor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_change_investor::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rtn_change_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.Clear();
  operatorid_ = 0;
  _internal_metadata_.Clear();
}

bool rtn_change_investor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rtn_change_investor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 operatorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operatorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string investor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor(this->investor_size() - 1).data(),
            static_cast<int>(this->investor(this->investor_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.rtn_change_investor.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rtn_change_investor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rtn_change_investor)
  return false;
#undef DO_
}

void rtn_change_investor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rtn_change_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operatorid(), output);
  }

  // repeated string investor = 2;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_investor.investor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->investor(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rtn_change_investor)
}

::google::protobuf::uint8* rtn_change_investor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rtn_change_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operatorid(), target);
  }

  // repeated string investor = 2;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_investor.investor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->investor(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rtn_change_investor)
  return target;
}

size_t rtn_change_investor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rtn_change_investor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string investor = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->investor_size());
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->investor(i));
  }

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->operatorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_change_investor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rtn_change_investor)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_change_investor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_change_investor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rtn_change_investor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rtn_change_investor)
    MergeFrom(*source);
  }
}

void rtn_change_investor::MergeFrom(const rtn_change_investor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rtn_change_investor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investor_.MergeFrom(from.investor_);
  if (from.operatorid() != 0) {
    set_operatorid(from.operatorid());
  }
}

void rtn_change_investor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rtn_change_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_change_investor::CopyFrom(const rtn_change_investor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rtn_change_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_change_investor::IsInitialized() const {
  return true;
}

void rtn_change_investor::Swap(rtn_change_investor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_change_investor::InternalSwap(rtn_change_investor* other) {
  using std::swap;
  investor_.InternalSwap(&other->investor_);
  swap(operatorid_, other->operatorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_change_investor::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_change_investor

// int32 operatorid = 1;
void rtn_change_investor::clear_operatorid() {
  operatorid_ = 0;
}
::google::protobuf::int32 rtn_change_investor::operatorid() const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_investor.operatorid)
  return operatorid_;
}
void rtn_change_investor::set_operatorid(::google::protobuf::int32 value) {
  
  operatorid_ = value;
  // @@protoc_insertion_point(field_set:manager.rtn_change_investor.operatorid)
}

// repeated string investor = 2;
int rtn_change_investor::investor_size() const {
  return investor_.size();
}
void rtn_change_investor::clear_investor() {
  investor_.Clear();
}
const ::std::string& rtn_change_investor::investor(int index) const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_investor.investor)
  return investor_.Get(index);
}
::std::string* rtn_change_investor::mutable_investor(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rtn_change_investor.investor)
  return investor_.Mutable(index);
}
void rtn_change_investor::set_investor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:manager.rtn_change_investor.investor)
  investor_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void rtn_change_investor::set_investor(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:manager.rtn_change_investor.investor)
  investor_.Mutable(index)->assign(std::move(value));
}
#endif
void rtn_change_investor::set_investor(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:manager.rtn_change_investor.investor)
}
void rtn_change_investor::set_investor(int index, const char* value, size_t size) {
  investor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manager.rtn_change_investor.investor)
}
::std::string* rtn_change_investor::add_investor() {
  // @@protoc_insertion_point(field_add_mutable:manager.rtn_change_investor.investor)
  return investor_.Add();
}
void rtn_change_investor::add_investor(const ::std::string& value) {
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:manager.rtn_change_investor.investor)
}
#if LANG_CXX11
void rtn_change_investor::add_investor(::std::string&& value) {
  investor_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:manager.rtn_change_investor.investor)
}
#endif
void rtn_change_investor::add_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:manager.rtn_change_investor.investor)
}
void rtn_change_investor::add_investor(const char* value, size_t size) {
  investor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:manager.rtn_change_investor.investor)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
rtn_change_investor::investor() const {
  // @@protoc_insertion_point(field_list:manager.rtn_change_investor.investor)
  return investor_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
rtn_change_investor::mutable_investor() {
  // @@protoc_insertion_point(field_mutable_list:manager.rtn_change_investor.investor)
  return &investor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int insmrgnrate_info::kTradingdayFieldNumber;
const int insmrgnrate_info::kContractcodeFieldNumber;
const int insmrgnrate_info::kExchangecodeFieldNumber;
const int insmrgnrate_info::kDirectionFieldNumber;
const int insmrgnrate_info::kHedgeflagFieldNumber;
const int insmrgnrate_info::kMarginrateFieldNumber;
const int insmrgnrate_info::kSegmrgnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

insmrgnrate_info::insmrgnrate_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.insmrgnrate_info)
}
insmrgnrate_info::insmrgnrate_info(const insmrgnrate_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tradingday().size() > 0) {
    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  contractcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contractcode().size() > 0) {
    contractcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractcode_);
  }
  exchangecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchangecode().size() > 0) {
    exchangecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangecode_);
  }
  direction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.direction().size() > 0) {
    direction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.direction_);
  }
  hedgeflag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hedgeflag().size() > 0) {
    hedgeflag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hedgeflag_);
  }
  ::memcpy(&marginrate_, &from.marginrate_,
    static_cast<size_t>(reinterpret_cast<char*>(&segmrgn_) -
    reinterpret_cast<char*>(&marginrate_)) + sizeof(segmrgn_));
  // @@protoc_insertion_point(copy_constructor:manager.insmrgnrate_info)
}

void insmrgnrate_info::SharedCtor() {
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hedgeflag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&marginrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segmrgn_) -
      reinterpret_cast<char*>(&marginrate_)) + sizeof(segmrgn_));
  _cached_size_ = 0;
}

insmrgnrate_info::~insmrgnrate_info() {
  // @@protoc_insertion_point(destructor:manager.insmrgnrate_info)
  SharedDtor();
}

void insmrgnrate_info::SharedDtor() {
  tradingday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hedgeflag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void insmrgnrate_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* insmrgnrate_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const insmrgnrate_info& insmrgnrate_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

insmrgnrate_info* insmrgnrate_info::New(::google::protobuf::Arena* arena) const {
  insmrgnrate_info* n = new insmrgnrate_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void insmrgnrate_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.insmrgnrate_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hedgeflag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&marginrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segmrgn_) -
      reinterpret_cast<char*>(&marginrate_)) + sizeof(segmrgn_));
  _internal_metadata_.Clear();
}

bool insmrgnrate_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.insmrgnrate_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tradingday = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradingday().data(), static_cast<int>(this->tradingday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.insmrgnrate_info.tradingday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contractcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contractcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contractcode().data(), static_cast<int>(this->contractcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.insmrgnrate_info.contractcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchangecode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchangecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchangecode().data(), static_cast<int>(this->exchangecode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.insmrgnrate_info.exchangecode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string direction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_direction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->direction().data(), static_cast<int>(this->direction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.insmrgnrate_info.direction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hedgeflag = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hedgeflag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hedgeflag().data(), static_cast<int>(this->hedgeflag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.insmrgnrate_info.hedgeflag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double marginrate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &marginrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double segmrgn = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &segmrgn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.insmrgnrate_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.insmrgnrate_info)
  return false;
#undef DO_
}

void insmrgnrate_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.insmrgnrate_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), static_cast<int>(this->tradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.tradingday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tradingday(), output);
  }

  // string contractcode = 2;
  if (this->contractcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractcode().data(), static_cast<int>(this->contractcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.contractcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contractcode(), output);
  }

  // string exchangecode = 3;
  if (this->exchangecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangecode().data(), static_cast<int>(this->exchangecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.exchangecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->exchangecode(), output);
  }

  // string direction = 4;
  if (this->direction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->direction().data(), static_cast<int>(this->direction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.direction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->direction(), output);
  }

  // string hedgeflag = 5;
  if (this->hedgeflag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hedgeflag().data(), static_cast<int>(this->hedgeflag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.hedgeflag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->hedgeflag(), output);
  }

  // double marginrate = 6;
  if (this->marginrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->marginrate(), output);
  }

  // double segmrgn = 7;
  if (this->segmrgn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->segmrgn(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.insmrgnrate_info)
}

::google::protobuf::uint8* insmrgnrate_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.insmrgnrate_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), static_cast<int>(this->tradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.tradingday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tradingday(), target);
  }

  // string contractcode = 2;
  if (this->contractcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractcode().data(), static_cast<int>(this->contractcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.contractcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contractcode(), target);
  }

  // string exchangecode = 3;
  if (this->exchangecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangecode().data(), static_cast<int>(this->exchangecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.exchangecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->exchangecode(), target);
  }

  // string direction = 4;
  if (this->direction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->direction().data(), static_cast<int>(this->direction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.direction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->direction(), target);
  }

  // string hedgeflag = 5;
  if (this->hedgeflag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hedgeflag().data(), static_cast<int>(this->hedgeflag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.hedgeflag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->hedgeflag(), target);
  }

  // double marginrate = 6;
  if (this->marginrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->marginrate(), target);
  }

  // double segmrgn = 7;
  if (this->segmrgn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->segmrgn(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.insmrgnrate_info)
  return target;
}

size_t insmrgnrate_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.insmrgnrate_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradingday());
  }

  // string contractcode = 2;
  if (this->contractcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contractcode());
  }

  // string exchangecode = 3;
  if (this->exchangecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchangecode());
  }

  // string direction = 4;
  if (this->direction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->direction());
  }

  // string hedgeflag = 5;
  if (this->hedgeflag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hedgeflag());
  }

  // double marginrate = 6;
  if (this->marginrate() != 0) {
    total_size += 1 + 8;
  }

  // double segmrgn = 7;
  if (this->segmrgn() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void insmrgnrate_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.insmrgnrate_info)
  GOOGLE_DCHECK_NE(&from, this);
  const insmrgnrate_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const insmrgnrate_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.insmrgnrate_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.insmrgnrate_info)
    MergeFrom(*source);
  }
}

void insmrgnrate_info::MergeFrom(const insmrgnrate_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.insmrgnrate_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tradingday().size() > 0) {

    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  if (from.contractcode().size() > 0) {

    contractcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractcode_);
  }
  if (from.exchangecode().size() > 0) {

    exchangecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangecode_);
  }
  if (from.direction().size() > 0) {

    direction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.direction_);
  }
  if (from.hedgeflag().size() > 0) {

    hedgeflag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hedgeflag_);
  }
  if (from.marginrate() != 0) {
    set_marginrate(from.marginrate());
  }
  if (from.segmrgn() != 0) {
    set_segmrgn(from.segmrgn());
  }
}

void insmrgnrate_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.insmrgnrate_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void insmrgnrate_info::CopyFrom(const insmrgnrate_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.insmrgnrate_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool insmrgnrate_info::IsInitialized() const {
  return true;
}

void insmrgnrate_info::Swap(insmrgnrate_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void insmrgnrate_info::InternalSwap(insmrgnrate_info* other) {
  using std::swap;
  tradingday_.Swap(&other->tradingday_);
  contractcode_.Swap(&other->contractcode_);
  exchangecode_.Swap(&other->exchangecode_);
  direction_.Swap(&other->direction_);
  hedgeflag_.Swap(&other->hedgeflag_);
  swap(marginrate_, other->marginrate_);
  swap(segmrgn_, other->segmrgn_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata insmrgnrate_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// insmrgnrate_info

// string tradingday = 1;
void insmrgnrate_info::clear_tradingday() {
  tradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& insmrgnrate_info::tradingday() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.tradingday)
  return tradingday_.GetNoArena();
}
void insmrgnrate_info::set_tradingday(const ::std::string& value) {
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.tradingday)
}
#if LANG_CXX11
void insmrgnrate_info::set_tradingday(::std::string&& value) {
  
  tradingday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.insmrgnrate_info.tradingday)
}
#endif
void insmrgnrate_info::set_tradingday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.insmrgnrate_info.tradingday)
}
void insmrgnrate_info::set_tradingday(const char* value, size_t size) {
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.insmrgnrate_info.tradingday)
}
::std::string* insmrgnrate_info::mutable_tradingday() {
  
  // @@protoc_insertion_point(field_mutable:manager.insmrgnrate_info.tradingday)
  return tradingday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* insmrgnrate_info::release_tradingday() {
  // @@protoc_insertion_point(field_release:manager.insmrgnrate_info.tradingday)
  
  return tradingday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void insmrgnrate_info::set_allocated_tradingday(::std::string* tradingday) {
  if (tradingday != NULL) {
    
  } else {
    
  }
  tradingday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradingday);
  // @@protoc_insertion_point(field_set_allocated:manager.insmrgnrate_info.tradingday)
}

// string contractcode = 2;
void insmrgnrate_info::clear_contractcode() {
  contractcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& insmrgnrate_info::contractcode() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.contractcode)
  return contractcode_.GetNoArena();
}
void insmrgnrate_info::set_contractcode(const ::std::string& value) {
  
  contractcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.contractcode)
}
#if LANG_CXX11
void insmrgnrate_info::set_contractcode(::std::string&& value) {
  
  contractcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.insmrgnrate_info.contractcode)
}
#endif
void insmrgnrate_info::set_contractcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contractcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.insmrgnrate_info.contractcode)
}
void insmrgnrate_info::set_contractcode(const char* value, size_t size) {
  
  contractcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.insmrgnrate_info.contractcode)
}
::std::string* insmrgnrate_info::mutable_contractcode() {
  
  // @@protoc_insertion_point(field_mutable:manager.insmrgnrate_info.contractcode)
  return contractcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* insmrgnrate_info::release_contractcode() {
  // @@protoc_insertion_point(field_release:manager.insmrgnrate_info.contractcode)
  
  return contractcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void insmrgnrate_info::set_allocated_contractcode(::std::string* contractcode) {
  if (contractcode != NULL) {
    
  } else {
    
  }
  contractcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contractcode);
  // @@protoc_insertion_point(field_set_allocated:manager.insmrgnrate_info.contractcode)
}

// string exchangecode = 3;
void insmrgnrate_info::clear_exchangecode() {
  exchangecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& insmrgnrate_info::exchangecode() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.exchangecode)
  return exchangecode_.GetNoArena();
}
void insmrgnrate_info::set_exchangecode(const ::std::string& value) {
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.exchangecode)
}
#if LANG_CXX11
void insmrgnrate_info::set_exchangecode(::std::string&& value) {
  
  exchangecode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.insmrgnrate_info.exchangecode)
}
#endif
void insmrgnrate_info::set_exchangecode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.insmrgnrate_info.exchangecode)
}
void insmrgnrate_info::set_exchangecode(const char* value, size_t size) {
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.insmrgnrate_info.exchangecode)
}
::std::string* insmrgnrate_info::mutable_exchangecode() {
  
  // @@protoc_insertion_point(field_mutable:manager.insmrgnrate_info.exchangecode)
  return exchangecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* insmrgnrate_info::release_exchangecode() {
  // @@protoc_insertion_point(field_release:manager.insmrgnrate_info.exchangecode)
  
  return exchangecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void insmrgnrate_info::set_allocated_exchangecode(::std::string* exchangecode) {
  if (exchangecode != NULL) {
    
  } else {
    
  }
  exchangecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangecode);
  // @@protoc_insertion_point(field_set_allocated:manager.insmrgnrate_info.exchangecode)
}

// string direction = 4;
void insmrgnrate_info::clear_direction() {
  direction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& insmrgnrate_info::direction() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.direction)
  return direction_.GetNoArena();
}
void insmrgnrate_info::set_direction(const ::std::string& value) {
  
  direction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.direction)
}
#if LANG_CXX11
void insmrgnrate_info::set_direction(::std::string&& value) {
  
  direction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.insmrgnrate_info.direction)
}
#endif
void insmrgnrate_info::set_direction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  direction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.insmrgnrate_info.direction)
}
void insmrgnrate_info::set_direction(const char* value, size_t size) {
  
  direction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.insmrgnrate_info.direction)
}
::std::string* insmrgnrate_info::mutable_direction() {
  
  // @@protoc_insertion_point(field_mutable:manager.insmrgnrate_info.direction)
  return direction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* insmrgnrate_info::release_direction() {
  // @@protoc_insertion_point(field_release:manager.insmrgnrate_info.direction)
  
  return direction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void insmrgnrate_info::set_allocated_direction(::std::string* direction) {
  if (direction != NULL) {
    
  } else {
    
  }
  direction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), direction);
  // @@protoc_insertion_point(field_set_allocated:manager.insmrgnrate_info.direction)
}

// string hedgeflag = 5;
void insmrgnrate_info::clear_hedgeflag() {
  hedgeflag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& insmrgnrate_info::hedgeflag() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.hedgeflag)
  return hedgeflag_.GetNoArena();
}
void insmrgnrate_info::set_hedgeflag(const ::std::string& value) {
  
  hedgeflag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.hedgeflag)
}
#if LANG_CXX11
void insmrgnrate_info::set_hedgeflag(::std::string&& value) {
  
  hedgeflag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.insmrgnrate_info.hedgeflag)
}
#endif
void insmrgnrate_info::set_hedgeflag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hedgeflag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.insmrgnrate_info.hedgeflag)
}
void insmrgnrate_info::set_hedgeflag(const char* value, size_t size) {
  
  hedgeflag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.insmrgnrate_info.hedgeflag)
}
::std::string* insmrgnrate_info::mutable_hedgeflag() {
  
  // @@protoc_insertion_point(field_mutable:manager.insmrgnrate_info.hedgeflag)
  return hedgeflag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* insmrgnrate_info::release_hedgeflag() {
  // @@protoc_insertion_point(field_release:manager.insmrgnrate_info.hedgeflag)
  
  return hedgeflag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void insmrgnrate_info::set_allocated_hedgeflag(::std::string* hedgeflag) {
  if (hedgeflag != NULL) {
    
  } else {
    
  }
  hedgeflag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hedgeflag);
  // @@protoc_insertion_point(field_set_allocated:manager.insmrgnrate_info.hedgeflag)
}

// double marginrate = 6;
void insmrgnrate_info::clear_marginrate() {
  marginrate_ = 0;
}
double insmrgnrate_info::marginrate() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.marginrate)
  return marginrate_;
}
void insmrgnrate_info::set_marginrate(double value) {
  
  marginrate_ = value;
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.marginrate)
}

// double segmrgn = 7;
void insmrgnrate_info::clear_segmrgn() {
  segmrgn_ = 0;
}
double insmrgnrate_info::segmrgn() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.segmrgn)
  return segmrgn_;
}
void insmrgnrate_info::set_segmrgn(double value) {
  
  segmrgn_ = value;
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.segmrgn)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_insmrgnrate::kRequestidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_insmrgnrate::req_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_insmrgnrate)
}
req_insmrgnrate::req_insmrgnrate(const req_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_insmrgnrate)
}

void req_insmrgnrate::SharedCtor() {
  requestid_ = 0;
  _cached_size_ = 0;
}

req_insmrgnrate::~req_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.req_insmrgnrate)
  SharedDtor();
}

void req_insmrgnrate::SharedDtor() {
}

void req_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_insmrgnrate& req_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_insmrgnrate* req_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  req_insmrgnrate* n = new req_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_insmrgnrate)
  return false;
#undef DO_
}

void req_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_insmrgnrate)
}

::google::protobuf::uint8* req_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_insmrgnrate)
  return target;
}

size_t req_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const req_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_insmrgnrate)
    MergeFrom(*source);
  }
}

void req_insmrgnrate::MergeFrom(const req_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_insmrgnrate::CopyFrom(const req_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_insmrgnrate::IsInitialized() const {
  return true;
}

void req_insmrgnrate::Swap(req_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_insmrgnrate::InternalSwap(req_insmrgnrate* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_insmrgnrate

// int32 requestid = 1;
void req_insmrgnrate::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_insmrgnrate::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_insmrgnrate.requestid)
  return requestid_;
}
void req_insmrgnrate::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_insmrgnrate.requestid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_insmrgnrate::kHeaderFieldNumber;
const int rsp_insmrgnrate::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_insmrgnrate::rsp_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_insmrgnrate)
}
rsp_insmrgnrate::rsp_insmrgnrate(const rsp_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_insmrgnrate)
}

void rsp_insmrgnrate::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_insmrgnrate::~rsp_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.rsp_insmrgnrate)
  SharedDtor();
}

void rsp_insmrgnrate::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void rsp_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_insmrgnrate& rsp_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_insmrgnrate* rsp_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  rsp_insmrgnrate* n = new rsp_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.insmrgnrate_info infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_insmrgnrate)
  return false;
#undef DO_
}

void rsp_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .manager.insmrgnrate_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->infos(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_insmrgnrate)
}

::google::protobuf::uint8* rsp_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .manager.insmrgnrate_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_insmrgnrate)
  return target;
}

size_t rsp_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.insmrgnrate_info infos = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infos(static_cast<int>(i)));
    }
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_insmrgnrate)
    MergeFrom(*source);
  }
}

void rsp_insmrgnrate::MergeFrom(const rsp_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_insmrgnrate::CopyFrom(const rsp_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_insmrgnrate::IsInitialized() const {
  return true;
}

void rsp_insmrgnrate::Swap(rsp_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_insmrgnrate::InternalSwap(rsp_insmrgnrate* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_insmrgnrate

// .manager.rsp_head_info header = 1;
bool rsp_insmrgnrate::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_insmrgnrate::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_insmrgnrate::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_insmrgnrate.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_insmrgnrate::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_insmrgnrate.header)
  return header_;
}
::manager::rsp_head_info* rsp_insmrgnrate::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_insmrgnrate.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_insmrgnrate::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_insmrgnrate.header)
}

// repeated .manager.insmrgnrate_info infos = 2;
int rsp_insmrgnrate::infos_size() const {
  return infos_.size();
}
void rsp_insmrgnrate::clear_infos() {
  infos_.Clear();
}
const ::manager::insmrgnrate_info& rsp_insmrgnrate::infos(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_insmrgnrate.infos)
  return infos_.Get(index);
}
::manager::insmrgnrate_info* rsp_insmrgnrate::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_insmrgnrate.infos)
  return infos_.Mutable(index);
}
::manager::insmrgnrate_info* rsp_insmrgnrate::add_infos() {
  // @@protoc_insertion_point(field_add:manager.rsp_insmrgnrate.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >*
rsp_insmrgnrate::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_insmrgnrate.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >&
rsp_insmrgnrate::infos() const {
  // @@protoc_insertion_point(field_list:manager.rsp_insmrgnrate.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_edit_insmrgnrate::kRequestidFieldNumber;
const int req_edit_insmrgnrate::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_edit_insmrgnrate::req_edit_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_edit_insmrgnrate)
}
req_edit_insmrgnrate::req_edit_insmrgnrate(const req_edit_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_edit_insmrgnrate)
}

void req_edit_insmrgnrate::SharedCtor() {
  requestid_ = 0;
  _cached_size_ = 0;
}

req_edit_insmrgnrate::~req_edit_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.req_edit_insmrgnrate)
  SharedDtor();
}

void req_edit_insmrgnrate::SharedDtor() {
}

void req_edit_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_edit_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_edit_insmrgnrate& req_edit_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_edit_insmrgnrate* req_edit_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  req_edit_insmrgnrate* n = new req_edit_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_edit_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_edit_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_edit_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_edit_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.insmrgnrate_info infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_edit_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_edit_insmrgnrate)
  return false;
#undef DO_
}

void req_edit_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_edit_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // repeated .manager.insmrgnrate_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->infos(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_edit_insmrgnrate)
}

::google::protobuf::uint8* req_edit_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_edit_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // repeated .manager.insmrgnrate_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_edit_insmrgnrate)
  return target;
}

size_t req_edit_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_edit_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.insmrgnrate_info infos = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infos(static_cast<int>(i)));
    }
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_edit_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_edit_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const req_edit_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_edit_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_edit_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_edit_insmrgnrate)
    MergeFrom(*source);
  }
}

void req_edit_insmrgnrate::MergeFrom(const req_edit_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_edit_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_edit_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_edit_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_edit_insmrgnrate::CopyFrom(const req_edit_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_edit_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_edit_insmrgnrate::IsInitialized() const {
  return true;
}

void req_edit_insmrgnrate::Swap(req_edit_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_edit_insmrgnrate::InternalSwap(req_edit_insmrgnrate* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_edit_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_edit_insmrgnrate

// int32 requestid = 1;
void req_edit_insmrgnrate::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_edit_insmrgnrate::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_edit_insmrgnrate.requestid)
  return requestid_;
}
void req_edit_insmrgnrate::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_edit_insmrgnrate.requestid)
}

// repeated .manager.insmrgnrate_info infos = 2;
int req_edit_insmrgnrate::infos_size() const {
  return infos_.size();
}
void req_edit_insmrgnrate::clear_infos() {
  infos_.Clear();
}
const ::manager::insmrgnrate_info& req_edit_insmrgnrate::infos(int index) const {
  // @@protoc_insertion_point(field_get:manager.req_edit_insmrgnrate.infos)
  return infos_.Get(index);
}
::manager::insmrgnrate_info* req_edit_insmrgnrate::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:manager.req_edit_insmrgnrate.infos)
  return infos_.Mutable(index);
}
::manager::insmrgnrate_info* req_edit_insmrgnrate::add_infos() {
  // @@protoc_insertion_point(field_add:manager.req_edit_insmrgnrate.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >*
req_edit_insmrgnrate::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:manager.req_edit_insmrgnrate.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >&
req_edit_insmrgnrate::infos() const {
  // @@protoc_insertion_point(field_list:manager.req_edit_insmrgnrate.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_change_insmrgnrate::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_change_insmrgnrate::rtn_change_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rtn_change_insmrgnrate)
}
rtn_change_insmrgnrate::rtn_change_insmrgnrate(const rtn_change_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:manager.rtn_change_insmrgnrate)
}

void rtn_change_insmrgnrate::SharedCtor() {
  _cached_size_ = 0;
}

rtn_change_insmrgnrate::~rtn_change_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.rtn_change_insmrgnrate)
  SharedDtor();
}

void rtn_change_insmrgnrate::SharedDtor() {
}

void rtn_change_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_change_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_change_insmrgnrate& rtn_change_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_change_insmrgnrate* rtn_change_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  rtn_change_insmrgnrate* n = new rtn_change_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_change_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rtn_change_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  _internal_metadata_.Clear();
}

bool rtn_change_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rtn_change_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .manager.insmrgnrate_info infos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rtn_change_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rtn_change_insmrgnrate)
  return false;
#undef DO_
}

void rtn_change_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rtn_change_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .manager.insmrgnrate_info infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rtn_change_insmrgnrate)
}

::google::protobuf::uint8* rtn_change_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rtn_change_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .manager.insmrgnrate_info infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rtn_change_insmrgnrate)
  return target;
}

size_t rtn_change_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rtn_change_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.insmrgnrate_info infos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_change_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rtn_change_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_change_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_change_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rtn_change_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rtn_change_insmrgnrate)
    MergeFrom(*source);
  }
}

void rtn_change_insmrgnrate::MergeFrom(const rtn_change_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rtn_change_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
}

void rtn_change_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rtn_change_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_change_insmrgnrate::CopyFrom(const rtn_change_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rtn_change_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_change_insmrgnrate::IsInitialized() const {
  return true;
}

void rtn_change_insmrgnrate::Swap(rtn_change_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_change_insmrgnrate::InternalSwap(rtn_change_insmrgnrate* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_change_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_change_insmrgnrate

// repeated .manager.insmrgnrate_info infos = 1;
int rtn_change_insmrgnrate::infos_size() const {
  return infos_.size();
}
void rtn_change_insmrgnrate::clear_infos() {
  infos_.Clear();
}
const ::manager::insmrgnrate_info& rtn_change_insmrgnrate::infos(int index) const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_insmrgnrate.infos)
  return infos_.Get(index);
}
::manager::insmrgnrate_info* rtn_change_insmrgnrate::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rtn_change_insmrgnrate.infos)
  return infos_.Mutable(index);
}
::manager::insmrgnrate_info* rtn_change_insmrgnrate::add_infos() {
  // @@protoc_insertion_point(field_add:manager.rtn_change_insmrgnrate.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >*
rtn_change_insmrgnrate::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:manager.rtn_change_insmrgnrate.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >&
rtn_change_insmrgnrate::infos() const {
  // @@protoc_insertion_point(field_list:manager.rtn_change_insmrgnrate.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_option_argv::kRequestidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_option_argv::req_option_argv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_option_argv)
}
req_option_argv::req_option_argv(const req_option_argv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_option_argv)
}

void req_option_argv::SharedCtor() {
  requestid_ = 0;
  _cached_size_ = 0;
}

req_option_argv::~req_option_argv() {
  // @@protoc_insertion_point(destructor:manager.req_option_argv)
  SharedDtor();
}

void req_option_argv::SharedDtor() {
}

void req_option_argv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_option_argv::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_option_argv& req_option_argv::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_option_argv* req_option_argv::New(::google::protobuf::Arena* arena) const {
  req_option_argv* n = new req_option_argv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_option_argv::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_option_argv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_option_argv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_option_argv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_option_argv)
  return false;
#undef DO_
}

void req_option_argv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_option_argv)
}

::google::protobuf::uint8* req_option_argv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_option_argv)
  return target;
}

size_t req_option_argv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_option_argv)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_option_argv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  const req_option_argv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_option_argv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_option_argv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_option_argv)
    MergeFrom(*source);
  }
}

void req_option_argv::MergeFrom(const req_option_argv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_option_argv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_option_argv::CopyFrom(const req_option_argv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_option_argv::IsInitialized() const {
  return true;
}

void req_option_argv::Swap(req_option_argv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_option_argv::InternalSwap(req_option_argv* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_option_argv::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_option_argv

// int32 requestid = 1;
void req_option_argv::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_option_argv::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_option_argv.requestid)
  return requestid_;
}
void req_option_argv::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_option_argv.requestid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int option_argv::kPriceTypeFieldNumber;
const int option_argv::kVolFieldNumber;
const int option_argv::kRateFieldNumber;
const int option_argv::kStepFieldNumber;
const int option_argv::kIterationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

option_argv::option_argv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.option_argv)
}
option_argv::option_argv(const option_argv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vol_, &from.vol_,
    static_cast<size_t>(reinterpret_cast<char*>(&iterations_) -
    reinterpret_cast<char*>(&vol_)) + sizeof(iterations_));
  // @@protoc_insertion_point(copy_constructor:manager.option_argv)
}

void option_argv::SharedCtor() {
  ::memset(&vol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iterations_) -
      reinterpret_cast<char*>(&vol_)) + sizeof(iterations_));
  _cached_size_ = 0;
}

option_argv::~option_argv() {
  // @@protoc_insertion_point(destructor:manager.option_argv)
  SharedDtor();
}

void option_argv::SharedDtor() {
}

void option_argv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* option_argv::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const option_argv& option_argv::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

option_argv* option_argv::New(::google::protobuf::Arena* arena) const {
  option_argv* n = new option_argv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void option_argv::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iterations_) -
      reinterpret_cast<char*>(&vol_)) + sizeof(iterations_));
  _internal_metadata_.Clear();
}

bool option_argv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.option_argv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 price_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 step = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iterations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iterations_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.option_argv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.option_argv)
  return false;
#undef DO_
}

void option_argv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 price_type = 1;
  if (this->price_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->price_type(), output);
  }

  // double vol = 2;
  if (this->vol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->vol(), output);
  }

  // double rate = 3;
  if (this->rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->rate(), output);
  }

  // int32 step = 4;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->step(), output);
  }

  // int32 iterations = 5;
  if (this->iterations() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->iterations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.option_argv)
}

::google::protobuf::uint8* option_argv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 price_type = 1;
  if (this->price_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->price_type(), target);
  }

  // double vol = 2;
  if (this->vol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->vol(), target);
  }

  // double rate = 3;
  if (this->rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->rate(), target);
  }

  // int32 step = 4;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->step(), target);
  }

  // int32 iterations = 5;
  if (this->iterations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->iterations(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.option_argv)
  return target;
}

size_t option_argv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.option_argv)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double vol = 2;
  if (this->vol() != 0) {
    total_size += 1 + 8;
  }

  // int32 price_type = 1;
  if (this->price_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price_type());
  }

  // int32 step = 4;
  if (this->step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->step());
  }

  // double rate = 3;
  if (this->rate() != 0) {
    total_size += 1 + 8;
  }

  // int32 iterations = 5;
  if (this->iterations() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iterations());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void option_argv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  const option_argv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const option_argv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.option_argv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.option_argv)
    MergeFrom(*source);
  }
}

void option_argv::MergeFrom(const option_argv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vol() != 0) {
    set_vol(from.vol());
  }
  if (from.price_type() != 0) {
    set_price_type(from.price_type());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
  if (from.rate() != 0) {
    set_rate(from.rate());
  }
  if (from.iterations() != 0) {
    set_iterations(from.iterations());
  }
}

void option_argv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void option_argv::CopyFrom(const option_argv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool option_argv::IsInitialized() const {
  return true;
}

void option_argv::Swap(option_argv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void option_argv::InternalSwap(option_argv* other) {
  using std::swap;
  swap(vol_, other->vol_);
  swap(price_type_, other->price_type_);
  swap(step_, other->step_);
  swap(rate_, other->rate_);
  swap(iterations_, other->iterations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata option_argv::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// option_argv

// int32 price_type = 1;
void option_argv::clear_price_type() {
  price_type_ = 0;
}
::google::protobuf::int32 option_argv::price_type() const {
  // @@protoc_insertion_point(field_get:manager.option_argv.price_type)
  return price_type_;
}
void option_argv::set_price_type(::google::protobuf::int32 value) {
  
  price_type_ = value;
  // @@protoc_insertion_point(field_set:manager.option_argv.price_type)
}

// double vol = 2;
void option_argv::clear_vol() {
  vol_ = 0;
}
double option_argv::vol() const {
  // @@protoc_insertion_point(field_get:manager.option_argv.vol)
  return vol_;
}
void option_argv::set_vol(double value) {
  
  vol_ = value;
  // @@protoc_insertion_point(field_set:manager.option_argv.vol)
}

// double rate = 3;
void option_argv::clear_rate() {
  rate_ = 0;
}
double option_argv::rate() const {
  // @@protoc_insertion_point(field_get:manager.option_argv.rate)
  return rate_;
}
void option_argv::set_rate(double value) {
  
  rate_ = value;
  // @@protoc_insertion_point(field_set:manager.option_argv.rate)
}

// int32 step = 4;
void option_argv::clear_step() {
  step_ = 0;
}
::google::protobuf::int32 option_argv::step() const {
  // @@protoc_insertion_point(field_get:manager.option_argv.step)
  return step_;
}
void option_argv::set_step(::google::protobuf::int32 value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:manager.option_argv.step)
}

// int32 iterations = 5;
void option_argv::clear_iterations() {
  iterations_ = 0;
}
::google::protobuf::int32 option_argv::iterations() const {
  // @@protoc_insertion_point(field_get:manager.option_argv.iterations)
  return iterations_;
}
void option_argv::set_iterations(::google::protobuf::int32 value) {
  
  iterations_ = value;
  // @@protoc_insertion_point(field_set:manager.option_argv.iterations)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_option_argv::kHeaderFieldNumber;
const int rsp_option_argv::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_option_argv::rsp_option_argv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_option_argv)
}
rsp_option_argv::rsp_option_argv(const rsp_option_argv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::manager::option_argv(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_option_argv)
}

void rsp_option_argv::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&info_) -
      reinterpret_cast<char*>(&header_)) + sizeof(info_));
  _cached_size_ = 0;
}

rsp_option_argv::~rsp_option_argv() {
  // @@protoc_insertion_point(destructor:manager.rsp_option_argv)
  SharedDtor();
}

void rsp_option_argv::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete info_;
}

void rsp_option_argv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_option_argv::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_option_argv& rsp_option_argv::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_option_argv* rsp_option_argv::New(::google::protobuf::Arena* arena) const {
  rsp_option_argv* n = new rsp_option_argv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_option_argv::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_option_argv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_option_argv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.option_argv info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_option_argv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_option_argv)
  return false;
#undef DO_
}

void rsp_option_argv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .manager.option_argv info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_option_argv)
}

::google::protobuf::uint8* rsp_option_argv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // .manager.option_argv info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_option_argv)
  return target;
}

size_t rsp_option_argv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_option_argv)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // .manager.option_argv info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_option_argv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_option_argv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_option_argv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_option_argv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_option_argv)
    MergeFrom(*source);
  }
}

void rsp_option_argv::MergeFrom(const rsp_option_argv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
  if (from.has_info()) {
    mutable_info()->::manager::option_argv::MergeFrom(from.info());
  }
}

void rsp_option_argv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_option_argv::CopyFrom(const rsp_option_argv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_option_argv::IsInitialized() const {
  return true;
}

void rsp_option_argv::Swap(rsp_option_argv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_option_argv::InternalSwap(rsp_option_argv* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_option_argv::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_option_argv

// .manager.rsp_head_info header = 1;
bool rsp_option_argv::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_option_argv::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_option_argv::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_option_argv.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_option_argv::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_option_argv.header)
  return header_;
}
::manager::rsp_head_info* rsp_option_argv::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_option_argv.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_option_argv::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_option_argv.header)
}

// .manager.option_argv info = 2;
bool rsp_option_argv::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void rsp_option_argv::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::option_argv& rsp_option_argv::info() const {
  const ::manager::option_argv* p = info_;
  // @@protoc_insertion_point(field_get:manager.rsp_option_argv.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::option_argv*>(
      &::manager::_option_argv_default_instance_);
}
::manager::option_argv* rsp_option_argv::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::option_argv;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_option_argv.info)
  return info_;
}
::manager::option_argv* rsp_option_argv::release_info() {
  // @@protoc_insertion_point(field_release:manager.rsp_option_argv.info)
  
  ::manager::option_argv* temp = info_;
  info_ = NULL;
  return temp;
}
void rsp_option_argv::set_allocated_info(::manager::option_argv* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_option_argv.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_option_argv_adj::kRequestidFieldNumber;
const int req_option_argv_adj::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_option_argv_adj::req_option_argv_adj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_option_argv_adj)
}
req_option_argv_adj::req_option_argv_adj(const req_option_argv_adj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::option_argv(*from.info_);
  } else {
    info_ = NULL;
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_option_argv_adj)
}

void req_option_argv_adj::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&info_)) + sizeof(requestid_));
  _cached_size_ = 0;
}

req_option_argv_adj::~req_option_argv_adj() {
  // @@protoc_insertion_point(destructor:manager.req_option_argv_adj)
  SharedDtor();
}

void req_option_argv_adj::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void req_option_argv_adj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_option_argv_adj::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_option_argv_adj& req_option_argv_adj::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_option_argv_adj* req_option_argv_adj::New(::google::protobuf::Arena* arena) const {
  req_option_argv_adj* n = new req_option_argv_adj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_option_argv_adj::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_option_argv_adj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_option_argv_adj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_option_argv_adj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.option_argv info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_option_argv_adj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_option_argv_adj)
  return false;
#undef DO_
}

void req_option_argv_adj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_option_argv_adj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.option_argv info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_option_argv_adj)
}

::google::protobuf::uint8* req_option_argv_adj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_option_argv_adj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.option_argv info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_option_argv_adj)
  return target;
}

size_t req_option_argv_adj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_option_argv_adj)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.option_argv info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_option_argv_adj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_option_argv_adj)
  GOOGLE_DCHECK_NE(&from, this);
  const req_option_argv_adj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_option_argv_adj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_option_argv_adj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_option_argv_adj)
    MergeFrom(*source);
  }
}

void req_option_argv_adj::MergeFrom(const req_option_argv_adj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_option_argv_adj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::option_argv::MergeFrom(from.info());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_option_argv_adj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_option_argv_adj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_option_argv_adj::CopyFrom(const req_option_argv_adj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_option_argv_adj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_option_argv_adj::IsInitialized() const {
  return true;
}

void req_option_argv_adj::Swap(req_option_argv_adj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_option_argv_adj::InternalSwap(req_option_argv_adj* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_option_argv_adj::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_option_argv_adj

// int32 requestid = 1;
void req_option_argv_adj::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_option_argv_adj::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_option_argv_adj.requestid)
  return requestid_;
}
void req_option_argv_adj::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_option_argv_adj.requestid)
}

// .manager.option_argv info = 2;
bool req_option_argv_adj::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void req_option_argv_adj::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::option_argv& req_option_argv_adj::info() const {
  const ::manager::option_argv* p = info_;
  // @@protoc_insertion_point(field_get:manager.req_option_argv_adj.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::option_argv*>(
      &::manager::_option_argv_default_instance_);
}
::manager::option_argv* req_option_argv_adj::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::option_argv;
  }
  // @@protoc_insertion_point(field_mutable:manager.req_option_argv_adj.info)
  return info_;
}
::manager::option_argv* req_option_argv_adj::release_info() {
  // @@protoc_insertion_point(field_release:manager.req_option_argv_adj.info)
  
  ::manager::option_argv* temp = info_;
  info_ = NULL;
  return temp;
}
void req_option_argv_adj::set_allocated_info(::manager::option_argv* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.req_option_argv_adj.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace manager

// @@protoc_insertion_point(global_scope)
