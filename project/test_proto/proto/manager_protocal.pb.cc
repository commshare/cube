// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manager_protocal.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "manager_protocal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace manager {
class error_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<error_info>
     _instance;
} _error_info_default_instance_;
class rsp_action_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_action_info>
     _instance;
} _rsp_action_info_default_instance_;
class rsp_head_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_head_info>
     _instance;
} _rsp_head_info_default_instance_;
class sys_authDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<sys_auth>
     _instance;
} _sys_auth_default_instance_;
class role_authDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<role_auth>
     _instance;
} _role_auth_default_instance_;
class req_loginDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_login>
     _instance;
} _req_login_default_instance_;
class rsp_loginDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_login>
     _instance;
} _rsp_login_default_instance_;
class req_sys_subsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_sys_subs>
     _instance;
} _req_sys_subs_default_instance_;
class sys_userDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<sys_user>
     _instance;
} _sys_user_default_instance_;
class rsp_sys_subsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_sys_subs>
     _instance;
} _rsp_sys_subs_default_instance_;
class req_add_sys_userDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_add_sys_user>
     _instance;
} _req_add_sys_user_default_instance_;
class req_del_sys_userDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_del_sys_user>
     _instance;
} _req_del_sys_user_default_instance_;
class req_edit_sys_userDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_edit_sys_user>
     _instance;
} _req_edit_sys_user_default_instance_;
class sys_investorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<sys_investor>
     _instance;
} _sys_investor_default_instance_;
class req_risk_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_risk_investors>
     _instance;
} _req_risk_investors_default_instance_;
class rsp_risk_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_risk_investors>
     _instance;
} _rsp_risk_investors_default_instance_;
class req_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_investors>
     _instance;
} _req_investors_default_instance_;
class rsp_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_investors>
     _instance;
} _rsp_investors_default_instance_;
class req_add_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_add_investors>
     _instance;
} _req_add_investors_default_instance_;
class req_del_investorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_del_investors>
     _instance;
} _req_del_investors_default_instance_;
class rtn_change_treeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_change_tree>
     _instance;
} _rtn_change_tree_default_instance_;
class rtn_change_risker_investorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_change_risker_investor>
     _instance;
} _rtn_change_risker_investor_default_instance_;
class rtn_change_investorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_change_investor>
     _instance;
} _rtn_change_investor_default_instance_;
class insmrgnrate_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<insmrgnrate_info>
     _instance;
} _insmrgnrate_info_default_instance_;
class req_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_insmrgnrate>
     _instance;
} _req_insmrgnrate_default_instance_;
class rsp_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_insmrgnrate>
     _instance;
} _rsp_insmrgnrate_default_instance_;
class req_edit_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_edit_insmrgnrate>
     _instance;
} _req_edit_insmrgnrate_default_instance_;
class rtn_change_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_change_insmrgnrate>
     _instance;
} _rtn_change_insmrgnrate_default_instance_;
class req_add_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_add_insmrgnrate>
     _instance;
} _req_add_insmrgnrate_default_instance_;
class rtn_add_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_add_insmrgnrate>
     _instance;
} _rtn_add_insmrgnrate_default_instance_;
class req_del_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_del_insmrgnrate>
     _instance;
} _req_del_insmrgnrate_default_instance_;
class rtn_del_insmrgnrateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rtn_del_insmrgnrate>
     _instance;
} _rtn_del_insmrgnrate_default_instance_;
class req_option_argvDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_option_argv>
     _instance;
} _req_option_argv_default_instance_;
class option_argvDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<option_argv>
     _instance;
} _option_argv_default_instance_;
class rsp_option_argvDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_option_argv>
     _instance;
} _rsp_option_argv_default_instance_;
class req_option_argv_adjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_option_argv_adj>
     _instance;
} _req_option_argv_adj_default_instance_;
class req_contractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_contract>
     _instance;
} _req_contract_default_instance_;
class contract_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<contract_info>
     _instance;
} _contract_info_default_instance_;
class rsp_contractDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_contract>
     _instance;
} _rsp_contract_default_instance_;
class req_investor_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<req_investor_info>
     _instance;
} _req_investor_info_default_instance_;
class investor_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<investor_info>
     _instance;
} _investor_info_default_instance_;
class rsp_investor_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<rsp_investor_info>
     _instance;
} _rsp_investor_info_default_instance_;

namespace protobuf_manager_5fprotocal_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[42];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(error_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(error_info, errorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(error_info, errormsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_action_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_action_info, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_action_info, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_head_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_head_info, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_head_info, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_head_info, islast_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_auth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_auth, authid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_auth, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_auth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_auth, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_auth, auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_login, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_login, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_login, pwd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_login, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_login, auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_sys_subs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_sys_subs, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_sys_subs, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, father_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_user, auths_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_sys_subs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_sys_subs, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_sys_subs, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_sys_user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_sys_user, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_sys_user, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_sys_user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_sys_user, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_sys_user, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_sys_user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_sys_user, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_sys_user, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_investor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_investor, investor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_investor, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sys_investor, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_risk_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_risk_investors, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_risk_investors, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_risk_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_risk_investors, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_risk_investors, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_risk_investors, investors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_investors, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_investors, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_investors, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_investors, investors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_investors, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_investors, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_investors, investor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_investors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_investors, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_investors, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_investors, investor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_tree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_tree, operatorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_tree, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_risker_investor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_risker_investor, operatorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_risker_investor, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_risker_investor, investor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_investor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_investor, operatorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_investor, investor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, tradingday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, contractcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, exchangecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, hedgeflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, marginrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(insmrgnrate_info, segmrgn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_insmrgnrate, requestid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_insmrgnrate, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_insmrgnrate, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_insmrgnrate, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_edit_insmrgnrate, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_change_insmrgnrate, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_insmrgnrate, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_add_insmrgnrate, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_add_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_add_insmrgnrate, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_insmrgnrate, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_del_insmrgnrate, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_del_insmrgnrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rtn_del_insmrgnrate, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_option_argv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_option_argv, requestid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, price_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, vol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(option_argv, iterations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_option_argv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_option_argv, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_option_argv, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_option_argv_adj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_option_argv_adj, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_option_argv_adj, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_contract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_contract, requestid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, contractcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, productcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, productkind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, exchangecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, marketcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, createdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, opendate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, expiredate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, multiplier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, pricetick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, contractname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, delivbegindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, delivenddate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, excontractname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, exproductname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, ismrgndisc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, productclass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, baseprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, optionstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, strikeprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, underlyinginstrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, strikemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(contract_info, underlyingmultiple_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_contract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_contract, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_contract, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_investor_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_investor_info, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_investor_info, investor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, investorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, brokerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, investortype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, investorname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, identifiedcardtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, identifiedcardno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, profession_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, national_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, capital_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, capitalcurrency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, telephone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, zipcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, memo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, openinvestorname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, orderinvestorname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, fundinvestorname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, settleinvestorname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, isactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, departmentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, investorfullname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, isemail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, issms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, isusingotp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(investor_info, clientregion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_investor_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_investor_info, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rsp_investor_info, infos_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(error_info)},
  { 7, -1, sizeof(rsp_action_info)},
  { 14, -1, sizeof(rsp_head_info)},
  { 22, -1, sizeof(sys_auth)},
  { 29, -1, sizeof(role_auth)},
  { 36, -1, sizeof(req_login)},
  { 44, -1, sizeof(rsp_login)},
  { 51, -1, sizeof(req_sys_subs)},
  { 58, -1, sizeof(sys_user)},
  { 71, -1, sizeof(rsp_sys_subs)},
  { 78, -1, sizeof(req_add_sys_user)},
  { 85, -1, sizeof(req_del_sys_user)},
  { 92, -1, sizeof(req_edit_sys_user)},
  { 99, -1, sizeof(sys_investor)},
  { 107, -1, sizeof(req_risk_investors)},
  { 114, -1, sizeof(rsp_risk_investors)},
  { 122, -1, sizeof(req_investors)},
  { 129, -1, sizeof(rsp_investors)},
  { 136, -1, sizeof(req_add_investors)},
  { 144, -1, sizeof(req_del_investors)},
  { 152, -1, sizeof(rtn_change_tree)},
  { 159, -1, sizeof(rtn_change_risker_investor)},
  { 167, -1, sizeof(rtn_change_investor)},
  { 174, -1, sizeof(insmrgnrate_info)},
  { 186, -1, sizeof(req_insmrgnrate)},
  { 192, -1, sizeof(rsp_insmrgnrate)},
  { 199, -1, sizeof(req_edit_insmrgnrate)},
  { 206, -1, sizeof(rtn_change_insmrgnrate)},
  { 212, -1, sizeof(req_add_insmrgnrate)},
  { 219, -1, sizeof(rtn_add_insmrgnrate)},
  { 225, -1, sizeof(req_del_insmrgnrate)},
  { 232, -1, sizeof(rtn_del_insmrgnrate)},
  { 238, -1, sizeof(req_option_argv)},
  { 244, -1, sizeof(option_argv)},
  { 254, -1, sizeof(rsp_option_argv)},
  { 261, -1, sizeof(req_option_argv_adj)},
  { 268, -1, sizeof(req_contract)},
  { 274, -1, sizeof(contract_info)},
  { 302, -1, sizeof(rsp_contract)},
  { 309, -1, sizeof(req_investor_info)},
  { 316, -1, sizeof(investor_info)},
  { 352, -1, sizeof(rsp_investor_info)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_error_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_action_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_head_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_sys_auth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_role_auth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_sys_subs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_sys_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_sys_subs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_add_sys_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_del_sys_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_edit_sys_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_sys_investor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_risk_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_risk_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_add_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_del_investors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_change_tree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_change_risker_investor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_change_investor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_insmrgnrate_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_edit_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_change_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_add_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_add_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_del_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rtn_del_insmrgnrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_option_argv_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_option_argv_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_option_argv_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_option_argv_adj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_contract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_contract_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_contract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_req_investor_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_investor_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_rsp_investor_info_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "manager_protocal.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 42);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _error_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_error_info_default_instance_);_rsp_action_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_action_info_default_instance_);_rsp_head_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_head_info_default_instance_);_sys_auth_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_sys_auth_default_instance_);_role_auth_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_role_auth_default_instance_);_req_login_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_login_default_instance_);_rsp_login_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_login_default_instance_);_req_sys_subs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_sys_subs_default_instance_);_sys_user_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_sys_user_default_instance_);_rsp_sys_subs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_sys_subs_default_instance_);_req_add_sys_user_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_add_sys_user_default_instance_);_req_del_sys_user_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_del_sys_user_default_instance_);_req_edit_sys_user_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_edit_sys_user_default_instance_);_sys_investor_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_sys_investor_default_instance_);_req_risk_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_risk_investors_default_instance_);_rsp_risk_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_risk_investors_default_instance_);_req_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_investors_default_instance_);_rsp_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_investors_default_instance_);_req_add_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_add_investors_default_instance_);_req_del_investors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_del_investors_default_instance_);_rtn_change_tree_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_change_tree_default_instance_);_rtn_change_risker_investor_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_change_risker_investor_default_instance_);_rtn_change_investor_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_change_investor_default_instance_);_insmrgnrate_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_insmrgnrate_info_default_instance_);_req_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_insmrgnrate_default_instance_);_rsp_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_insmrgnrate_default_instance_);_req_edit_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_edit_insmrgnrate_default_instance_);_rtn_change_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_change_insmrgnrate_default_instance_);_req_add_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_add_insmrgnrate_default_instance_);_rtn_add_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_add_insmrgnrate_default_instance_);_req_del_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_del_insmrgnrate_default_instance_);_rtn_del_insmrgnrate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rtn_del_insmrgnrate_default_instance_);_req_option_argv_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_option_argv_default_instance_);_option_argv_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_option_argv_default_instance_);_rsp_option_argv_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_option_argv_default_instance_);_req_option_argv_adj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_option_argv_adj_default_instance_);_req_contract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_contract_default_instance_);_contract_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_contract_info_default_instance_);_rsp_contract_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_contract_default_instance_);_req_investor_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_req_investor_info_default_instance_);_investor_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_investor_info_default_instance_);_rsp_investor_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_rsp_investor_info_default_instance_);_rsp_action_info_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::error_info*>(
      ::manager::error_info::internal_default_instance());
  _rsp_head_info_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::error_info*>(
      ::manager::error_info::internal_default_instance());
  _rsp_login_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _rsp_sys_subs_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _req_add_sys_user_default_instance_._instance.get_mutable()->user_ = const_cast< ::manager::sys_user*>(
      ::manager::sys_user::internal_default_instance());
  _req_edit_sys_user_default_instance_._instance.get_mutable()->user_ = const_cast< ::manager::sys_user*>(
      ::manager::sys_user::internal_default_instance());
  _rsp_risk_investors_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _rsp_investors_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _rtn_change_tree_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::sys_user*>(
      ::manager::sys_user::internal_default_instance());
  _rsp_insmrgnrate_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _req_add_insmrgnrate_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::insmrgnrate_info*>(
      ::manager::insmrgnrate_info::internal_default_instance());
  _rtn_add_insmrgnrate_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::insmrgnrate_info*>(
      ::manager::insmrgnrate_info::internal_default_instance());
  _req_del_insmrgnrate_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::insmrgnrate_info*>(
      ::manager::insmrgnrate_info::internal_default_instance());
  _rtn_del_insmrgnrate_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::insmrgnrate_info*>(
      ::manager::insmrgnrate_info::internal_default_instance());
  _rsp_option_argv_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _rsp_option_argv_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::option_argv*>(
      ::manager::option_argv::internal_default_instance());
  _req_option_argv_adj_default_instance_._instance.get_mutable()->info_ = const_cast< ::manager::option_argv*>(
      ::manager::option_argv::internal_default_instance());
  _rsp_contract_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
  _rsp_investor_info_default_instance_._instance.get_mutable()->header_ = const_cast< ::manager::rsp_head_info*>(
      ::manager::rsp_head_info::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026manager_protocal.proto\022\007manager\"/\n\nerr"
      "or_info\022\017\n\007errorid\030\001 \001(\021\022\020\n\010errormsg\030\002 \001"
      "(\t\"G\n\017rsp_action_info\022\021\n\trequestid\030\001 \001(\005"
      "\022!\n\004info\030\002 \001(\0132\023.manager.error_info\"U\n\rr"
      "sp_head_info\022\021\n\trequestid\030\001 \001(\005\022!\n\004info\030"
      "\002 \001(\0132\023.manager.error_info\022\016\n\006islast\030\003 \001"
      "(\010\"(\n\010sys_auth\022\016\n\006authid\030\001 \001(\005\022\014\n\004name\030\002"
      " \001(\t\"<\n\trole_auth\022\016\n\006roleid\030\001 \001(\005\022\037\n\004aut"
      "h\030\002 \003(\0132\021.manager.sys_auth\";\n\treq_login\022"
      "\021\n\trequestid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\022\013\n\003pw"
      "d\030\003 \001(\t\"U\n\trsp_login\022&\n\006header\030\001 \001(\0132\026.m"
      "anager.rsp_head_info\022 \n\004auth\030\002 \003(\0132\022.man"
      "ager.role_auth\"1\n\014req_sys_subs\022\021\n\treques"
      "tid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\"\225\001\n\010sys_user\022\n"
      "\n\002id\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\022\020\n\010username\030\003"
      " \001(\t\022\016\n\006father\030\004 \001(\t\022\016\n\006roleid\030\005 \001(\005\022\013\n\003"
      "pwd\030\006 \001(\t\022\014\n\004desc\030\007 \001(\t\022 \n\005auths\030\010 \003(\0132\021"
      ".manager.sys_auth\"W\n\014rsp_sys_subs\022&\n\006hea"
      "der\030\001 \001(\0132\026.manager.rsp_head_info\022\037\n\004inf"
      "o\030\002 \003(\0132\021.manager.sys_user\"F\n\020req_add_sy"
      "s_user\022\021\n\trequestid\030\001 \001(\005\022\037\n\004user\030\002 \001(\0132"
      "\021.manager.sys_user\"5\n\020req_del_sys_user\022\021"
      "\n\trequestid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\"G\n\021req"
      "_edit_sys_user\022\021\n\trequestid\030\001 \001(\005\022\037\n\004use"
      "r\030\002 \001(\0132\021.manager.sys_user\"=\n\014sys_invest"
      "or\022\020\n\010investor\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005st"
      "ate\030\003 \001(\005\"7\n\022req_risk_investors\022\021\n\treque"
      "stid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\"v\n\022rsp_risk_i"
      "nvestors\022&\n\006header\030\001 \001(\0132\026.manager.rsp_h"
      "ead_info\022\016\n\006userid\030\002 \001(\t\022(\n\tinvestors\030\003 "
      "\003(\0132\025.manager.sys_investor\"1\n\rreq_invest"
      "ors\022\021\n\trequestid\030\001 \001(\005\022\r\n\005state\030\002 \001(\005\"a\n"
      "\rrsp_investors\022&\n\006header\030\001 \001(\0132\026.manager"
      ".rsp_head_info\022(\n\tinvestors\030\002 \003(\0132\025.mana"
      "ger.sys_investor\"H\n\021req_add_investors\022\021\n"
      "\trequestid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\022\020\n\010inve"
      "stor\030\003 \003(\t\"H\n\021req_del_investors\022\021\n\treque"
      "stid\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\022\020\n\010investor\030\003"
      " \003(\t\"F\n\017rtn_change_tree\022\022\n\noperatorid\030\001 "
      "\001(\005\022\037\n\004info\030\002 \001(\0132\021.manager.sys_user\"R\n\032"
      "rtn_change_risker_investor\022\022\n\noperatorid"
      "\030\001 \001(\005\022\016\n\006userid\030\002 \001(\t\022\020\n\010investor\030\003 \003(\t"
      "\";\n\023rtn_change_investor\022\022\n\noperatorid\030\001 "
      "\001(\005\022\020\n\010investor\030\002 \003(\t\"\235\001\n\020insmrgnrate_in"
      "fo\022\022\n\ntradingday\030\001 \001(\t\022\024\n\014contractcode\030\002"
      " \001(\t\022\024\n\014exchangecode\030\003 \001(\t\022\021\n\tdirection\030"
      "\004 \001(\t\022\021\n\thedgeflag\030\005 \001(\t\022\022\n\nmarginrate\030\006"
      " \001(\001\022\017\n\007segmrgn\030\007 \001(\001\"$\n\017req_insmrgnrate"
      "\022\021\n\trequestid\030\001 \001(\005\"c\n\017rsp_insmrgnrate\022&"
      "\n\006header\030\001 \001(\0132\026.manager.rsp_head_info\022("
      "\n\005infos\030\002 \003(\0132\031.manager.insmrgnrate_info"
      "\"S\n\024req_edit_insmrgnrate\022\021\n\trequestid\030\001 "
      "\001(\005\022(\n\005infos\030\002 \003(\0132\031.manager.insmrgnrate"
      "_info\"B\n\026rtn_change_insmrgnrate\022(\n\005infos"
      "\030\001 \003(\0132\031.manager.insmrgnrate_info\"Q\n\023req"
      "_add_insmrgnrate\022\021\n\trequestid\030\001 \001(\005\022\'\n\004i"
      "nfo\030\002 \001(\0132\031.manager.insmrgnrate_info\">\n\023"
      "rtn_add_insmrgnrate\022\'\n\004info\030\001 \001(\0132\031.mana"
      "ger.insmrgnrate_info\"Q\n\023req_del_insmrgnr"
      "ate\022\021\n\trequestid\030\001 \001(\005\022\'\n\004info\030\002 \001(\0132\031.m"
      "anager.insmrgnrate_info\">\n\023rtn_del_insmr"
      "gnrate\022\'\n\004info\030\001 \001(\0132\031.manager.insmrgnra"
      "te_info\"$\n\017req_option_argv\022\021\n\trequestid\030"
      "\001 \001(\005\"^\n\013option_argv\022\022\n\nprice_type\030\001 \001(\005"
      "\022\013\n\003vol\030\002 \001(\001\022\014\n\004rate\030\003 \001(\001\022\014\n\004step\030\004 \001("
      "\005\022\022\n\niterations\030\005 \001(\005\"]\n\017rsp_option_argv"
      "\022&\n\006header\030\001 \001(\0132\026.manager.rsp_head_info"
      "\022\"\n\004info\030\002 \001(\0132\024.manager.option_argv\"L\n\023"
      "req_option_argv_adj\022\021\n\trequestid\030\001 \001(\005\022\""
      "\n\004info\030\002 \001(\0132\024.manager.option_argv\"!\n\014re"
      "q_contract\022\021\n\trequestid\030\001 \001(\005\"\377\003\n\rcontra"
      "ct_info\022\024\n\014contractcode\030\001 \001(\t\022\023\n\013product"
      "code\030\002 \001(\t\022\023\n\013productkind\030\003 \001(\t\022\024\n\014excha"
      "ngecode\030\004 \001(\t\022\022\n\nmarketcode\030\005 \001(\t\022\022\n\ncre"
      "atedate\030\006 \001(\t\022\020\n\010opendate\030\007 \001(\t\022\022\n\nexpir"
      "edate\030\010 \001(\t\022\022\n\nmultiplier\030\t \001(\005\022\021\n\tprice"
      "tick\030\n \001(\001\022\024\n\014contractname\030\013 \001(\t\022\026\n\016deli"
      "vbegindate\030\014 \001(\t\022\024\n\014delivenddate\030\r \001(\t\022\026"
      "\n\016excontractname\030\016 \001(\t\022\025\n\rexproductname\030"
      "\017 \001(\t\022\022\n\nismrgndisc\030\020 \001(\t\022\024\n\014productclas"
      "s\030\021 \001(\t\022\021\n\tbaseprice\030\022 \001(\001\022\023\n\013optionstyp"
      "e\030\023 \001(\t\022\023\n\013strikeprice\030\024 \001(\001\022\031\n\021underlyi"
      "nginstrid\030\025 \001(\t\022\022\n\nstrikemode\030\026 \001(\t\022\032\n\022u"
      "nderlyingmultiple\030\027 \001(\001\"]\n\014rsp_contract\022"
      "&\n\006header\030\001 \001(\0132\026.manager.rsp_head_info\022"
      "%\n\005infos\030\002 \003(\0132\026.manager.contract_info\"8"
      "\n\021req_investor_info\022\021\n\trequestid\030\001 \001(\005\022\020"
      "\n\010investor\030\002 \003(\t\"\200\005\n\rinvestor_info\022\022\n\nin"
      "vestorid\030\001 \001(\t\022\020\n\010brokerid\030\002 \001(\t\022\024\n\014inve"
      "stortype\030\003 \001(\t\022\024\n\014investorname\030\004 \001(\t\022\032\n\022"
      "identifiedcardtype\030\005 \001(\t\022\030\n\020identifiedca"
      "rdno\030\006 \001(\t\022\017\n\007country\030\007 \001(\t\022\020\n\010province\030"
      "\010 \001(\t\022\014\n\004city\030\t \001(\t\022\020\n\010birthday\030\n \001(\t\022\013\n"
      "\003sex\030\013 \001(\t\022\022\n\nprofession\030\014 \001(\t\022\020\n\010nation"
      "al\030\r \001(\t\022\017\n\007capital\030\016 \001(\001\022\027\n\017capitalcurr"
      "ency\030\017 \001(\t\022\021\n\ttelephone\030\020 \001(\t\022\017\n\007address"
      "\030\021 \001(\t\022\017\n\007zipcode\030\022 \001(\t\022\r\n\005email\030\023 \001(\t\022\014"
      "\n\004memo\030\024 \001(\t\022\030\n\020openinvestorname\030\025 \001(\t\022\031"
      "\n\021orderinvestorname\030\026 \001(\t\022\030\n\020fundinvesto"
      "rname\030\027 \001(\t\022\032\n\022settleinvestorname\030\030 \001(\t\022"
      "\020\n\010isactive\030\031 \001(\005\022\024\n\014departmentid\030\032 \001(\t\022"
      "\030\n\020investorfullname\030\033 \001(\t\022\017\n\007isemail\030\034 \001"
      "(\005\022\r\n\005issms\030\035 \001(\005\022\022\n\nisusingotp\030\036 \001(\005\022\024\n"
      "\014clientregion\030\037 \001(\t\"b\n\021rsp_investor_info"
      "\022&\n\006header\030\001 \001(\0132\026.manager.rsp_head_info"
      "\022%\n\005infos\030\002 \003(\0132\026.manager.investor_infob"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4247);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "manager_protocal.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_manager_5fprotocal_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int error_info::kErroridFieldNumber;
const int error_info::kErrormsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

error_info::error_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.error_info)
}
error_info::error_info(const error_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errormsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errormsg().size() > 0) {
    errormsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormsg_);
  }
  errorid_ = from.errorid_;
  // @@protoc_insertion_point(copy_constructor:manager.error_info)
}

void error_info::SharedCtor() {
  errormsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorid_ = 0;
  _cached_size_ = 0;
}

error_info::~error_info() {
  // @@protoc_insertion_point(destructor:manager.error_info)
  SharedDtor();
}

void error_info::SharedDtor() {
  errormsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void error_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* error_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const error_info& error_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

error_info* error_info::New(::google::protobuf::Arena* arena) const {
  error_info* n = new error_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void error_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.error_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorid_ = 0;
  _internal_metadata_.Clear();
}

bool error_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.error_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 errorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &errorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errormsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errormsg().data(), static_cast<int>(this->errormsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.error_info.errormsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.error_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.error_info)
  return false;
#undef DO_
}

void error_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.error_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 errorid = 1;
  if (this->errorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->errorid(), output);
  }

  // string errormsg = 2;
  if (this->errormsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errormsg().data(), static_cast<int>(this->errormsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.error_info.errormsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errormsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.error_info)
}

::google::protobuf::uint8* error_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.error_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 errorid = 1;
  if (this->errorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->errorid(), target);
  }

  // string errormsg = 2;
  if (this->errormsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errormsg().data(), static_cast<int>(this->errormsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.error_info.errormsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errormsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.error_info)
  return target;
}

size_t error_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.error_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errormsg = 2;
  if (this->errormsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errormsg());
  }

  // sint32 errorid = 1;
  if (this->errorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->errorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void error_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.error_info)
  GOOGLE_DCHECK_NE(&from, this);
  const error_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const error_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.error_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.error_info)
    MergeFrom(*source);
  }
}

void error_info::MergeFrom(const error_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.error_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errormsg().size() > 0) {

    errormsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormsg_);
  }
  if (from.errorid() != 0) {
    set_errorid(from.errorid());
  }
}

void error_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.error_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void error_info::CopyFrom(const error_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.error_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool error_info::IsInitialized() const {
  return true;
}

void error_info::Swap(error_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void error_info::InternalSwap(error_info* other) {
  using std::swap;
  errormsg_.Swap(&other->errormsg_);
  swap(errorid_, other->errorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata error_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// error_info

// sint32 errorid = 1;
void error_info::clear_errorid() {
  errorid_ = 0;
}
::google::protobuf::int32 error_info::errorid() const {
  // @@protoc_insertion_point(field_get:manager.error_info.errorid)
  return errorid_;
}
void error_info::set_errorid(::google::protobuf::int32 value) {
  
  errorid_ = value;
  // @@protoc_insertion_point(field_set:manager.error_info.errorid)
}

// string errormsg = 2;
void error_info::clear_errormsg() {
  errormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& error_info::errormsg() const {
  // @@protoc_insertion_point(field_get:manager.error_info.errormsg)
  return errormsg_.GetNoArena();
}
void error_info::set_errormsg(const ::std::string& value) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.error_info.errormsg)
}
#if LANG_CXX11
void error_info::set_errormsg(::std::string&& value) {
  
  errormsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.error_info.errormsg)
}
#endif
void error_info::set_errormsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.error_info.errormsg)
}
void error_info::set_errormsg(const char* value, size_t size) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.error_info.errormsg)
}
::std::string* error_info::mutable_errormsg() {
  
  // @@protoc_insertion_point(field_mutable:manager.error_info.errormsg)
  return errormsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* error_info::release_errormsg() {
  // @@protoc_insertion_point(field_release:manager.error_info.errormsg)
  
  return errormsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void error_info::set_allocated_errormsg(::std::string* errormsg) {
  if (errormsg != NULL) {
    
  } else {
    
  }
  errormsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormsg);
  // @@protoc_insertion_point(field_set_allocated:manager.error_info.errormsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_action_info::kRequestidFieldNumber;
const int rsp_action_info::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_action_info::rsp_action_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_action_info)
}
rsp_action_info::rsp_action_info(const rsp_action_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::error_info(*from.info_);
  } else {
    info_ = NULL;
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.rsp_action_info)
}

void rsp_action_info::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&info_)) + sizeof(requestid_));
  _cached_size_ = 0;
}

rsp_action_info::~rsp_action_info() {
  // @@protoc_insertion_point(destructor:manager.rsp_action_info)
  SharedDtor();
}

void rsp_action_info::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void rsp_action_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_action_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_action_info& rsp_action_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_action_info* rsp_action_info::New(::google::protobuf::Arena* arena) const {
  rsp_action_info* n = new rsp_action_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_action_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_action_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool rsp_action_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_action_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.error_info info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_action_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_action_info)
  return false;
#undef DO_
}

void rsp_action_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_action_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.error_info info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_action_info)
}

::google::protobuf::uint8* rsp_action_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_action_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.error_info info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_action_info)
  return target;
}

size_t rsp_action_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_action_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.error_info info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_action_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_action_info)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_action_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_action_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_action_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_action_info)
    MergeFrom(*source);
  }
}

void rsp_action_info::MergeFrom(const rsp_action_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_action_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::error_info::MergeFrom(from.info());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void rsp_action_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_action_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_action_info::CopyFrom(const rsp_action_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_action_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_action_info::IsInitialized() const {
  return true;
}

void rsp_action_info::Swap(rsp_action_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_action_info::InternalSwap(rsp_action_info* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_action_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_action_info

// int32 requestid = 1;
void rsp_action_info::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 rsp_action_info::requestid() const {
  // @@protoc_insertion_point(field_get:manager.rsp_action_info.requestid)
  return requestid_;
}
void rsp_action_info::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.rsp_action_info.requestid)
}

// .manager.error_info info = 2;
bool rsp_action_info::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void rsp_action_info::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::error_info& rsp_action_info::info() const {
  const ::manager::error_info* p = info_;
  // @@protoc_insertion_point(field_get:manager.rsp_action_info.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::error_info*>(
      &::manager::_error_info_default_instance_);
}
::manager::error_info* rsp_action_info::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::error_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_action_info.info)
  return info_;
}
::manager::error_info* rsp_action_info::release_info() {
  // @@protoc_insertion_point(field_release:manager.rsp_action_info.info)
  
  ::manager::error_info* temp = info_;
  info_ = NULL;
  return temp;
}
void rsp_action_info::set_allocated_info(::manager::error_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_action_info.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_head_info::kRequestidFieldNumber;
const int rsp_head_info::kInfoFieldNumber;
const int rsp_head_info::kIslastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_head_info::rsp_head_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_head_info)
}
rsp_head_info::rsp_head_info(const rsp_head_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::error_info(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&islast_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(islast_));
  // @@protoc_insertion_point(copy_constructor:manager.rsp_head_info)
}

void rsp_head_info::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islast_) -
      reinterpret_cast<char*>(&info_)) + sizeof(islast_));
  _cached_size_ = 0;
}

rsp_head_info::~rsp_head_info() {
  // @@protoc_insertion_point(destructor:manager.rsp_head_info)
  SharedDtor();
}

void rsp_head_info::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void rsp_head_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_head_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_head_info& rsp_head_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_head_info* rsp_head_info::New(::google::protobuf::Arena* arena) const {
  rsp_head_info* n = new rsp_head_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_head_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_head_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islast_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(islast_));
  _internal_metadata_.Clear();
}

bool rsp_head_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_head_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.error_info info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool islast = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islast_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_head_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_head_info)
  return false;
#undef DO_
}

void rsp_head_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_head_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.error_info info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // bool islast = 3;
  if (this->islast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->islast(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_head_info)
}

::google::protobuf::uint8* rsp_head_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_head_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.error_info info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  // bool islast = 3;
  if (this->islast() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->islast(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_head_info)
  return target;
}

size_t rsp_head_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_head_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.error_info info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  // bool islast = 3;
  if (this->islast() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_head_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_head_info)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_head_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_head_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_head_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_head_info)
    MergeFrom(*source);
  }
}

void rsp_head_info::MergeFrom(const rsp_head_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_head_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::error_info::MergeFrom(from.info());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
  if (from.islast() != 0) {
    set_islast(from.islast());
  }
}

void rsp_head_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_head_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_head_info::CopyFrom(const rsp_head_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_head_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_head_info::IsInitialized() const {
  return true;
}

void rsp_head_info::Swap(rsp_head_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_head_info::InternalSwap(rsp_head_info* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(requestid_, other->requestid_);
  swap(islast_, other->islast_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_head_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_head_info

// int32 requestid = 1;
void rsp_head_info::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 rsp_head_info::requestid() const {
  // @@protoc_insertion_point(field_get:manager.rsp_head_info.requestid)
  return requestid_;
}
void rsp_head_info::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.rsp_head_info.requestid)
}

// .manager.error_info info = 2;
bool rsp_head_info::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void rsp_head_info::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::error_info& rsp_head_info::info() const {
  const ::manager::error_info* p = info_;
  // @@protoc_insertion_point(field_get:manager.rsp_head_info.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::error_info*>(
      &::manager::_error_info_default_instance_);
}
::manager::error_info* rsp_head_info::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::error_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_head_info.info)
  return info_;
}
::manager::error_info* rsp_head_info::release_info() {
  // @@protoc_insertion_point(field_release:manager.rsp_head_info.info)
  
  ::manager::error_info* temp = info_;
  info_ = NULL;
  return temp;
}
void rsp_head_info::set_allocated_info(::manager::error_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_head_info.info)
}

// bool islast = 3;
void rsp_head_info::clear_islast() {
  islast_ = false;
}
bool rsp_head_info::islast() const {
  // @@protoc_insertion_point(field_get:manager.rsp_head_info.islast)
  return islast_;
}
void rsp_head_info::set_islast(bool value) {
  
  islast_ = value;
  // @@protoc_insertion_point(field_set:manager.rsp_head_info.islast)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sys_auth::kAuthidFieldNumber;
const int sys_auth::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sys_auth::sys_auth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.sys_auth)
}
sys_auth::sys_auth(const sys_auth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  authid_ = from.authid_;
  // @@protoc_insertion_point(copy_constructor:manager.sys_auth)
}

void sys_auth::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authid_ = 0;
  _cached_size_ = 0;
}

sys_auth::~sys_auth() {
  // @@protoc_insertion_point(destructor:manager.sys_auth)
  SharedDtor();
}

void sys_auth::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void sys_auth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sys_auth::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const sys_auth& sys_auth::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

sys_auth* sys_auth::New(::google::protobuf::Arena* arena) const {
  sys_auth* n = new sys_auth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void sys_auth::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.sys_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authid_ = 0;
  _internal_metadata_.Clear();
}

bool sys_auth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.sys_auth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 authid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &authid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_auth.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.sys_auth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.sys_auth)
  return false;
#undef DO_
}

void sys_auth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.sys_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 authid = 1;
  if (this->authid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->authid(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_auth.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.sys_auth)
}

::google::protobuf::uint8* sys_auth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.sys_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 authid = 1;
  if (this->authid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->authid(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_auth.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.sys_auth)
  return target;
}

size_t sys_auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.sys_auth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 authid = 1;
  if (this->authid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->authid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sys_auth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.sys_auth)
  GOOGLE_DCHECK_NE(&from, this);
  const sys_auth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sys_auth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.sys_auth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.sys_auth)
    MergeFrom(*source);
  }
}

void sys_auth::MergeFrom(const sys_auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.sys_auth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.authid() != 0) {
    set_authid(from.authid());
  }
}

void sys_auth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.sys_auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sys_auth::CopyFrom(const sys_auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.sys_auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sys_auth::IsInitialized() const {
  return true;
}

void sys_auth::Swap(sys_auth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sys_auth::InternalSwap(sys_auth* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(authid_, other->authid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata sys_auth::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// sys_auth

// int32 authid = 1;
void sys_auth::clear_authid() {
  authid_ = 0;
}
::google::protobuf::int32 sys_auth::authid() const {
  // @@protoc_insertion_point(field_get:manager.sys_auth.authid)
  return authid_;
}
void sys_auth::set_authid(::google::protobuf::int32 value) {
  
  authid_ = value;
  // @@protoc_insertion_point(field_set:manager.sys_auth.authid)
}

// string name = 2;
void sys_auth::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_auth::name() const {
  // @@protoc_insertion_point(field_get:manager.sys_auth.name)
  return name_.GetNoArena();
}
void sys_auth::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_auth.name)
}
#if LANG_CXX11
void sys_auth::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_auth.name)
}
#endif
void sys_auth::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_auth.name)
}
void sys_auth::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_auth.name)
}
::std::string* sys_auth::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_auth.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_auth::release_name() {
  // @@protoc_insertion_point(field_release:manager.sys_auth.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_auth::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_auth.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int role_auth::kRoleidFieldNumber;
const int role_auth::kAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

role_auth::role_auth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.role_auth)
}
role_auth::role_auth(const role_auth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      auth_(from.auth_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:manager.role_auth)
}

void role_auth::SharedCtor() {
  roleid_ = 0;
  _cached_size_ = 0;
}

role_auth::~role_auth() {
  // @@protoc_insertion_point(destructor:manager.role_auth)
  SharedDtor();
}

void role_auth::SharedDtor() {
}

void role_auth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* role_auth::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const role_auth& role_auth::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

role_auth* role_auth::New(::google::protobuf::Arena* arena) const {
  role_auth* n = new role_auth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void role_auth::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.role_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auth_.Clear();
  roleid_ = 0;
  _internal_metadata_.Clear();
}

bool role_auth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.role_auth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 roleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.sys_auth auth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.role_auth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.role_auth)
  return false;
#undef DO_
}

void role_auth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.role_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roleid = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // repeated .manager.sys_auth auth = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auth_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->auth(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.role_auth)
}

::google::protobuf::uint8* role_auth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.role_auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roleid = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // repeated .manager.sys_auth auth = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auth_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->auth(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.role_auth)
  return target;
}

size_t role_auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.role_auth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.sys_auth auth = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->auth_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->auth(static_cast<int>(i)));
    }
  }

  // int32 roleid = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void role_auth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.role_auth)
  GOOGLE_DCHECK_NE(&from, this);
  const role_auth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const role_auth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.role_auth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.role_auth)
    MergeFrom(*source);
  }
}

void role_auth::MergeFrom(const role_auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.role_auth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auth_.MergeFrom(from.auth_);
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void role_auth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.role_auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void role_auth::CopyFrom(const role_auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.role_auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool role_auth::IsInitialized() const {
  return true;
}

void role_auth::Swap(role_auth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void role_auth::InternalSwap(role_auth* other) {
  using std::swap;
  auth_.InternalSwap(&other->auth_);
  swap(roleid_, other->roleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata role_auth::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// role_auth

// int32 roleid = 1;
void role_auth::clear_roleid() {
  roleid_ = 0;
}
::google::protobuf::int32 role_auth::roleid() const {
  // @@protoc_insertion_point(field_get:manager.role_auth.roleid)
  return roleid_;
}
void role_auth::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:manager.role_auth.roleid)
}

// repeated .manager.sys_auth auth = 2;
int role_auth::auth_size() const {
  return auth_.size();
}
void role_auth::clear_auth() {
  auth_.Clear();
}
const ::manager::sys_auth& role_auth::auth(int index) const {
  // @@protoc_insertion_point(field_get:manager.role_auth.auth)
  return auth_.Get(index);
}
::manager::sys_auth* role_auth::mutable_auth(int index) {
  // @@protoc_insertion_point(field_mutable:manager.role_auth.auth)
  return auth_.Mutable(index);
}
::manager::sys_auth* role_auth::add_auth() {
  // @@protoc_insertion_point(field_add:manager.role_auth.auth)
  return auth_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::sys_auth >*
role_auth::mutable_auth() {
  // @@protoc_insertion_point(field_mutable_list:manager.role_auth.auth)
  return &auth_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::sys_auth >&
role_auth::auth() const {
  // @@protoc_insertion_point(field_list:manager.role_auth.auth)
  return auth_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_login::kRequestidFieldNumber;
const int req_login::kUseridFieldNumber;
const int req_login::kPwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_login::req_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_login)
}
req_login::req_login(const req_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pwd().size() > 0) {
    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_login)
}

void req_login::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_login::~req_login() {
  // @@protoc_insertion_point(destructor:manager.req_login)
  SharedDtor();
}

void req_login::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_login::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_login& req_login::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_login* req_login::New(::google::protobuf::Arena* arena) const {
  req_login* n = new req_login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_login::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_login.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pwd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), static_cast<int>(this->pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_login.pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_login)
  return false;
#undef DO_
}

void req_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_login.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // string pwd = 3;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_login.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pwd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_login)
}

::google::protobuf::uint8* req_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_login.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // string pwd = 3;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_login.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pwd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_login)
  return target;
}

size_t req_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string pwd = 3;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_login)
  GOOGLE_DCHECK_NE(&from, this);
  const req_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_login)
    MergeFrom(*source);
  }
}

void req_login::MergeFrom(const req_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_login::CopyFrom(const req_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_login::IsInitialized() const {
  return true;
}

void req_login::Swap(req_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_login::InternalSwap(req_login* other) {
  using std::swap;
  userid_.Swap(&other->userid_);
  pwd_.Swap(&other->pwd_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_login::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_login

// int32 requestid = 1;
void req_login::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_login::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_login.requestid)
  return requestid_;
}
void req_login::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_login.requestid)
}

// string userid = 2;
void req_login::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_login::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_login.userid)
  return userid_.GetNoArena();
}
void req_login::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_login.userid)
}
#if LANG_CXX11
void req_login::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_login.userid)
}
#endif
void req_login::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_login.userid)
}
void req_login::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_login.userid)
}
::std::string* req_login::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_login.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_login::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_login.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_login::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_login.userid)
}

// string pwd = 3;
void req_login::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_login::pwd() const {
  // @@protoc_insertion_point(field_get:manager.req_login.pwd)
  return pwd_.GetNoArena();
}
void req_login::set_pwd(const ::std::string& value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_login.pwd)
}
#if LANG_CXX11
void req_login::set_pwd(::std::string&& value) {
  
  pwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_login.pwd)
}
#endif
void req_login::set_pwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_login.pwd)
}
void req_login::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_login.pwd)
}
::std::string* req_login::mutable_pwd() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_login.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_login::release_pwd() {
  // @@protoc_insertion_point(field_release:manager.req_login.pwd)
  
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_login::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:manager.req_login.pwd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_login::kHeaderFieldNumber;
const int rsp_login::kAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_login::rsp_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_login)
}
rsp_login::rsp_login(const rsp_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      auth_(from.auth_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_login)
}

void rsp_login::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_login::~rsp_login() {
  // @@protoc_insertion_point(destructor:manager.rsp_login)
  SharedDtor();
}

void rsp_login::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void rsp_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_login::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_login& rsp_login::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_login* rsp_login::New(::google::protobuf::Arena* arena) const {
  rsp_login* n = new rsp_login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_login::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auth_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.role_auth auth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_login)
  return false;
#undef DO_
}

void rsp_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .manager.role_auth auth = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auth_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->auth(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_login)
}

::google::protobuf::uint8* rsp_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .manager.role_auth auth = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auth_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->auth(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_login)
  return target;
}

size_t rsp_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.role_auth auth = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->auth_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->auth(static_cast<int>(i)));
    }
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_login)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_login)
    MergeFrom(*source);
  }
}

void rsp_login::MergeFrom(const rsp_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auth_.MergeFrom(from.auth_);
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_login::CopyFrom(const rsp_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_login::IsInitialized() const {
  return true;
}

void rsp_login::Swap(rsp_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_login::InternalSwap(rsp_login* other) {
  using std::swap;
  auth_.InternalSwap(&other->auth_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_login::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_login

// .manager.rsp_head_info header = 1;
bool rsp_login::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_login::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_login::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_login.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_login::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_login.header)
  return header_;
}
::manager::rsp_head_info* rsp_login::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_login.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_login::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_login.header)
}

// repeated .manager.role_auth auth = 2;
int rsp_login::auth_size() const {
  return auth_.size();
}
void rsp_login::clear_auth() {
  auth_.Clear();
}
const ::manager::role_auth& rsp_login::auth(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_login.auth)
  return auth_.Get(index);
}
::manager::role_auth* rsp_login::mutable_auth(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_login.auth)
  return auth_.Mutable(index);
}
::manager::role_auth* rsp_login::add_auth() {
  // @@protoc_insertion_point(field_add:manager.rsp_login.auth)
  return auth_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::role_auth >*
rsp_login::mutable_auth() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_login.auth)
  return &auth_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::role_auth >&
rsp_login::auth() const {
  // @@protoc_insertion_point(field_list:manager.rsp_login.auth)
  return auth_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_sys_subs::kRequestidFieldNumber;
const int req_sys_subs::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_sys_subs::req_sys_subs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_sys_subs)
}
req_sys_subs::req_sys_subs(const req_sys_subs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_sys_subs)
}

void req_sys_subs::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_sys_subs::~req_sys_subs() {
  // @@protoc_insertion_point(destructor:manager.req_sys_subs)
  SharedDtor();
}

void req_sys_subs::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_sys_subs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_sys_subs::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_sys_subs& req_sys_subs::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_sys_subs* req_sys_subs::New(::google::protobuf::Arena* arena) const {
  req_sys_subs* n = new req_sys_subs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_sys_subs::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_sys_subs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_sys_subs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_sys_subs.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_sys_subs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_sys_subs)
  return false;
#undef DO_
}

void req_sys_subs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_sys_subs.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_sys_subs)
}

::google::protobuf::uint8* req_sys_subs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_sys_subs.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_sys_subs)
  return target;
}

size_t req_sys_subs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_sys_subs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_sys_subs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_sys_subs)
  GOOGLE_DCHECK_NE(&from, this);
  const req_sys_subs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_sys_subs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_sys_subs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_sys_subs)
    MergeFrom(*source);
  }
}

void req_sys_subs::MergeFrom(const req_sys_subs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_sys_subs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_sys_subs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_sys_subs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_sys_subs::CopyFrom(const req_sys_subs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_sys_subs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_sys_subs::IsInitialized() const {
  return true;
}

void req_sys_subs::Swap(req_sys_subs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_sys_subs::InternalSwap(req_sys_subs* other) {
  using std::swap;
  userid_.Swap(&other->userid_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_sys_subs::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_sys_subs

// int32 requestid = 1;
void req_sys_subs::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_sys_subs::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_sys_subs.requestid)
  return requestid_;
}
void req_sys_subs::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_sys_subs.requestid)
}

// string userid = 2;
void req_sys_subs::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_sys_subs::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_sys_subs.userid)
  return userid_.GetNoArena();
}
void req_sys_subs::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_sys_subs.userid)
}
#if LANG_CXX11
void req_sys_subs::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_sys_subs.userid)
}
#endif
void req_sys_subs::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_sys_subs.userid)
}
void req_sys_subs::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_sys_subs.userid)
}
::std::string* req_sys_subs::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_sys_subs.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_sys_subs::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_sys_subs.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_sys_subs::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_sys_subs.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sys_user::kIdFieldNumber;
const int sys_user::kUseridFieldNumber;
const int sys_user::kUsernameFieldNumber;
const int sys_user::kFatherFieldNumber;
const int sys_user::kRoleidFieldNumber;
const int sys_user::kPwdFieldNumber;
const int sys_user::kDescFieldNumber;
const int sys_user::kAuthsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sys_user::sys_user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.sys_user)
}
sys_user::sys_user(const sys_user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      auths_(from.auths_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  father_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.father().size() > 0) {
    father_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.father_);
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pwd().size() > 0) {
    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(roleid_));
  // @@protoc_insertion_point(copy_constructor:manager.sys_user)
}

void sys_user::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  father_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(roleid_));
  _cached_size_ = 0;
}

sys_user::~sys_user() {
  // @@protoc_insertion_point(destructor:manager.sys_user)
  SharedDtor();
}

void sys_user::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  father_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void sys_user::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sys_user::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const sys_user& sys_user::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

sys_user* sys_user::New(::google::protobuf::Arena* arena) const {
  sys_user* n = new sys_user;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void sys_user::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auths_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  father_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(roleid_));
  _internal_metadata_.Clear();
}

bool sys_user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.sys_user)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_user.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_user.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string father = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_father()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->father().data(), static_cast<int>(this->father().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_user.father"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 roleid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pwd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), static_cast<int>(this->pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_user.pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_user.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.sys_auth auths = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_auths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.sys_user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.sys_user)
  return false;
#undef DO_
}

void sys_user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // string father = 4;
  if (this->father().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->father().data(), static_cast<int>(this->father().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.father");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->father(), output);
  }

  // int32 roleid = 5;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->roleid(), output);
  }

  // string pwd = 6;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->pwd(), output);
  }

  // string desc = 7;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->desc(), output);
  }

  // repeated .manager.sys_auth auths = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auths_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->auths(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.sys_user)
}

::google::protobuf::uint8* sys_user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // string father = 4;
  if (this->father().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->father().data(), static_cast<int>(this->father().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.father");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->father(), target);
  }

  // int32 roleid = 5;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->roleid(), target);
  }

  // string pwd = 6;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->pwd(), target);
  }

  // string desc = 7;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_user.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->desc(), target);
  }

  // repeated .manager.sys_auth auths = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auths_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->auths(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.sys_user)
  return target;
}

size_t sys_user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.sys_user)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.sys_auth auths = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->auths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->auths(static_cast<int>(i)));
    }
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string username = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string father = 4;
  if (this->father().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->father());
  }

  // string pwd = 6;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  // string desc = 7;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 roleid = 5;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sys_user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  const sys_user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sys_user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.sys_user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.sys_user)
    MergeFrom(*source);
  }
}

void sys_user::MergeFrom(const sys_user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auths_.MergeFrom(from.auths_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.father().size() > 0) {

    father_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.father_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void sys_user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sys_user::CopyFrom(const sys_user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sys_user::IsInitialized() const {
  return true;
}

void sys_user::Swap(sys_user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sys_user::InternalSwap(sys_user* other) {
  using std::swap;
  auths_.InternalSwap(&other->auths_);
  userid_.Swap(&other->userid_);
  username_.Swap(&other->username_);
  father_.Swap(&other->father_);
  pwd_.Swap(&other->pwd_);
  desc_.Swap(&other->desc_);
  swap(id_, other->id_);
  swap(roleid_, other->roleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata sys_user::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// sys_user

// int32 id = 1;
void sys_user::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 sys_user::id() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.id)
  return id_;
}
void sys_user::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:manager.sys_user.id)
}

// string userid = 2;
void sys_user::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_user::userid() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.userid)
  return userid_.GetNoArena();
}
void sys_user::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_user.userid)
}
#if LANG_CXX11
void sys_user::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_user.userid)
}
#endif
void sys_user::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_user.userid)
}
void sys_user::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_user.userid)
}
::std::string* sys_user::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_user.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_user::release_userid() {
  // @@protoc_insertion_point(field_release:manager.sys_user.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_user::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_user.userid)
}

// string username = 3;
void sys_user::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_user::username() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.username)
  return username_.GetNoArena();
}
void sys_user::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_user.username)
}
#if LANG_CXX11
void sys_user::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_user.username)
}
#endif
void sys_user::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_user.username)
}
void sys_user::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_user.username)
}
::std::string* sys_user::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_user.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_user::release_username() {
  // @@protoc_insertion_point(field_release:manager.sys_user.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_user::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_user.username)
}

// string father = 4;
void sys_user::clear_father() {
  father_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_user::father() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.father)
  return father_.GetNoArena();
}
void sys_user::set_father(const ::std::string& value) {
  
  father_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_user.father)
}
#if LANG_CXX11
void sys_user::set_father(::std::string&& value) {
  
  father_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_user.father)
}
#endif
void sys_user::set_father(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  father_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_user.father)
}
void sys_user::set_father(const char* value, size_t size) {
  
  father_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_user.father)
}
::std::string* sys_user::mutable_father() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_user.father)
  return father_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_user::release_father() {
  // @@protoc_insertion_point(field_release:manager.sys_user.father)
  
  return father_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_user::set_allocated_father(::std::string* father) {
  if (father != NULL) {
    
  } else {
    
  }
  father_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), father);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_user.father)
}

// int32 roleid = 5;
void sys_user::clear_roleid() {
  roleid_ = 0;
}
::google::protobuf::int32 sys_user::roleid() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.roleid)
  return roleid_;
}
void sys_user::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:manager.sys_user.roleid)
}

// string pwd = 6;
void sys_user::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_user::pwd() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.pwd)
  return pwd_.GetNoArena();
}
void sys_user::set_pwd(const ::std::string& value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_user.pwd)
}
#if LANG_CXX11
void sys_user::set_pwd(::std::string&& value) {
  
  pwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_user.pwd)
}
#endif
void sys_user::set_pwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_user.pwd)
}
void sys_user::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_user.pwd)
}
::std::string* sys_user::mutable_pwd() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_user.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_user::release_pwd() {
  // @@protoc_insertion_point(field_release:manager.sys_user.pwd)
  
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_user::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_user.pwd)
}

// string desc = 7;
void sys_user::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_user::desc() const {
  // @@protoc_insertion_point(field_get:manager.sys_user.desc)
  return desc_.GetNoArena();
}
void sys_user::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_user.desc)
}
#if LANG_CXX11
void sys_user::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_user.desc)
}
#endif
void sys_user::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_user.desc)
}
void sys_user::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_user.desc)
}
::std::string* sys_user::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_user.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_user::release_desc() {
  // @@protoc_insertion_point(field_release:manager.sys_user.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_user::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_user.desc)
}

// repeated .manager.sys_auth auths = 8;
int sys_user::auths_size() const {
  return auths_.size();
}
void sys_user::clear_auths() {
  auths_.Clear();
}
const ::manager::sys_auth& sys_user::auths(int index) const {
  // @@protoc_insertion_point(field_get:manager.sys_user.auths)
  return auths_.Get(index);
}
::manager::sys_auth* sys_user::mutable_auths(int index) {
  // @@protoc_insertion_point(field_mutable:manager.sys_user.auths)
  return auths_.Mutable(index);
}
::manager::sys_auth* sys_user::add_auths() {
  // @@protoc_insertion_point(field_add:manager.sys_user.auths)
  return auths_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::sys_auth >*
sys_user::mutable_auths() {
  // @@protoc_insertion_point(field_mutable_list:manager.sys_user.auths)
  return &auths_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::sys_auth >&
sys_user::auths() const {
  // @@protoc_insertion_point(field_list:manager.sys_user.auths)
  return auths_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_sys_subs::kHeaderFieldNumber;
const int rsp_sys_subs::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_sys_subs::rsp_sys_subs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_sys_subs)
}
rsp_sys_subs::rsp_sys_subs(const rsp_sys_subs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      info_(from.info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_sys_subs)
}

void rsp_sys_subs::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_sys_subs::~rsp_sys_subs() {
  // @@protoc_insertion_point(destructor:manager.rsp_sys_subs)
  SharedDtor();
}

void rsp_sys_subs::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void rsp_sys_subs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_sys_subs::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_sys_subs& rsp_sys_subs::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_sys_subs* rsp_sys_subs::New(::google::protobuf::Arena* arena) const {
  rsp_sys_subs* n = new rsp_sys_subs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_sys_subs::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_sys_subs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_sys_subs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.sys_user info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_sys_subs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_sys_subs)
  return false;
#undef DO_
}

void rsp_sys_subs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .manager.sys_user info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_sys_subs)
}

::google::protobuf::uint8* rsp_sys_subs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_sys_subs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .manager.sys_user info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_sys_subs)
  return target;
}

size_t rsp_sys_subs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_sys_subs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.sys_user info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info(static_cast<int>(i)));
    }
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_sys_subs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_sys_subs)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_sys_subs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_sys_subs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_sys_subs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_sys_subs)
    MergeFrom(*source);
  }
}

void rsp_sys_subs::MergeFrom(const rsp_sys_subs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_sys_subs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_sys_subs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_sys_subs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_sys_subs::CopyFrom(const rsp_sys_subs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_sys_subs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_sys_subs::IsInitialized() const {
  return true;
}

void rsp_sys_subs::Swap(rsp_sys_subs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_sys_subs::InternalSwap(rsp_sys_subs* other) {
  using std::swap;
  info_.InternalSwap(&other->info_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_sys_subs::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_sys_subs

// .manager.rsp_head_info header = 1;
bool rsp_sys_subs::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_sys_subs::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_sys_subs::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_sys_subs.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_sys_subs::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_sys_subs.header)
  return header_;
}
::manager::rsp_head_info* rsp_sys_subs::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_sys_subs.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_sys_subs::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_sys_subs.header)
}

// repeated .manager.sys_user info = 2;
int rsp_sys_subs::info_size() const {
  return info_.size();
}
void rsp_sys_subs::clear_info() {
  info_.Clear();
}
const ::manager::sys_user& rsp_sys_subs::info(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_sys_subs.info)
  return info_.Get(index);
}
::manager::sys_user* rsp_sys_subs::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_sys_subs.info)
  return info_.Mutable(index);
}
::manager::sys_user* rsp_sys_subs::add_info() {
  // @@protoc_insertion_point(field_add:manager.rsp_sys_subs.info)
  return info_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::sys_user >*
rsp_sys_subs::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_sys_subs.info)
  return &info_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::sys_user >&
rsp_sys_subs::info() const {
  // @@protoc_insertion_point(field_list:manager.rsp_sys_subs.info)
  return info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_add_sys_user::kRequestidFieldNumber;
const int req_add_sys_user::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_add_sys_user::req_add_sys_user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_add_sys_user)
}
req_add_sys_user::req_add_sys_user(const req_add_sys_user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::manager::sys_user(*from.user_);
  } else {
    user_ = NULL;
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_add_sys_user)
}

void req_add_sys_user::SharedCtor() {
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&user_)) + sizeof(requestid_));
  _cached_size_ = 0;
}

req_add_sys_user::~req_add_sys_user() {
  // @@protoc_insertion_point(destructor:manager.req_add_sys_user)
  SharedDtor();
}

void req_add_sys_user::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
}

void req_add_sys_user::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_add_sys_user::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_add_sys_user& req_add_sys_user::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_add_sys_user* req_add_sys_user::New(::google::protobuf::Arena* arena) const {
  req_add_sys_user* n = new req_add_sys_user;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_add_sys_user::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_add_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_add_sys_user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_add_sys_user)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.sys_user user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_add_sys_user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_add_sys_user)
  return false;
#undef DO_
}

void req_add_sys_user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_add_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.sys_user user = 2;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_add_sys_user)
}

::google::protobuf::uint8* req_add_sys_user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_add_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.sys_user user = 2;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->user_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_add_sys_user)
  return target;
}

size_t req_add_sys_user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_add_sys_user)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.sys_user user = 2;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_add_sys_user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_add_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  const req_add_sys_user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_add_sys_user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_add_sys_user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_add_sys_user)
    MergeFrom(*source);
  }
}

void req_add_sys_user::MergeFrom(const req_add_sys_user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_add_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    mutable_user()->::manager::sys_user::MergeFrom(from.user());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_add_sys_user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_add_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_add_sys_user::CopyFrom(const req_add_sys_user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_add_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_add_sys_user::IsInitialized() const {
  return true;
}

void req_add_sys_user::Swap(req_add_sys_user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_add_sys_user::InternalSwap(req_add_sys_user* other) {
  using std::swap;
  swap(user_, other->user_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_add_sys_user::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_add_sys_user

// int32 requestid = 1;
void req_add_sys_user::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_add_sys_user::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_add_sys_user.requestid)
  return requestid_;
}
void req_add_sys_user::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_add_sys_user.requestid)
}

// .manager.sys_user user = 2;
bool req_add_sys_user::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
void req_add_sys_user::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
const ::manager::sys_user& req_add_sys_user::user() const {
  const ::manager::sys_user* p = user_;
  // @@protoc_insertion_point(field_get:manager.req_add_sys_user.user)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::sys_user*>(
      &::manager::_sys_user_default_instance_);
}
::manager::sys_user* req_add_sys_user::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::manager::sys_user;
  }
  // @@protoc_insertion_point(field_mutable:manager.req_add_sys_user.user)
  return user_;
}
::manager::sys_user* req_add_sys_user::release_user() {
  // @@protoc_insertion_point(field_release:manager.req_add_sys_user.user)
  
  ::manager::sys_user* temp = user_;
  user_ = NULL;
  return temp;
}
void req_add_sys_user::set_allocated_user(::manager::sys_user* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.req_add_sys_user.user)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_del_sys_user::kRequestidFieldNumber;
const int req_del_sys_user::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_del_sys_user::req_del_sys_user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_del_sys_user)
}
req_del_sys_user::req_del_sys_user(const req_del_sys_user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_del_sys_user)
}

void req_del_sys_user::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_del_sys_user::~req_del_sys_user() {
  // @@protoc_insertion_point(destructor:manager.req_del_sys_user)
  SharedDtor();
}

void req_del_sys_user::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_del_sys_user::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_del_sys_user::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_del_sys_user& req_del_sys_user::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_del_sys_user* req_del_sys_user::New(::google::protobuf::Arena* arena) const {
  req_del_sys_user* n = new req_del_sys_user;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_del_sys_user::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_del_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_del_sys_user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_del_sys_user)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_del_sys_user.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_del_sys_user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_del_sys_user)
  return false;
#undef DO_
}

void req_del_sys_user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_del_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_sys_user.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_del_sys_user)
}

::google::protobuf::uint8* req_del_sys_user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_del_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_sys_user.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_del_sys_user)
  return target;
}

size_t req_del_sys_user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_del_sys_user)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_del_sys_user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_del_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  const req_del_sys_user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_del_sys_user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_del_sys_user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_del_sys_user)
    MergeFrom(*source);
  }
}

void req_del_sys_user::MergeFrom(const req_del_sys_user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_del_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_del_sys_user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_del_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_del_sys_user::CopyFrom(const req_del_sys_user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_del_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_del_sys_user::IsInitialized() const {
  return true;
}

void req_del_sys_user::Swap(req_del_sys_user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_del_sys_user::InternalSwap(req_del_sys_user* other) {
  using std::swap;
  userid_.Swap(&other->userid_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_del_sys_user::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_del_sys_user

// int32 requestid = 1;
void req_del_sys_user::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_del_sys_user::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_del_sys_user.requestid)
  return requestid_;
}
void req_del_sys_user::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_del_sys_user.requestid)
}

// string userid = 2;
void req_del_sys_user::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_del_sys_user::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_del_sys_user.userid)
  return userid_.GetNoArena();
}
void req_del_sys_user::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_del_sys_user.userid)
}
#if LANG_CXX11
void req_del_sys_user::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_del_sys_user.userid)
}
#endif
void req_del_sys_user::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_del_sys_user.userid)
}
void req_del_sys_user::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_del_sys_user.userid)
}
::std::string* req_del_sys_user::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_del_sys_user.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_del_sys_user::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_del_sys_user.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_del_sys_user::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_del_sys_user.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_edit_sys_user::kRequestidFieldNumber;
const int req_edit_sys_user::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_edit_sys_user::req_edit_sys_user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_edit_sys_user)
}
req_edit_sys_user::req_edit_sys_user(const req_edit_sys_user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::manager::sys_user(*from.user_);
  } else {
    user_ = NULL;
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_edit_sys_user)
}

void req_edit_sys_user::SharedCtor() {
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&user_)) + sizeof(requestid_));
  _cached_size_ = 0;
}

req_edit_sys_user::~req_edit_sys_user() {
  // @@protoc_insertion_point(destructor:manager.req_edit_sys_user)
  SharedDtor();
}

void req_edit_sys_user::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
}

void req_edit_sys_user::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_edit_sys_user::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_edit_sys_user& req_edit_sys_user::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_edit_sys_user* req_edit_sys_user::New(::google::protobuf::Arena* arena) const {
  req_edit_sys_user* n = new req_edit_sys_user;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_edit_sys_user::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_edit_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_edit_sys_user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_edit_sys_user)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.sys_user user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_edit_sys_user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_edit_sys_user)
  return false;
#undef DO_
}

void req_edit_sys_user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_edit_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.sys_user user = 2;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_edit_sys_user)
}

::google::protobuf::uint8* req_edit_sys_user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_edit_sys_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.sys_user user = 2;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->user_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_edit_sys_user)
  return target;
}

size_t req_edit_sys_user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_edit_sys_user)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.sys_user user = 2;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_edit_sys_user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_edit_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  const req_edit_sys_user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_edit_sys_user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_edit_sys_user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_edit_sys_user)
    MergeFrom(*source);
  }
}

void req_edit_sys_user::MergeFrom(const req_edit_sys_user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_edit_sys_user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    mutable_user()->::manager::sys_user::MergeFrom(from.user());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_edit_sys_user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_edit_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_edit_sys_user::CopyFrom(const req_edit_sys_user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_edit_sys_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_edit_sys_user::IsInitialized() const {
  return true;
}

void req_edit_sys_user::Swap(req_edit_sys_user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_edit_sys_user::InternalSwap(req_edit_sys_user* other) {
  using std::swap;
  swap(user_, other->user_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_edit_sys_user::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_edit_sys_user

// int32 requestid = 1;
void req_edit_sys_user::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_edit_sys_user::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_edit_sys_user.requestid)
  return requestid_;
}
void req_edit_sys_user::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_edit_sys_user.requestid)
}

// .manager.sys_user user = 2;
bool req_edit_sys_user::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
void req_edit_sys_user::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
const ::manager::sys_user& req_edit_sys_user::user() const {
  const ::manager::sys_user* p = user_;
  // @@protoc_insertion_point(field_get:manager.req_edit_sys_user.user)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::sys_user*>(
      &::manager::_sys_user_default_instance_);
}
::manager::sys_user* req_edit_sys_user::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::manager::sys_user;
  }
  // @@protoc_insertion_point(field_mutable:manager.req_edit_sys_user.user)
  return user_;
}
::manager::sys_user* req_edit_sys_user::release_user() {
  // @@protoc_insertion_point(field_release:manager.req_edit_sys_user.user)
  
  ::manager::sys_user* temp = user_;
  user_ = NULL;
  return temp;
}
void req_edit_sys_user::set_allocated_user(::manager::sys_user* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.req_edit_sys_user.user)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sys_investor::kInvestorFieldNumber;
const int sys_investor::kNameFieldNumber;
const int sys_investor::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sys_investor::sys_investor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.sys_investor)
}
sys_investor::sys_investor(const sys_investor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  investor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor().size() > 0) {
    investor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:manager.sys_investor)
}

void sys_investor::SharedCtor() {
  investor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  _cached_size_ = 0;
}

sys_investor::~sys_investor() {
  // @@protoc_insertion_point(destructor:manager.sys_investor)
  SharedDtor();
}

void sys_investor::SharedDtor() {
  investor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void sys_investor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sys_investor::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const sys_investor& sys_investor::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

sys_investor* sys_investor::New(::google::protobuf::Arena* arena) const {
  sys_investor* n = new sys_investor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void sys_investor::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.sys_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  _internal_metadata_.Clear();
}

bool sys_investor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.sys_investor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string investor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor().data(), static_cast<int>(this->investor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_investor.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.sys_investor.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.sys_investor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.sys_investor)
  return false;
#undef DO_
}

void sys_investor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.sys_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string investor = 1;
  if (this->investor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor().data(), static_cast<int>(this->investor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_investor.investor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->investor(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_investor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.sys_investor)
}

::google::protobuf::uint8* sys_investor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.sys_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string investor = 1;
  if (this->investor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor().data(), static_cast<int>(this->investor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_investor.investor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->investor(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.sys_investor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.sys_investor)
  return target;
}

size_t sys_investor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.sys_investor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string investor = 1;
  if (this->investor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sys_investor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.sys_investor)
  GOOGLE_DCHECK_NE(&from, this);
  const sys_investor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sys_investor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.sys_investor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.sys_investor)
    MergeFrom(*source);
  }
}

void sys_investor::MergeFrom(const sys_investor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.sys_investor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.investor().size() > 0) {

    investor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void sys_investor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.sys_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sys_investor::CopyFrom(const sys_investor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.sys_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sys_investor::IsInitialized() const {
  return true;
}

void sys_investor::Swap(sys_investor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sys_investor::InternalSwap(sys_investor* other) {
  using std::swap;
  investor_.Swap(&other->investor_);
  name_.Swap(&other->name_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata sys_investor::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// sys_investor

// string investor = 1;
void sys_investor::clear_investor() {
  investor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_investor::investor() const {
  // @@protoc_insertion_point(field_get:manager.sys_investor.investor)
  return investor_.GetNoArena();
}
void sys_investor::set_investor(const ::std::string& value) {
  
  investor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_investor.investor)
}
#if LANG_CXX11
void sys_investor::set_investor(::std::string&& value) {
  
  investor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_investor.investor)
}
#endif
void sys_investor::set_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  investor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_investor.investor)
}
void sys_investor::set_investor(const char* value, size_t size) {
  
  investor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_investor.investor)
}
::std::string* sys_investor::mutable_investor() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_investor.investor)
  return investor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_investor::release_investor() {
  // @@protoc_insertion_point(field_release:manager.sys_investor.investor)
  
  return investor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_investor::set_allocated_investor(::std::string* investor) {
  if (investor != NULL) {
    
  } else {
    
  }
  investor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investor);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_investor.investor)
}

// string name = 2;
void sys_investor::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& sys_investor::name() const {
  // @@protoc_insertion_point(field_get:manager.sys_investor.name)
  return name_.GetNoArena();
}
void sys_investor::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.sys_investor.name)
}
#if LANG_CXX11
void sys_investor::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.sys_investor.name)
}
#endif
void sys_investor::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.sys_investor.name)
}
void sys_investor::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.sys_investor.name)
}
::std::string* sys_investor::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:manager.sys_investor.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sys_investor::release_name() {
  // @@protoc_insertion_point(field_release:manager.sys_investor.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sys_investor::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:manager.sys_investor.name)
}

// int32 state = 3;
void sys_investor::clear_state() {
  state_ = 0;
}
::google::protobuf::int32 sys_investor::state() const {
  // @@protoc_insertion_point(field_get:manager.sys_investor.state)
  return state_;
}
void sys_investor::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:manager.sys_investor.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_risk_investors::kRequestidFieldNumber;
const int req_risk_investors::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_risk_investors::req_risk_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_risk_investors)
}
req_risk_investors::req_risk_investors(const req_risk_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_risk_investors)
}

void req_risk_investors::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_risk_investors::~req_risk_investors() {
  // @@protoc_insertion_point(destructor:manager.req_risk_investors)
  SharedDtor();
}

void req_risk_investors::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_risk_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_risk_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_risk_investors& req_risk_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_risk_investors* req_risk_investors::New(::google::protobuf::Arena* arena) const {
  req_risk_investors* n = new req_risk_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_risk_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_risk_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_risk_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_risk_investors.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_risk_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_risk_investors)
  return false;
#undef DO_
}

void req_risk_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_risk_investors.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_risk_investors)
}

::google::protobuf::uint8* req_risk_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_risk_investors.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_risk_investors)
  return target;
}

size_t req_risk_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_risk_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_risk_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_risk_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const req_risk_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_risk_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_risk_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_risk_investors)
    MergeFrom(*source);
  }
}

void req_risk_investors::MergeFrom(const req_risk_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_risk_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_risk_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_risk_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_risk_investors::CopyFrom(const req_risk_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_risk_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_risk_investors::IsInitialized() const {
  return true;
}

void req_risk_investors::Swap(req_risk_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_risk_investors::InternalSwap(req_risk_investors* other) {
  using std::swap;
  userid_.Swap(&other->userid_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_risk_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_risk_investors

// int32 requestid = 1;
void req_risk_investors::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_risk_investors::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_risk_investors.requestid)
  return requestid_;
}
void req_risk_investors::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_risk_investors.requestid)
}

// string userid = 2;
void req_risk_investors::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_risk_investors::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_risk_investors.userid)
  return userid_.GetNoArena();
}
void req_risk_investors::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_risk_investors.userid)
}
#if LANG_CXX11
void req_risk_investors::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_risk_investors.userid)
}
#endif
void req_risk_investors::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_risk_investors.userid)
}
void req_risk_investors::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_risk_investors.userid)
}
::std::string* req_risk_investors::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_risk_investors.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_risk_investors::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_risk_investors.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_risk_investors::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_risk_investors.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_risk_investors::kHeaderFieldNumber;
const int rsp_risk_investors::kUseridFieldNumber;
const int rsp_risk_investors::kInvestorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_risk_investors::rsp_risk_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_risk_investors)
}
rsp_risk_investors::rsp_risk_investors(const rsp_risk_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investors_(from.investors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_risk_investors)
}

void rsp_risk_investors::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_risk_investors::~rsp_risk_investors() {
  // @@protoc_insertion_point(destructor:manager.rsp_risk_investors)
  SharedDtor();
}

void rsp_risk_investors::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void rsp_risk_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_risk_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_risk_investors& rsp_risk_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_risk_investors* rsp_risk_investors::New(::google::protobuf::Arena* arena) const {
  rsp_risk_investors* n = new rsp_risk_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_risk_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investors_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_risk_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_risk_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.rsp_risk_investors.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.sys_investor investors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_investors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_risk_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_risk_investors)
  return false;
#undef DO_
}

void rsp_risk_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rsp_risk_investors.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // repeated .manager.sys_investor investors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->investors(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_risk_investors)
}

::google::protobuf::uint8* rsp_risk_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_risk_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rsp_risk_investors.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // repeated .manager.sys_investor investors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->investors(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_risk_investors)
  return target;
}

size_t rsp_risk_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_risk_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.sys_investor investors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->investors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->investors(static_cast<int>(i)));
    }
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_risk_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_risk_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_risk_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_risk_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_risk_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_risk_investors)
    MergeFrom(*source);
  }
}

void rsp_risk_investors::MergeFrom(const rsp_risk_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_risk_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investors_.MergeFrom(from.investors_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_risk_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_risk_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_risk_investors::CopyFrom(const rsp_risk_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_risk_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_risk_investors::IsInitialized() const {
  return true;
}

void rsp_risk_investors::Swap(rsp_risk_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_risk_investors::InternalSwap(rsp_risk_investors* other) {
  using std::swap;
  investors_.InternalSwap(&other->investors_);
  userid_.Swap(&other->userid_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_risk_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_risk_investors

// .manager.rsp_head_info header = 1;
bool rsp_risk_investors::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_risk_investors::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_risk_investors::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_risk_investors.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_risk_investors::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_risk_investors.header)
  return header_;
}
::manager::rsp_head_info* rsp_risk_investors::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_risk_investors.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_risk_investors::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_risk_investors.header)
}

// string userid = 2;
void rsp_risk_investors::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& rsp_risk_investors::userid() const {
  // @@protoc_insertion_point(field_get:manager.rsp_risk_investors.userid)
  return userid_.GetNoArena();
}
void rsp_risk_investors::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.rsp_risk_investors.userid)
}
#if LANG_CXX11
void rsp_risk_investors::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.rsp_risk_investors.userid)
}
#endif
void rsp_risk_investors::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.rsp_risk_investors.userid)
}
void rsp_risk_investors::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.rsp_risk_investors.userid)
}
::std::string* rsp_risk_investors::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.rsp_risk_investors.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* rsp_risk_investors::release_userid() {
  // @@protoc_insertion_point(field_release:manager.rsp_risk_investors.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void rsp_risk_investors::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_risk_investors.userid)
}

// repeated .manager.sys_investor investors = 3;
int rsp_risk_investors::investors_size() const {
  return investors_.size();
}
void rsp_risk_investors::clear_investors() {
  investors_.Clear();
}
const ::manager::sys_investor& rsp_risk_investors::investors(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_risk_investors.investors)
  return investors_.Get(index);
}
::manager::sys_investor* rsp_risk_investors::mutable_investors(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_risk_investors.investors)
  return investors_.Mutable(index);
}
::manager::sys_investor* rsp_risk_investors::add_investors() {
  // @@protoc_insertion_point(field_add:manager.rsp_risk_investors.investors)
  return investors_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::sys_investor >*
rsp_risk_investors::mutable_investors() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_risk_investors.investors)
  return &investors_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::sys_investor >&
rsp_risk_investors::investors() const {
  // @@protoc_insertion_point(field_list:manager.rsp_risk_investors.investors)
  return investors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_investors::kRequestidFieldNumber;
const int req_investors::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_investors::req_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_investors)
}
req_investors::req_investors(const req_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:manager.req_investors)
}

void req_investors::SharedCtor() {
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(state_));
  _cached_size_ = 0;
}

req_investors::~req_investors() {
  // @@protoc_insertion_point(destructor:manager.req_investors)
  SharedDtor();
}

void req_investors::SharedDtor() {
}

void req_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_investors& req_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_investors* req_investors::New(::google::protobuf::Arena* arena) const {
  req_investors* n = new req_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool req_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_investors)
  return false;
#undef DO_
}

void req_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // int32 state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_investors)
}

::google::protobuf::uint8* req_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // int32 state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_investors)
  return target;
}

size_t req_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  // int32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const req_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_investors)
    MergeFrom(*source);
  }
}

void req_investors::MergeFrom(const req_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void req_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_investors::CopyFrom(const req_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_investors::IsInitialized() const {
  return true;
}

void req_investors::Swap(req_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_investors::InternalSwap(req_investors* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_investors

// int32 requestid = 1;
void req_investors::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_investors::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_investors.requestid)
  return requestid_;
}
void req_investors::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_investors.requestid)
}

// int32 state = 2;
void req_investors::clear_state() {
  state_ = 0;
}
::google::protobuf::int32 req_investors::state() const {
  // @@protoc_insertion_point(field_get:manager.req_investors.state)
  return state_;
}
void req_investors::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:manager.req_investors.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_investors::kHeaderFieldNumber;
const int rsp_investors::kInvestorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_investors::rsp_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_investors)
}
rsp_investors::rsp_investors(const rsp_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investors_(from.investors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_investors)
}

void rsp_investors::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_investors::~rsp_investors() {
  // @@protoc_insertion_point(destructor:manager.rsp_investors)
  SharedDtor();
}

void rsp_investors::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void rsp_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_investors& rsp_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_investors* rsp_investors::New(::google::protobuf::Arena* arena) const {
  rsp_investors* n = new rsp_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investors_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.sys_investor investors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_investors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_investors)
  return false;
#undef DO_
}

void rsp_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .manager.sys_investor investors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->investors(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_investors)
}

::google::protobuf::uint8* rsp_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .manager.sys_investor investors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->investors(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_investors)
  return target;
}

size_t rsp_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.sys_investor investors = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->investors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->investors(static_cast<int>(i)));
    }
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_investors)
    MergeFrom(*source);
  }
}

void rsp_investors::MergeFrom(const rsp_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investors_.MergeFrom(from.investors_);
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_investors::CopyFrom(const rsp_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_investors::IsInitialized() const {
  return true;
}

void rsp_investors::Swap(rsp_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_investors::InternalSwap(rsp_investors* other) {
  using std::swap;
  investors_.InternalSwap(&other->investors_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_investors

// .manager.rsp_head_info header = 1;
bool rsp_investors::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_investors::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_investors::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_investors.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_investors::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_investors.header)
  return header_;
}
::manager::rsp_head_info* rsp_investors::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_investors.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_investors::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_investors.header)
}

// repeated .manager.sys_investor investors = 2;
int rsp_investors::investors_size() const {
  return investors_.size();
}
void rsp_investors::clear_investors() {
  investors_.Clear();
}
const ::manager::sys_investor& rsp_investors::investors(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_investors.investors)
  return investors_.Get(index);
}
::manager::sys_investor* rsp_investors::mutable_investors(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_investors.investors)
  return investors_.Mutable(index);
}
::manager::sys_investor* rsp_investors::add_investors() {
  // @@protoc_insertion_point(field_add:manager.rsp_investors.investors)
  return investors_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::sys_investor >*
rsp_investors::mutable_investors() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_investors.investors)
  return &investors_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::sys_investor >&
rsp_investors::investors() const {
  // @@protoc_insertion_point(field_list:manager.rsp_investors.investors)
  return investors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_add_investors::kRequestidFieldNumber;
const int req_add_investors::kUseridFieldNumber;
const int req_add_investors::kInvestorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_add_investors::req_add_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_add_investors)
}
req_add_investors::req_add_investors(const req_add_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investor_(from.investor_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_add_investors)
}

void req_add_investors::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_add_investors::~req_add_investors() {
  // @@protoc_insertion_point(destructor:manager.req_add_investors)
  SharedDtor();
}

void req_add_investors::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_add_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_add_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_add_investors& req_add_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_add_investors* req_add_investors::New(::google::protobuf::Arena* arena) const {
  req_add_investors* n = new req_add_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_add_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_add_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_add_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_add_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_add_investors.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string investor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor(this->investor_size() - 1).data(),
            static_cast<int>(this->investor(this->investor_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_add_investors.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_add_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_add_investors)
  return false;
#undef DO_
}

void req_add_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_add_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_add_investors.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_add_investors.investor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->investor(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_add_investors)
}

::google::protobuf::uint8* req_add_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_add_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_add_investors.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_add_investors.investor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->investor(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_add_investors)
  return target;
}

size_t req_add_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_add_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string investor = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->investor_size());
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->investor(i));
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_add_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_add_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const req_add_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_add_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_add_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_add_investors)
    MergeFrom(*source);
  }
}

void req_add_investors::MergeFrom(const req_add_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_add_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investor_.MergeFrom(from.investor_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_add_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_add_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_add_investors::CopyFrom(const req_add_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_add_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_add_investors::IsInitialized() const {
  return true;
}

void req_add_investors::Swap(req_add_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_add_investors::InternalSwap(req_add_investors* other) {
  using std::swap;
  investor_.InternalSwap(&other->investor_);
  userid_.Swap(&other->userid_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_add_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_add_investors

// int32 requestid = 1;
void req_add_investors::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_add_investors::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_add_investors.requestid)
  return requestid_;
}
void req_add_investors::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_add_investors.requestid)
}

// string userid = 2;
void req_add_investors::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_add_investors::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_add_investors.userid)
  return userid_.GetNoArena();
}
void req_add_investors::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_add_investors.userid)
}
#if LANG_CXX11
void req_add_investors::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_add_investors.userid)
}
#endif
void req_add_investors::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_add_investors.userid)
}
void req_add_investors::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_add_investors.userid)
}
::std::string* req_add_investors::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_add_investors.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_add_investors::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_add_investors.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_add_investors::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_add_investors.userid)
}

// repeated string investor = 3;
int req_add_investors::investor_size() const {
  return investor_.size();
}
void req_add_investors::clear_investor() {
  investor_.Clear();
}
const ::std::string& req_add_investors::investor(int index) const {
  // @@protoc_insertion_point(field_get:manager.req_add_investors.investor)
  return investor_.Get(index);
}
::std::string* req_add_investors::mutable_investor(int index) {
  // @@protoc_insertion_point(field_mutable:manager.req_add_investors.investor)
  return investor_.Mutable(index);
}
void req_add_investors::set_investor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:manager.req_add_investors.investor)
  investor_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void req_add_investors::set_investor(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:manager.req_add_investors.investor)
  investor_.Mutable(index)->assign(std::move(value));
}
#endif
void req_add_investors::set_investor(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:manager.req_add_investors.investor)
}
void req_add_investors::set_investor(int index, const char* value, size_t size) {
  investor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manager.req_add_investors.investor)
}
::std::string* req_add_investors::add_investor() {
  // @@protoc_insertion_point(field_add_mutable:manager.req_add_investors.investor)
  return investor_.Add();
}
void req_add_investors::add_investor(const ::std::string& value) {
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:manager.req_add_investors.investor)
}
#if LANG_CXX11
void req_add_investors::add_investor(::std::string&& value) {
  investor_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:manager.req_add_investors.investor)
}
#endif
void req_add_investors::add_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:manager.req_add_investors.investor)
}
void req_add_investors::add_investor(const char* value, size_t size) {
  investor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:manager.req_add_investors.investor)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
req_add_investors::investor() const {
  // @@protoc_insertion_point(field_list:manager.req_add_investors.investor)
  return investor_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
req_add_investors::mutable_investor() {
  // @@protoc_insertion_point(field_mutable_list:manager.req_add_investors.investor)
  return &investor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_del_investors::kRequestidFieldNumber;
const int req_del_investors::kUseridFieldNumber;
const int req_del_investors::kInvestorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_del_investors::req_del_investors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_del_investors)
}
req_del_investors::req_del_investors(const req_del_investors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investor_(from.investor_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_del_investors)
}

void req_del_investors::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _cached_size_ = 0;
}

req_del_investors::~req_del_investors() {
  // @@protoc_insertion_point(destructor:manager.req_del_investors)
  SharedDtor();
}

void req_del_investors::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void req_del_investors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_del_investors::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_del_investors& req_del_investors::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_del_investors* req_del_investors::New(::google::protobuf::Arena* arena) const {
  req_del_investors* n = new req_del_investors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_del_investors::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_del_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_del_investors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_del_investors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_del_investors.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string investor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor(this->investor_size() - 1).data(),
            static_cast<int>(this->investor(this->investor_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_del_investors.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_del_investors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_del_investors)
  return false;
#undef DO_
}

void req_del_investors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_del_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_investors.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_investors.investor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->investor(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_del_investors)
}

::google::protobuf::uint8* req_del_investors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_del_investors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_investors.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_del_investors.investor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->investor(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_del_investors)
  return target;
}

size_t req_del_investors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_del_investors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string investor = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->investor_size());
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->investor(i));
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_del_investors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_del_investors)
  GOOGLE_DCHECK_NE(&from, this);
  const req_del_investors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_del_investors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_del_investors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_del_investors)
    MergeFrom(*source);
  }
}

void req_del_investors::MergeFrom(const req_del_investors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_del_investors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investor_.MergeFrom(from.investor_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_del_investors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_del_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_del_investors::CopyFrom(const req_del_investors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_del_investors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_del_investors::IsInitialized() const {
  return true;
}

void req_del_investors::Swap(req_del_investors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_del_investors::InternalSwap(req_del_investors* other) {
  using std::swap;
  investor_.InternalSwap(&other->investor_);
  userid_.Swap(&other->userid_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_del_investors::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_del_investors

// int32 requestid = 1;
void req_del_investors::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_del_investors::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_del_investors.requestid)
  return requestid_;
}
void req_del_investors::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_del_investors.requestid)
}

// string userid = 2;
void req_del_investors::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& req_del_investors::userid() const {
  // @@protoc_insertion_point(field_get:manager.req_del_investors.userid)
  return userid_.GetNoArena();
}
void req_del_investors::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.req_del_investors.userid)
}
#if LANG_CXX11
void req_del_investors::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.req_del_investors.userid)
}
#endif
void req_del_investors::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.req_del_investors.userid)
}
void req_del_investors::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.req_del_investors.userid)
}
::std::string* req_del_investors::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.req_del_investors.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* req_del_investors::release_userid() {
  // @@protoc_insertion_point(field_release:manager.req_del_investors.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void req_del_investors::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.req_del_investors.userid)
}

// repeated string investor = 3;
int req_del_investors::investor_size() const {
  return investor_.size();
}
void req_del_investors::clear_investor() {
  investor_.Clear();
}
const ::std::string& req_del_investors::investor(int index) const {
  // @@protoc_insertion_point(field_get:manager.req_del_investors.investor)
  return investor_.Get(index);
}
::std::string* req_del_investors::mutable_investor(int index) {
  // @@protoc_insertion_point(field_mutable:manager.req_del_investors.investor)
  return investor_.Mutable(index);
}
void req_del_investors::set_investor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:manager.req_del_investors.investor)
  investor_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void req_del_investors::set_investor(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:manager.req_del_investors.investor)
  investor_.Mutable(index)->assign(std::move(value));
}
#endif
void req_del_investors::set_investor(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:manager.req_del_investors.investor)
}
void req_del_investors::set_investor(int index, const char* value, size_t size) {
  investor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manager.req_del_investors.investor)
}
::std::string* req_del_investors::add_investor() {
  // @@protoc_insertion_point(field_add_mutable:manager.req_del_investors.investor)
  return investor_.Add();
}
void req_del_investors::add_investor(const ::std::string& value) {
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:manager.req_del_investors.investor)
}
#if LANG_CXX11
void req_del_investors::add_investor(::std::string&& value) {
  investor_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:manager.req_del_investors.investor)
}
#endif
void req_del_investors::add_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:manager.req_del_investors.investor)
}
void req_del_investors::add_investor(const char* value, size_t size) {
  investor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:manager.req_del_investors.investor)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
req_del_investors::investor() const {
  // @@protoc_insertion_point(field_list:manager.req_del_investors.investor)
  return investor_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
req_del_investors::mutable_investor() {
  // @@protoc_insertion_point(field_mutable_list:manager.req_del_investors.investor)
  return &investor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_change_tree::kOperatoridFieldNumber;
const int rtn_change_tree::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_change_tree::rtn_change_tree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rtn_change_tree)
}
rtn_change_tree::rtn_change_tree(const rtn_change_tree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::sys_user(*from.info_);
  } else {
    info_ = NULL;
  }
  operatorid_ = from.operatorid_;
  // @@protoc_insertion_point(copy_constructor:manager.rtn_change_tree)
}

void rtn_change_tree::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operatorid_) -
      reinterpret_cast<char*>(&info_)) + sizeof(operatorid_));
  _cached_size_ = 0;
}

rtn_change_tree::~rtn_change_tree() {
  // @@protoc_insertion_point(destructor:manager.rtn_change_tree)
  SharedDtor();
}

void rtn_change_tree::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void rtn_change_tree::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_change_tree::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_change_tree& rtn_change_tree::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_change_tree* rtn_change_tree::New(::google::protobuf::Arena* arena) const {
  rtn_change_tree* n = new rtn_change_tree;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_change_tree::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rtn_change_tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  operatorid_ = 0;
  _internal_metadata_.Clear();
}

bool rtn_change_tree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rtn_change_tree)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 operatorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operatorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.sys_user info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rtn_change_tree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rtn_change_tree)
  return false;
#undef DO_
}

void rtn_change_tree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rtn_change_tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operatorid(), output);
  }

  // .manager.sys_user info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rtn_change_tree)
}

::google::protobuf::uint8* rtn_change_tree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rtn_change_tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operatorid(), target);
  }

  // .manager.sys_user info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rtn_change_tree)
  return target;
}

size_t rtn_change_tree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rtn_change_tree)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.sys_user info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->operatorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_change_tree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rtn_change_tree)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_change_tree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_change_tree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rtn_change_tree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rtn_change_tree)
    MergeFrom(*source);
  }
}

void rtn_change_tree::MergeFrom(const rtn_change_tree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rtn_change_tree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::sys_user::MergeFrom(from.info());
  }
  if (from.operatorid() != 0) {
    set_operatorid(from.operatorid());
  }
}

void rtn_change_tree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rtn_change_tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_change_tree::CopyFrom(const rtn_change_tree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rtn_change_tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_change_tree::IsInitialized() const {
  return true;
}

void rtn_change_tree::Swap(rtn_change_tree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_change_tree::InternalSwap(rtn_change_tree* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(operatorid_, other->operatorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_change_tree::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_change_tree

// int32 operatorid = 1;
void rtn_change_tree::clear_operatorid() {
  operatorid_ = 0;
}
::google::protobuf::int32 rtn_change_tree::operatorid() const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_tree.operatorid)
  return operatorid_;
}
void rtn_change_tree::set_operatorid(::google::protobuf::int32 value) {
  
  operatorid_ = value;
  // @@protoc_insertion_point(field_set:manager.rtn_change_tree.operatorid)
}

// .manager.sys_user info = 2;
bool rtn_change_tree::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void rtn_change_tree::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::sys_user& rtn_change_tree::info() const {
  const ::manager::sys_user* p = info_;
  // @@protoc_insertion_point(field_get:manager.rtn_change_tree.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::sys_user*>(
      &::manager::_sys_user_default_instance_);
}
::manager::sys_user* rtn_change_tree::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::sys_user;
  }
  // @@protoc_insertion_point(field_mutable:manager.rtn_change_tree.info)
  return info_;
}
::manager::sys_user* rtn_change_tree::release_info() {
  // @@protoc_insertion_point(field_release:manager.rtn_change_tree.info)
  
  ::manager::sys_user* temp = info_;
  info_ = NULL;
  return temp;
}
void rtn_change_tree::set_allocated_info(::manager::sys_user* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rtn_change_tree.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_change_risker_investor::kOperatoridFieldNumber;
const int rtn_change_risker_investor::kUseridFieldNumber;
const int rtn_change_risker_investor::kInvestorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_change_risker_investor::rtn_change_risker_investor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rtn_change_risker_investor)
}
rtn_change_risker_investor::rtn_change_risker_investor(const rtn_change_risker_investor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investor_(from.investor_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  operatorid_ = from.operatorid_;
  // @@protoc_insertion_point(copy_constructor:manager.rtn_change_risker_investor)
}

void rtn_change_risker_investor::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operatorid_ = 0;
  _cached_size_ = 0;
}

rtn_change_risker_investor::~rtn_change_risker_investor() {
  // @@protoc_insertion_point(destructor:manager.rtn_change_risker_investor)
  SharedDtor();
}

void rtn_change_risker_investor::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void rtn_change_risker_investor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_change_risker_investor::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_change_risker_investor& rtn_change_risker_investor::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_change_risker_investor* rtn_change_risker_investor::New(::google::protobuf::Arena* arena) const {
  rtn_change_risker_investor* n = new rtn_change_risker_investor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_change_risker_investor::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rtn_change_risker_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operatorid_ = 0;
  _internal_metadata_.Clear();
}

bool rtn_change_risker_investor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rtn_change_risker_investor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 operatorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operatorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.rtn_change_risker_investor.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string investor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor(this->investor_size() - 1).data(),
            static_cast<int>(this->investor(this->investor_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.rtn_change_risker_investor.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rtn_change_risker_investor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rtn_change_risker_investor)
  return false;
#undef DO_
}

void rtn_change_risker_investor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rtn_change_risker_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operatorid(), output);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_risker_investor.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_risker_investor.investor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->investor(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rtn_change_risker_investor)
}

::google::protobuf::uint8* rtn_change_risker_investor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rtn_change_risker_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operatorid(), target);
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_risker_investor.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // repeated string investor = 3;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_risker_investor.investor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->investor(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rtn_change_risker_investor)
  return target;
}

size_t rtn_change_risker_investor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rtn_change_risker_investor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string investor = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->investor_size());
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->investor(i));
  }

  // string userid = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->operatorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_change_risker_investor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rtn_change_risker_investor)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_change_risker_investor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_change_risker_investor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rtn_change_risker_investor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rtn_change_risker_investor)
    MergeFrom(*source);
  }
}

void rtn_change_risker_investor::MergeFrom(const rtn_change_risker_investor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rtn_change_risker_investor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investor_.MergeFrom(from.investor_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.operatorid() != 0) {
    set_operatorid(from.operatorid());
  }
}

void rtn_change_risker_investor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rtn_change_risker_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_change_risker_investor::CopyFrom(const rtn_change_risker_investor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rtn_change_risker_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_change_risker_investor::IsInitialized() const {
  return true;
}

void rtn_change_risker_investor::Swap(rtn_change_risker_investor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_change_risker_investor::InternalSwap(rtn_change_risker_investor* other) {
  using std::swap;
  investor_.InternalSwap(&other->investor_);
  userid_.Swap(&other->userid_);
  swap(operatorid_, other->operatorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_change_risker_investor::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_change_risker_investor

// int32 operatorid = 1;
void rtn_change_risker_investor::clear_operatorid() {
  operatorid_ = 0;
}
::google::protobuf::int32 rtn_change_risker_investor::operatorid() const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_risker_investor.operatorid)
  return operatorid_;
}
void rtn_change_risker_investor::set_operatorid(::google::protobuf::int32 value) {
  
  operatorid_ = value;
  // @@protoc_insertion_point(field_set:manager.rtn_change_risker_investor.operatorid)
}

// string userid = 2;
void rtn_change_risker_investor::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& rtn_change_risker_investor::userid() const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_risker_investor.userid)
  return userid_.GetNoArena();
}
void rtn_change_risker_investor::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.rtn_change_risker_investor.userid)
}
#if LANG_CXX11
void rtn_change_risker_investor::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.rtn_change_risker_investor.userid)
}
#endif
void rtn_change_risker_investor::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.rtn_change_risker_investor.userid)
}
void rtn_change_risker_investor::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.rtn_change_risker_investor.userid)
}
::std::string* rtn_change_risker_investor::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:manager.rtn_change_risker_investor.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* rtn_change_risker_investor::release_userid() {
  // @@protoc_insertion_point(field_release:manager.rtn_change_risker_investor.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void rtn_change_risker_investor::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:manager.rtn_change_risker_investor.userid)
}

// repeated string investor = 3;
int rtn_change_risker_investor::investor_size() const {
  return investor_.size();
}
void rtn_change_risker_investor::clear_investor() {
  investor_.Clear();
}
const ::std::string& rtn_change_risker_investor::investor(int index) const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_risker_investor.investor)
  return investor_.Get(index);
}
::std::string* rtn_change_risker_investor::mutable_investor(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rtn_change_risker_investor.investor)
  return investor_.Mutable(index);
}
void rtn_change_risker_investor::set_investor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:manager.rtn_change_risker_investor.investor)
  investor_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void rtn_change_risker_investor::set_investor(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:manager.rtn_change_risker_investor.investor)
  investor_.Mutable(index)->assign(std::move(value));
}
#endif
void rtn_change_risker_investor::set_investor(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:manager.rtn_change_risker_investor.investor)
}
void rtn_change_risker_investor::set_investor(int index, const char* value, size_t size) {
  investor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manager.rtn_change_risker_investor.investor)
}
::std::string* rtn_change_risker_investor::add_investor() {
  // @@protoc_insertion_point(field_add_mutable:manager.rtn_change_risker_investor.investor)
  return investor_.Add();
}
void rtn_change_risker_investor::add_investor(const ::std::string& value) {
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:manager.rtn_change_risker_investor.investor)
}
#if LANG_CXX11
void rtn_change_risker_investor::add_investor(::std::string&& value) {
  investor_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:manager.rtn_change_risker_investor.investor)
}
#endif
void rtn_change_risker_investor::add_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:manager.rtn_change_risker_investor.investor)
}
void rtn_change_risker_investor::add_investor(const char* value, size_t size) {
  investor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:manager.rtn_change_risker_investor.investor)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
rtn_change_risker_investor::investor() const {
  // @@protoc_insertion_point(field_list:manager.rtn_change_risker_investor.investor)
  return investor_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
rtn_change_risker_investor::mutable_investor() {
  // @@protoc_insertion_point(field_mutable_list:manager.rtn_change_risker_investor.investor)
  return &investor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_change_investor::kOperatoridFieldNumber;
const int rtn_change_investor::kInvestorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_change_investor::rtn_change_investor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rtn_change_investor)
}
rtn_change_investor::rtn_change_investor(const rtn_change_investor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investor_(from.investor_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operatorid_ = from.operatorid_;
  // @@protoc_insertion_point(copy_constructor:manager.rtn_change_investor)
}

void rtn_change_investor::SharedCtor() {
  operatorid_ = 0;
  _cached_size_ = 0;
}

rtn_change_investor::~rtn_change_investor() {
  // @@protoc_insertion_point(destructor:manager.rtn_change_investor)
  SharedDtor();
}

void rtn_change_investor::SharedDtor() {
}

void rtn_change_investor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_change_investor::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_change_investor& rtn_change_investor::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_change_investor* rtn_change_investor::New(::google::protobuf::Arena* arena) const {
  rtn_change_investor* n = new rtn_change_investor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_change_investor::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rtn_change_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.Clear();
  operatorid_ = 0;
  _internal_metadata_.Clear();
}

bool rtn_change_investor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rtn_change_investor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 operatorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operatorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string investor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor(this->investor_size() - 1).data(),
            static_cast<int>(this->investor(this->investor_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.rtn_change_investor.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rtn_change_investor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rtn_change_investor)
  return false;
#undef DO_
}

void rtn_change_investor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rtn_change_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operatorid(), output);
  }

  // repeated string investor = 2;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_investor.investor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->investor(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rtn_change_investor)
}

::google::protobuf::uint8* rtn_change_investor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rtn_change_investor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operatorid(), target);
  }

  // repeated string investor = 2;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.rtn_change_investor.investor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->investor(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rtn_change_investor)
  return target;
}

size_t rtn_change_investor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rtn_change_investor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string investor = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->investor_size());
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->investor(i));
  }

  // int32 operatorid = 1;
  if (this->operatorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->operatorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_change_investor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rtn_change_investor)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_change_investor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_change_investor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rtn_change_investor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rtn_change_investor)
    MergeFrom(*source);
  }
}

void rtn_change_investor::MergeFrom(const rtn_change_investor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rtn_change_investor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investor_.MergeFrom(from.investor_);
  if (from.operatorid() != 0) {
    set_operatorid(from.operatorid());
  }
}

void rtn_change_investor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rtn_change_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_change_investor::CopyFrom(const rtn_change_investor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rtn_change_investor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_change_investor::IsInitialized() const {
  return true;
}

void rtn_change_investor::Swap(rtn_change_investor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_change_investor::InternalSwap(rtn_change_investor* other) {
  using std::swap;
  investor_.InternalSwap(&other->investor_);
  swap(operatorid_, other->operatorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_change_investor::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_change_investor

// int32 operatorid = 1;
void rtn_change_investor::clear_operatorid() {
  operatorid_ = 0;
}
::google::protobuf::int32 rtn_change_investor::operatorid() const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_investor.operatorid)
  return operatorid_;
}
void rtn_change_investor::set_operatorid(::google::protobuf::int32 value) {
  
  operatorid_ = value;
  // @@protoc_insertion_point(field_set:manager.rtn_change_investor.operatorid)
}

// repeated string investor = 2;
int rtn_change_investor::investor_size() const {
  return investor_.size();
}
void rtn_change_investor::clear_investor() {
  investor_.Clear();
}
const ::std::string& rtn_change_investor::investor(int index) const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_investor.investor)
  return investor_.Get(index);
}
::std::string* rtn_change_investor::mutable_investor(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rtn_change_investor.investor)
  return investor_.Mutable(index);
}
void rtn_change_investor::set_investor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:manager.rtn_change_investor.investor)
  investor_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void rtn_change_investor::set_investor(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:manager.rtn_change_investor.investor)
  investor_.Mutable(index)->assign(std::move(value));
}
#endif
void rtn_change_investor::set_investor(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:manager.rtn_change_investor.investor)
}
void rtn_change_investor::set_investor(int index, const char* value, size_t size) {
  investor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manager.rtn_change_investor.investor)
}
::std::string* rtn_change_investor::add_investor() {
  // @@protoc_insertion_point(field_add_mutable:manager.rtn_change_investor.investor)
  return investor_.Add();
}
void rtn_change_investor::add_investor(const ::std::string& value) {
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:manager.rtn_change_investor.investor)
}
#if LANG_CXX11
void rtn_change_investor::add_investor(::std::string&& value) {
  investor_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:manager.rtn_change_investor.investor)
}
#endif
void rtn_change_investor::add_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:manager.rtn_change_investor.investor)
}
void rtn_change_investor::add_investor(const char* value, size_t size) {
  investor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:manager.rtn_change_investor.investor)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
rtn_change_investor::investor() const {
  // @@protoc_insertion_point(field_list:manager.rtn_change_investor.investor)
  return investor_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
rtn_change_investor::mutable_investor() {
  // @@protoc_insertion_point(field_mutable_list:manager.rtn_change_investor.investor)
  return &investor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int insmrgnrate_info::kTradingdayFieldNumber;
const int insmrgnrate_info::kContractcodeFieldNumber;
const int insmrgnrate_info::kExchangecodeFieldNumber;
const int insmrgnrate_info::kDirectionFieldNumber;
const int insmrgnrate_info::kHedgeflagFieldNumber;
const int insmrgnrate_info::kMarginrateFieldNumber;
const int insmrgnrate_info::kSegmrgnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

insmrgnrate_info::insmrgnrate_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.insmrgnrate_info)
}
insmrgnrate_info::insmrgnrate_info(const insmrgnrate_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tradingday().size() > 0) {
    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  contractcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contractcode().size() > 0) {
    contractcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractcode_);
  }
  exchangecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchangecode().size() > 0) {
    exchangecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangecode_);
  }
  direction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.direction().size() > 0) {
    direction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.direction_);
  }
  hedgeflag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hedgeflag().size() > 0) {
    hedgeflag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hedgeflag_);
  }
  ::memcpy(&marginrate_, &from.marginrate_,
    static_cast<size_t>(reinterpret_cast<char*>(&segmrgn_) -
    reinterpret_cast<char*>(&marginrate_)) + sizeof(segmrgn_));
  // @@protoc_insertion_point(copy_constructor:manager.insmrgnrate_info)
}

void insmrgnrate_info::SharedCtor() {
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hedgeflag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&marginrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segmrgn_) -
      reinterpret_cast<char*>(&marginrate_)) + sizeof(segmrgn_));
  _cached_size_ = 0;
}

insmrgnrate_info::~insmrgnrate_info() {
  // @@protoc_insertion_point(destructor:manager.insmrgnrate_info)
  SharedDtor();
}

void insmrgnrate_info::SharedDtor() {
  tradingday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hedgeflag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void insmrgnrate_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* insmrgnrate_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const insmrgnrate_info& insmrgnrate_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

insmrgnrate_info* insmrgnrate_info::New(::google::protobuf::Arena* arena) const {
  insmrgnrate_info* n = new insmrgnrate_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void insmrgnrate_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.insmrgnrate_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hedgeflag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&marginrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segmrgn_) -
      reinterpret_cast<char*>(&marginrate_)) + sizeof(segmrgn_));
  _internal_metadata_.Clear();
}

bool insmrgnrate_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.insmrgnrate_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tradingday = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradingday().data(), static_cast<int>(this->tradingday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.insmrgnrate_info.tradingday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contractcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contractcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contractcode().data(), static_cast<int>(this->contractcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.insmrgnrate_info.contractcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchangecode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchangecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchangecode().data(), static_cast<int>(this->exchangecode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.insmrgnrate_info.exchangecode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string direction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_direction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->direction().data(), static_cast<int>(this->direction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.insmrgnrate_info.direction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hedgeflag = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hedgeflag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hedgeflag().data(), static_cast<int>(this->hedgeflag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.insmrgnrate_info.hedgeflag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double marginrate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &marginrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double segmrgn = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &segmrgn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.insmrgnrate_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.insmrgnrate_info)
  return false;
#undef DO_
}

void insmrgnrate_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.insmrgnrate_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), static_cast<int>(this->tradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.tradingday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tradingday(), output);
  }

  // string contractcode = 2;
  if (this->contractcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractcode().data(), static_cast<int>(this->contractcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.contractcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contractcode(), output);
  }

  // string exchangecode = 3;
  if (this->exchangecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangecode().data(), static_cast<int>(this->exchangecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.exchangecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->exchangecode(), output);
  }

  // string direction = 4;
  if (this->direction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->direction().data(), static_cast<int>(this->direction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.direction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->direction(), output);
  }

  // string hedgeflag = 5;
  if (this->hedgeflag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hedgeflag().data(), static_cast<int>(this->hedgeflag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.hedgeflag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->hedgeflag(), output);
  }

  // double marginrate = 6;
  if (this->marginrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->marginrate(), output);
  }

  // double segmrgn = 7;
  if (this->segmrgn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->segmrgn(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.insmrgnrate_info)
}

::google::protobuf::uint8* insmrgnrate_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.insmrgnrate_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), static_cast<int>(this->tradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.tradingday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tradingday(), target);
  }

  // string contractcode = 2;
  if (this->contractcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractcode().data(), static_cast<int>(this->contractcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.contractcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contractcode(), target);
  }

  // string exchangecode = 3;
  if (this->exchangecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangecode().data(), static_cast<int>(this->exchangecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.exchangecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->exchangecode(), target);
  }

  // string direction = 4;
  if (this->direction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->direction().data(), static_cast<int>(this->direction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.direction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->direction(), target);
  }

  // string hedgeflag = 5;
  if (this->hedgeflag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hedgeflag().data(), static_cast<int>(this->hedgeflag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.insmrgnrate_info.hedgeflag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->hedgeflag(), target);
  }

  // double marginrate = 6;
  if (this->marginrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->marginrate(), target);
  }

  // double segmrgn = 7;
  if (this->segmrgn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->segmrgn(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.insmrgnrate_info)
  return target;
}

size_t insmrgnrate_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.insmrgnrate_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradingday());
  }

  // string contractcode = 2;
  if (this->contractcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contractcode());
  }

  // string exchangecode = 3;
  if (this->exchangecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchangecode());
  }

  // string direction = 4;
  if (this->direction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->direction());
  }

  // string hedgeflag = 5;
  if (this->hedgeflag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hedgeflag());
  }

  // double marginrate = 6;
  if (this->marginrate() != 0) {
    total_size += 1 + 8;
  }

  // double segmrgn = 7;
  if (this->segmrgn() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void insmrgnrate_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.insmrgnrate_info)
  GOOGLE_DCHECK_NE(&from, this);
  const insmrgnrate_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const insmrgnrate_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.insmrgnrate_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.insmrgnrate_info)
    MergeFrom(*source);
  }
}

void insmrgnrate_info::MergeFrom(const insmrgnrate_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.insmrgnrate_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tradingday().size() > 0) {

    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  if (from.contractcode().size() > 0) {

    contractcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractcode_);
  }
  if (from.exchangecode().size() > 0) {

    exchangecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangecode_);
  }
  if (from.direction().size() > 0) {

    direction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.direction_);
  }
  if (from.hedgeflag().size() > 0) {

    hedgeflag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hedgeflag_);
  }
  if (from.marginrate() != 0) {
    set_marginrate(from.marginrate());
  }
  if (from.segmrgn() != 0) {
    set_segmrgn(from.segmrgn());
  }
}

void insmrgnrate_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.insmrgnrate_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void insmrgnrate_info::CopyFrom(const insmrgnrate_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.insmrgnrate_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool insmrgnrate_info::IsInitialized() const {
  return true;
}

void insmrgnrate_info::Swap(insmrgnrate_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void insmrgnrate_info::InternalSwap(insmrgnrate_info* other) {
  using std::swap;
  tradingday_.Swap(&other->tradingday_);
  contractcode_.Swap(&other->contractcode_);
  exchangecode_.Swap(&other->exchangecode_);
  direction_.Swap(&other->direction_);
  hedgeflag_.Swap(&other->hedgeflag_);
  swap(marginrate_, other->marginrate_);
  swap(segmrgn_, other->segmrgn_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata insmrgnrate_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// insmrgnrate_info

// string tradingday = 1;
void insmrgnrate_info::clear_tradingday() {
  tradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& insmrgnrate_info::tradingday() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.tradingday)
  return tradingday_.GetNoArena();
}
void insmrgnrate_info::set_tradingday(const ::std::string& value) {
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.tradingday)
}
#if LANG_CXX11
void insmrgnrate_info::set_tradingday(::std::string&& value) {
  
  tradingday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.insmrgnrate_info.tradingday)
}
#endif
void insmrgnrate_info::set_tradingday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.insmrgnrate_info.tradingday)
}
void insmrgnrate_info::set_tradingday(const char* value, size_t size) {
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.insmrgnrate_info.tradingday)
}
::std::string* insmrgnrate_info::mutable_tradingday() {
  
  // @@protoc_insertion_point(field_mutable:manager.insmrgnrate_info.tradingday)
  return tradingday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* insmrgnrate_info::release_tradingday() {
  // @@protoc_insertion_point(field_release:manager.insmrgnrate_info.tradingday)
  
  return tradingday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void insmrgnrate_info::set_allocated_tradingday(::std::string* tradingday) {
  if (tradingday != NULL) {
    
  } else {
    
  }
  tradingday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradingday);
  // @@protoc_insertion_point(field_set_allocated:manager.insmrgnrate_info.tradingday)
}

// string contractcode = 2;
void insmrgnrate_info::clear_contractcode() {
  contractcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& insmrgnrate_info::contractcode() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.contractcode)
  return contractcode_.GetNoArena();
}
void insmrgnrate_info::set_contractcode(const ::std::string& value) {
  
  contractcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.contractcode)
}
#if LANG_CXX11
void insmrgnrate_info::set_contractcode(::std::string&& value) {
  
  contractcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.insmrgnrate_info.contractcode)
}
#endif
void insmrgnrate_info::set_contractcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contractcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.insmrgnrate_info.contractcode)
}
void insmrgnrate_info::set_contractcode(const char* value, size_t size) {
  
  contractcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.insmrgnrate_info.contractcode)
}
::std::string* insmrgnrate_info::mutable_contractcode() {
  
  // @@protoc_insertion_point(field_mutable:manager.insmrgnrate_info.contractcode)
  return contractcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* insmrgnrate_info::release_contractcode() {
  // @@protoc_insertion_point(field_release:manager.insmrgnrate_info.contractcode)
  
  return contractcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void insmrgnrate_info::set_allocated_contractcode(::std::string* contractcode) {
  if (contractcode != NULL) {
    
  } else {
    
  }
  contractcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contractcode);
  // @@protoc_insertion_point(field_set_allocated:manager.insmrgnrate_info.contractcode)
}

// string exchangecode = 3;
void insmrgnrate_info::clear_exchangecode() {
  exchangecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& insmrgnrate_info::exchangecode() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.exchangecode)
  return exchangecode_.GetNoArena();
}
void insmrgnrate_info::set_exchangecode(const ::std::string& value) {
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.exchangecode)
}
#if LANG_CXX11
void insmrgnrate_info::set_exchangecode(::std::string&& value) {
  
  exchangecode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.insmrgnrate_info.exchangecode)
}
#endif
void insmrgnrate_info::set_exchangecode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.insmrgnrate_info.exchangecode)
}
void insmrgnrate_info::set_exchangecode(const char* value, size_t size) {
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.insmrgnrate_info.exchangecode)
}
::std::string* insmrgnrate_info::mutable_exchangecode() {
  
  // @@protoc_insertion_point(field_mutable:manager.insmrgnrate_info.exchangecode)
  return exchangecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* insmrgnrate_info::release_exchangecode() {
  // @@protoc_insertion_point(field_release:manager.insmrgnrate_info.exchangecode)
  
  return exchangecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void insmrgnrate_info::set_allocated_exchangecode(::std::string* exchangecode) {
  if (exchangecode != NULL) {
    
  } else {
    
  }
  exchangecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangecode);
  // @@protoc_insertion_point(field_set_allocated:manager.insmrgnrate_info.exchangecode)
}

// string direction = 4;
void insmrgnrate_info::clear_direction() {
  direction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& insmrgnrate_info::direction() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.direction)
  return direction_.GetNoArena();
}
void insmrgnrate_info::set_direction(const ::std::string& value) {
  
  direction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.direction)
}
#if LANG_CXX11
void insmrgnrate_info::set_direction(::std::string&& value) {
  
  direction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.insmrgnrate_info.direction)
}
#endif
void insmrgnrate_info::set_direction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  direction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.insmrgnrate_info.direction)
}
void insmrgnrate_info::set_direction(const char* value, size_t size) {
  
  direction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.insmrgnrate_info.direction)
}
::std::string* insmrgnrate_info::mutable_direction() {
  
  // @@protoc_insertion_point(field_mutable:manager.insmrgnrate_info.direction)
  return direction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* insmrgnrate_info::release_direction() {
  // @@protoc_insertion_point(field_release:manager.insmrgnrate_info.direction)
  
  return direction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void insmrgnrate_info::set_allocated_direction(::std::string* direction) {
  if (direction != NULL) {
    
  } else {
    
  }
  direction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), direction);
  // @@protoc_insertion_point(field_set_allocated:manager.insmrgnrate_info.direction)
}

// string hedgeflag = 5;
void insmrgnrate_info::clear_hedgeflag() {
  hedgeflag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& insmrgnrate_info::hedgeflag() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.hedgeflag)
  return hedgeflag_.GetNoArena();
}
void insmrgnrate_info::set_hedgeflag(const ::std::string& value) {
  
  hedgeflag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.hedgeflag)
}
#if LANG_CXX11
void insmrgnrate_info::set_hedgeflag(::std::string&& value) {
  
  hedgeflag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.insmrgnrate_info.hedgeflag)
}
#endif
void insmrgnrate_info::set_hedgeflag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hedgeflag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.insmrgnrate_info.hedgeflag)
}
void insmrgnrate_info::set_hedgeflag(const char* value, size_t size) {
  
  hedgeflag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.insmrgnrate_info.hedgeflag)
}
::std::string* insmrgnrate_info::mutable_hedgeflag() {
  
  // @@protoc_insertion_point(field_mutable:manager.insmrgnrate_info.hedgeflag)
  return hedgeflag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* insmrgnrate_info::release_hedgeflag() {
  // @@protoc_insertion_point(field_release:manager.insmrgnrate_info.hedgeflag)
  
  return hedgeflag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void insmrgnrate_info::set_allocated_hedgeflag(::std::string* hedgeflag) {
  if (hedgeflag != NULL) {
    
  } else {
    
  }
  hedgeflag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hedgeflag);
  // @@protoc_insertion_point(field_set_allocated:manager.insmrgnrate_info.hedgeflag)
}

// double marginrate = 6;
void insmrgnrate_info::clear_marginrate() {
  marginrate_ = 0;
}
double insmrgnrate_info::marginrate() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.marginrate)
  return marginrate_;
}
void insmrgnrate_info::set_marginrate(double value) {
  
  marginrate_ = value;
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.marginrate)
}

// double segmrgn = 7;
void insmrgnrate_info::clear_segmrgn() {
  segmrgn_ = 0;
}
double insmrgnrate_info::segmrgn() const {
  // @@protoc_insertion_point(field_get:manager.insmrgnrate_info.segmrgn)
  return segmrgn_;
}
void insmrgnrate_info::set_segmrgn(double value) {
  
  segmrgn_ = value;
  // @@protoc_insertion_point(field_set:manager.insmrgnrate_info.segmrgn)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_insmrgnrate::kRequestidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_insmrgnrate::req_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_insmrgnrate)
}
req_insmrgnrate::req_insmrgnrate(const req_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_insmrgnrate)
}

void req_insmrgnrate::SharedCtor() {
  requestid_ = 0;
  _cached_size_ = 0;
}

req_insmrgnrate::~req_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.req_insmrgnrate)
  SharedDtor();
}

void req_insmrgnrate::SharedDtor() {
}

void req_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_insmrgnrate& req_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_insmrgnrate* req_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  req_insmrgnrate* n = new req_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_insmrgnrate)
  return false;
#undef DO_
}

void req_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_insmrgnrate)
}

::google::protobuf::uint8* req_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_insmrgnrate)
  return target;
}

size_t req_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const req_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_insmrgnrate)
    MergeFrom(*source);
  }
}

void req_insmrgnrate::MergeFrom(const req_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_insmrgnrate::CopyFrom(const req_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_insmrgnrate::IsInitialized() const {
  return true;
}

void req_insmrgnrate::Swap(req_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_insmrgnrate::InternalSwap(req_insmrgnrate* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_insmrgnrate

// int32 requestid = 1;
void req_insmrgnrate::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_insmrgnrate::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_insmrgnrate.requestid)
  return requestid_;
}
void req_insmrgnrate::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_insmrgnrate.requestid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_insmrgnrate::kHeaderFieldNumber;
const int rsp_insmrgnrate::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_insmrgnrate::rsp_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_insmrgnrate)
}
rsp_insmrgnrate::rsp_insmrgnrate(const rsp_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_insmrgnrate)
}

void rsp_insmrgnrate::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_insmrgnrate::~rsp_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.rsp_insmrgnrate)
  SharedDtor();
}

void rsp_insmrgnrate::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void rsp_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_insmrgnrate& rsp_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_insmrgnrate* rsp_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  rsp_insmrgnrate* n = new rsp_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.insmrgnrate_info infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_insmrgnrate)
  return false;
#undef DO_
}

void rsp_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .manager.insmrgnrate_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->infos(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_insmrgnrate)
}

::google::protobuf::uint8* rsp_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .manager.insmrgnrate_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_insmrgnrate)
  return target;
}

size_t rsp_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.insmrgnrate_info infos = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infos(static_cast<int>(i)));
    }
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_insmrgnrate)
    MergeFrom(*source);
  }
}

void rsp_insmrgnrate::MergeFrom(const rsp_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_insmrgnrate::CopyFrom(const rsp_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_insmrgnrate::IsInitialized() const {
  return true;
}

void rsp_insmrgnrate::Swap(rsp_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_insmrgnrate::InternalSwap(rsp_insmrgnrate* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_insmrgnrate

// .manager.rsp_head_info header = 1;
bool rsp_insmrgnrate::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_insmrgnrate::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_insmrgnrate::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_insmrgnrate.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_insmrgnrate::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_insmrgnrate.header)
  return header_;
}
::manager::rsp_head_info* rsp_insmrgnrate::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_insmrgnrate.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_insmrgnrate::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_insmrgnrate.header)
}

// repeated .manager.insmrgnrate_info infos = 2;
int rsp_insmrgnrate::infos_size() const {
  return infos_.size();
}
void rsp_insmrgnrate::clear_infos() {
  infos_.Clear();
}
const ::manager::insmrgnrate_info& rsp_insmrgnrate::infos(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_insmrgnrate.infos)
  return infos_.Get(index);
}
::manager::insmrgnrate_info* rsp_insmrgnrate::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_insmrgnrate.infos)
  return infos_.Mutable(index);
}
::manager::insmrgnrate_info* rsp_insmrgnrate::add_infos() {
  // @@protoc_insertion_point(field_add:manager.rsp_insmrgnrate.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >*
rsp_insmrgnrate::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_insmrgnrate.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >&
rsp_insmrgnrate::infos() const {
  // @@protoc_insertion_point(field_list:manager.rsp_insmrgnrate.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_edit_insmrgnrate::kRequestidFieldNumber;
const int req_edit_insmrgnrate::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_edit_insmrgnrate::req_edit_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_edit_insmrgnrate)
}
req_edit_insmrgnrate::req_edit_insmrgnrate(const req_edit_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_edit_insmrgnrate)
}

void req_edit_insmrgnrate::SharedCtor() {
  requestid_ = 0;
  _cached_size_ = 0;
}

req_edit_insmrgnrate::~req_edit_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.req_edit_insmrgnrate)
  SharedDtor();
}

void req_edit_insmrgnrate::SharedDtor() {
}

void req_edit_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_edit_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_edit_insmrgnrate& req_edit_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_edit_insmrgnrate* req_edit_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  req_edit_insmrgnrate* n = new req_edit_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_edit_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_edit_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_edit_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_edit_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.insmrgnrate_info infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_edit_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_edit_insmrgnrate)
  return false;
#undef DO_
}

void req_edit_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_edit_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // repeated .manager.insmrgnrate_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->infos(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_edit_insmrgnrate)
}

::google::protobuf::uint8* req_edit_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_edit_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // repeated .manager.insmrgnrate_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_edit_insmrgnrate)
  return target;
}

size_t req_edit_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_edit_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.insmrgnrate_info infos = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infos(static_cast<int>(i)));
    }
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_edit_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_edit_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const req_edit_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_edit_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_edit_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_edit_insmrgnrate)
    MergeFrom(*source);
  }
}

void req_edit_insmrgnrate::MergeFrom(const req_edit_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_edit_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_edit_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_edit_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_edit_insmrgnrate::CopyFrom(const req_edit_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_edit_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_edit_insmrgnrate::IsInitialized() const {
  return true;
}

void req_edit_insmrgnrate::Swap(req_edit_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_edit_insmrgnrate::InternalSwap(req_edit_insmrgnrate* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_edit_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_edit_insmrgnrate

// int32 requestid = 1;
void req_edit_insmrgnrate::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_edit_insmrgnrate::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_edit_insmrgnrate.requestid)
  return requestid_;
}
void req_edit_insmrgnrate::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_edit_insmrgnrate.requestid)
}

// repeated .manager.insmrgnrate_info infos = 2;
int req_edit_insmrgnrate::infos_size() const {
  return infos_.size();
}
void req_edit_insmrgnrate::clear_infos() {
  infos_.Clear();
}
const ::manager::insmrgnrate_info& req_edit_insmrgnrate::infos(int index) const {
  // @@protoc_insertion_point(field_get:manager.req_edit_insmrgnrate.infos)
  return infos_.Get(index);
}
::manager::insmrgnrate_info* req_edit_insmrgnrate::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:manager.req_edit_insmrgnrate.infos)
  return infos_.Mutable(index);
}
::manager::insmrgnrate_info* req_edit_insmrgnrate::add_infos() {
  // @@protoc_insertion_point(field_add:manager.req_edit_insmrgnrate.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >*
req_edit_insmrgnrate::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:manager.req_edit_insmrgnrate.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >&
req_edit_insmrgnrate::infos() const {
  // @@protoc_insertion_point(field_list:manager.req_edit_insmrgnrate.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_change_insmrgnrate::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_change_insmrgnrate::rtn_change_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rtn_change_insmrgnrate)
}
rtn_change_insmrgnrate::rtn_change_insmrgnrate(const rtn_change_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:manager.rtn_change_insmrgnrate)
}

void rtn_change_insmrgnrate::SharedCtor() {
  _cached_size_ = 0;
}

rtn_change_insmrgnrate::~rtn_change_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.rtn_change_insmrgnrate)
  SharedDtor();
}

void rtn_change_insmrgnrate::SharedDtor() {
}

void rtn_change_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_change_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_change_insmrgnrate& rtn_change_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_change_insmrgnrate* rtn_change_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  rtn_change_insmrgnrate* n = new rtn_change_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_change_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rtn_change_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  _internal_metadata_.Clear();
}

bool rtn_change_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rtn_change_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .manager.insmrgnrate_info infos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rtn_change_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rtn_change_insmrgnrate)
  return false;
#undef DO_
}

void rtn_change_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rtn_change_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .manager.insmrgnrate_info infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rtn_change_insmrgnrate)
}

::google::protobuf::uint8* rtn_change_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rtn_change_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .manager.insmrgnrate_info infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rtn_change_insmrgnrate)
  return target;
}

size_t rtn_change_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rtn_change_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.insmrgnrate_info infos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_change_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rtn_change_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_change_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_change_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rtn_change_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rtn_change_insmrgnrate)
    MergeFrom(*source);
  }
}

void rtn_change_insmrgnrate::MergeFrom(const rtn_change_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rtn_change_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
}

void rtn_change_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rtn_change_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_change_insmrgnrate::CopyFrom(const rtn_change_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rtn_change_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_change_insmrgnrate::IsInitialized() const {
  return true;
}

void rtn_change_insmrgnrate::Swap(rtn_change_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_change_insmrgnrate::InternalSwap(rtn_change_insmrgnrate* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_change_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_change_insmrgnrate

// repeated .manager.insmrgnrate_info infos = 1;
int rtn_change_insmrgnrate::infos_size() const {
  return infos_.size();
}
void rtn_change_insmrgnrate::clear_infos() {
  infos_.Clear();
}
const ::manager::insmrgnrate_info& rtn_change_insmrgnrate::infos(int index) const {
  // @@protoc_insertion_point(field_get:manager.rtn_change_insmrgnrate.infos)
  return infos_.Get(index);
}
::manager::insmrgnrate_info* rtn_change_insmrgnrate::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rtn_change_insmrgnrate.infos)
  return infos_.Mutable(index);
}
::manager::insmrgnrate_info* rtn_change_insmrgnrate::add_infos() {
  // @@protoc_insertion_point(field_add:manager.rtn_change_insmrgnrate.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >*
rtn_change_insmrgnrate::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:manager.rtn_change_insmrgnrate.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::insmrgnrate_info >&
rtn_change_insmrgnrate::infos() const {
  // @@protoc_insertion_point(field_list:manager.rtn_change_insmrgnrate.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_add_insmrgnrate::kRequestidFieldNumber;
const int req_add_insmrgnrate::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_add_insmrgnrate::req_add_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_add_insmrgnrate)
}
req_add_insmrgnrate::req_add_insmrgnrate(const req_add_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::insmrgnrate_info(*from.info_);
  } else {
    info_ = NULL;
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_add_insmrgnrate)
}

void req_add_insmrgnrate::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&info_)) + sizeof(requestid_));
  _cached_size_ = 0;
}

req_add_insmrgnrate::~req_add_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.req_add_insmrgnrate)
  SharedDtor();
}

void req_add_insmrgnrate::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void req_add_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_add_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_add_insmrgnrate& req_add_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_add_insmrgnrate* req_add_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  req_add_insmrgnrate* n = new req_add_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_add_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_add_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_add_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_add_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.insmrgnrate_info info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_add_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_add_insmrgnrate)
  return false;
#undef DO_
}

void req_add_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_add_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.insmrgnrate_info info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_add_insmrgnrate)
}

::google::protobuf::uint8* req_add_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_add_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.insmrgnrate_info info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_add_insmrgnrate)
  return target;
}

size_t req_add_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_add_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.insmrgnrate_info info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_add_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_add_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const req_add_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_add_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_add_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_add_insmrgnrate)
    MergeFrom(*source);
  }
}

void req_add_insmrgnrate::MergeFrom(const req_add_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_add_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::insmrgnrate_info::MergeFrom(from.info());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_add_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_add_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_add_insmrgnrate::CopyFrom(const req_add_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_add_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_add_insmrgnrate::IsInitialized() const {
  return true;
}

void req_add_insmrgnrate::Swap(req_add_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_add_insmrgnrate::InternalSwap(req_add_insmrgnrate* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_add_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_add_insmrgnrate

// int32 requestid = 1;
void req_add_insmrgnrate::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_add_insmrgnrate::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_add_insmrgnrate.requestid)
  return requestid_;
}
void req_add_insmrgnrate::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_add_insmrgnrate.requestid)
}

// .manager.insmrgnrate_info info = 2;
bool req_add_insmrgnrate::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void req_add_insmrgnrate::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::insmrgnrate_info& req_add_insmrgnrate::info() const {
  const ::manager::insmrgnrate_info* p = info_;
  // @@protoc_insertion_point(field_get:manager.req_add_insmrgnrate.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::insmrgnrate_info*>(
      &::manager::_insmrgnrate_info_default_instance_);
}
::manager::insmrgnrate_info* req_add_insmrgnrate::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::insmrgnrate_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.req_add_insmrgnrate.info)
  return info_;
}
::manager::insmrgnrate_info* req_add_insmrgnrate::release_info() {
  // @@protoc_insertion_point(field_release:manager.req_add_insmrgnrate.info)
  
  ::manager::insmrgnrate_info* temp = info_;
  info_ = NULL;
  return temp;
}
void req_add_insmrgnrate::set_allocated_info(::manager::insmrgnrate_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.req_add_insmrgnrate.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_add_insmrgnrate::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_add_insmrgnrate::rtn_add_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rtn_add_insmrgnrate)
}
rtn_add_insmrgnrate::rtn_add_insmrgnrate(const rtn_add_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::insmrgnrate_info(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rtn_add_insmrgnrate)
}

void rtn_add_insmrgnrate::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

rtn_add_insmrgnrate::~rtn_add_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.rtn_add_insmrgnrate)
  SharedDtor();
}

void rtn_add_insmrgnrate::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void rtn_add_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_add_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_add_insmrgnrate& rtn_add_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_add_insmrgnrate* rtn_add_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  rtn_add_insmrgnrate* n = new rtn_add_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_add_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rtn_add_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool rtn_add_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rtn_add_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.insmrgnrate_info info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rtn_add_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rtn_add_insmrgnrate)
  return false;
#undef DO_
}

void rtn_add_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rtn_add_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.insmrgnrate_info info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rtn_add_insmrgnrate)
}

::google::protobuf::uint8* rtn_add_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rtn_add_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.insmrgnrate_info info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rtn_add_insmrgnrate)
  return target;
}

size_t rtn_add_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rtn_add_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.insmrgnrate_info info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_add_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rtn_add_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_add_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_add_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rtn_add_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rtn_add_insmrgnrate)
    MergeFrom(*source);
  }
}

void rtn_add_insmrgnrate::MergeFrom(const rtn_add_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rtn_add_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::insmrgnrate_info::MergeFrom(from.info());
  }
}

void rtn_add_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rtn_add_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_add_insmrgnrate::CopyFrom(const rtn_add_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rtn_add_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_add_insmrgnrate::IsInitialized() const {
  return true;
}

void rtn_add_insmrgnrate::Swap(rtn_add_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_add_insmrgnrate::InternalSwap(rtn_add_insmrgnrate* other) {
  using std::swap;
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_add_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_add_insmrgnrate

// .manager.insmrgnrate_info info = 1;
bool rtn_add_insmrgnrate::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void rtn_add_insmrgnrate::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::insmrgnrate_info& rtn_add_insmrgnrate::info() const {
  const ::manager::insmrgnrate_info* p = info_;
  // @@protoc_insertion_point(field_get:manager.rtn_add_insmrgnrate.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::insmrgnrate_info*>(
      &::manager::_insmrgnrate_info_default_instance_);
}
::manager::insmrgnrate_info* rtn_add_insmrgnrate::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::insmrgnrate_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rtn_add_insmrgnrate.info)
  return info_;
}
::manager::insmrgnrate_info* rtn_add_insmrgnrate::release_info() {
  // @@protoc_insertion_point(field_release:manager.rtn_add_insmrgnrate.info)
  
  ::manager::insmrgnrate_info* temp = info_;
  info_ = NULL;
  return temp;
}
void rtn_add_insmrgnrate::set_allocated_info(::manager::insmrgnrate_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rtn_add_insmrgnrate.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_del_insmrgnrate::kRequestidFieldNumber;
const int req_del_insmrgnrate::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_del_insmrgnrate::req_del_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_del_insmrgnrate)
}
req_del_insmrgnrate::req_del_insmrgnrate(const req_del_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::insmrgnrate_info(*from.info_);
  } else {
    info_ = NULL;
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_del_insmrgnrate)
}

void req_del_insmrgnrate::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&info_)) + sizeof(requestid_));
  _cached_size_ = 0;
}

req_del_insmrgnrate::~req_del_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.req_del_insmrgnrate)
  SharedDtor();
}

void req_del_insmrgnrate::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void req_del_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_del_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_del_insmrgnrate& req_del_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_del_insmrgnrate* req_del_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  req_del_insmrgnrate* n = new req_del_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_del_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_del_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_del_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_del_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.insmrgnrate_info info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_del_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_del_insmrgnrate)
  return false;
#undef DO_
}

void req_del_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_del_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.insmrgnrate_info info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_del_insmrgnrate)
}

::google::protobuf::uint8* req_del_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_del_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.insmrgnrate_info info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_del_insmrgnrate)
  return target;
}

size_t req_del_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_del_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.insmrgnrate_info info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_del_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_del_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const req_del_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_del_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_del_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_del_insmrgnrate)
    MergeFrom(*source);
  }
}

void req_del_insmrgnrate::MergeFrom(const req_del_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_del_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::insmrgnrate_info::MergeFrom(from.info());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_del_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_del_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_del_insmrgnrate::CopyFrom(const req_del_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_del_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_del_insmrgnrate::IsInitialized() const {
  return true;
}

void req_del_insmrgnrate::Swap(req_del_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_del_insmrgnrate::InternalSwap(req_del_insmrgnrate* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_del_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_del_insmrgnrate

// int32 requestid = 1;
void req_del_insmrgnrate::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_del_insmrgnrate::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_del_insmrgnrate.requestid)
  return requestid_;
}
void req_del_insmrgnrate::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_del_insmrgnrate.requestid)
}

// .manager.insmrgnrate_info info = 2;
bool req_del_insmrgnrate::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void req_del_insmrgnrate::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::insmrgnrate_info& req_del_insmrgnrate::info() const {
  const ::manager::insmrgnrate_info* p = info_;
  // @@protoc_insertion_point(field_get:manager.req_del_insmrgnrate.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::insmrgnrate_info*>(
      &::manager::_insmrgnrate_info_default_instance_);
}
::manager::insmrgnrate_info* req_del_insmrgnrate::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::insmrgnrate_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.req_del_insmrgnrate.info)
  return info_;
}
::manager::insmrgnrate_info* req_del_insmrgnrate::release_info() {
  // @@protoc_insertion_point(field_release:manager.req_del_insmrgnrate.info)
  
  ::manager::insmrgnrate_info* temp = info_;
  info_ = NULL;
  return temp;
}
void req_del_insmrgnrate::set_allocated_info(::manager::insmrgnrate_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.req_del_insmrgnrate.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rtn_del_insmrgnrate::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rtn_del_insmrgnrate::rtn_del_insmrgnrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rtn_del_insmrgnrate)
}
rtn_del_insmrgnrate::rtn_del_insmrgnrate(const rtn_del_insmrgnrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::insmrgnrate_info(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rtn_del_insmrgnrate)
}

void rtn_del_insmrgnrate::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

rtn_del_insmrgnrate::~rtn_del_insmrgnrate() {
  // @@protoc_insertion_point(destructor:manager.rtn_del_insmrgnrate)
  SharedDtor();
}

void rtn_del_insmrgnrate::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void rtn_del_insmrgnrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rtn_del_insmrgnrate::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rtn_del_insmrgnrate& rtn_del_insmrgnrate::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rtn_del_insmrgnrate* rtn_del_insmrgnrate::New(::google::protobuf::Arena* arena) const {
  rtn_del_insmrgnrate* n = new rtn_del_insmrgnrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rtn_del_insmrgnrate::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rtn_del_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool rtn_del_insmrgnrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rtn_del_insmrgnrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.insmrgnrate_info info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rtn_del_insmrgnrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rtn_del_insmrgnrate)
  return false;
#undef DO_
}

void rtn_del_insmrgnrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rtn_del_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.insmrgnrate_info info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rtn_del_insmrgnrate)
}

::google::protobuf::uint8* rtn_del_insmrgnrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rtn_del_insmrgnrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.insmrgnrate_info info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rtn_del_insmrgnrate)
  return target;
}

size_t rtn_del_insmrgnrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rtn_del_insmrgnrate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.insmrgnrate_info info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rtn_del_insmrgnrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rtn_del_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  const rtn_del_insmrgnrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rtn_del_insmrgnrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rtn_del_insmrgnrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rtn_del_insmrgnrate)
    MergeFrom(*source);
  }
}

void rtn_del_insmrgnrate::MergeFrom(const rtn_del_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rtn_del_insmrgnrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::insmrgnrate_info::MergeFrom(from.info());
  }
}

void rtn_del_insmrgnrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rtn_del_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rtn_del_insmrgnrate::CopyFrom(const rtn_del_insmrgnrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rtn_del_insmrgnrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rtn_del_insmrgnrate::IsInitialized() const {
  return true;
}

void rtn_del_insmrgnrate::Swap(rtn_del_insmrgnrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rtn_del_insmrgnrate::InternalSwap(rtn_del_insmrgnrate* other) {
  using std::swap;
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rtn_del_insmrgnrate::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rtn_del_insmrgnrate

// .manager.insmrgnrate_info info = 1;
bool rtn_del_insmrgnrate::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void rtn_del_insmrgnrate::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::insmrgnrate_info& rtn_del_insmrgnrate::info() const {
  const ::manager::insmrgnrate_info* p = info_;
  // @@protoc_insertion_point(field_get:manager.rtn_del_insmrgnrate.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::insmrgnrate_info*>(
      &::manager::_insmrgnrate_info_default_instance_);
}
::manager::insmrgnrate_info* rtn_del_insmrgnrate::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::insmrgnrate_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rtn_del_insmrgnrate.info)
  return info_;
}
::manager::insmrgnrate_info* rtn_del_insmrgnrate::release_info() {
  // @@protoc_insertion_point(field_release:manager.rtn_del_insmrgnrate.info)
  
  ::manager::insmrgnrate_info* temp = info_;
  info_ = NULL;
  return temp;
}
void rtn_del_insmrgnrate::set_allocated_info(::manager::insmrgnrate_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rtn_del_insmrgnrate.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_option_argv::kRequestidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_option_argv::req_option_argv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_option_argv)
}
req_option_argv::req_option_argv(const req_option_argv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_option_argv)
}

void req_option_argv::SharedCtor() {
  requestid_ = 0;
  _cached_size_ = 0;
}

req_option_argv::~req_option_argv() {
  // @@protoc_insertion_point(destructor:manager.req_option_argv)
  SharedDtor();
}

void req_option_argv::SharedDtor() {
}

void req_option_argv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_option_argv::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_option_argv& req_option_argv::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_option_argv* req_option_argv::New(::google::protobuf::Arena* arena) const {
  req_option_argv* n = new req_option_argv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_option_argv::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_option_argv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_option_argv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_option_argv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_option_argv)
  return false;
#undef DO_
}

void req_option_argv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_option_argv)
}

::google::protobuf::uint8* req_option_argv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_option_argv)
  return target;
}

size_t req_option_argv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_option_argv)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_option_argv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  const req_option_argv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_option_argv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_option_argv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_option_argv)
    MergeFrom(*source);
  }
}

void req_option_argv::MergeFrom(const req_option_argv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_option_argv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_option_argv::CopyFrom(const req_option_argv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_option_argv::IsInitialized() const {
  return true;
}

void req_option_argv::Swap(req_option_argv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_option_argv::InternalSwap(req_option_argv* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_option_argv::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_option_argv

// int32 requestid = 1;
void req_option_argv::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_option_argv::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_option_argv.requestid)
  return requestid_;
}
void req_option_argv::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_option_argv.requestid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int option_argv::kPriceTypeFieldNumber;
const int option_argv::kVolFieldNumber;
const int option_argv::kRateFieldNumber;
const int option_argv::kStepFieldNumber;
const int option_argv::kIterationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

option_argv::option_argv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.option_argv)
}
option_argv::option_argv(const option_argv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vol_, &from.vol_,
    static_cast<size_t>(reinterpret_cast<char*>(&iterations_) -
    reinterpret_cast<char*>(&vol_)) + sizeof(iterations_));
  // @@protoc_insertion_point(copy_constructor:manager.option_argv)
}

void option_argv::SharedCtor() {
  ::memset(&vol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iterations_) -
      reinterpret_cast<char*>(&vol_)) + sizeof(iterations_));
  _cached_size_ = 0;
}

option_argv::~option_argv() {
  // @@protoc_insertion_point(destructor:manager.option_argv)
  SharedDtor();
}

void option_argv::SharedDtor() {
}

void option_argv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* option_argv::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const option_argv& option_argv::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

option_argv* option_argv::New(::google::protobuf::Arena* arena) const {
  option_argv* n = new option_argv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void option_argv::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iterations_) -
      reinterpret_cast<char*>(&vol_)) + sizeof(iterations_));
  _internal_metadata_.Clear();
}

bool option_argv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.option_argv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 price_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 step = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iterations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iterations_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.option_argv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.option_argv)
  return false;
#undef DO_
}

void option_argv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 price_type = 1;
  if (this->price_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->price_type(), output);
  }

  // double vol = 2;
  if (this->vol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->vol(), output);
  }

  // double rate = 3;
  if (this->rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->rate(), output);
  }

  // int32 step = 4;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->step(), output);
  }

  // int32 iterations = 5;
  if (this->iterations() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->iterations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.option_argv)
}

::google::protobuf::uint8* option_argv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 price_type = 1;
  if (this->price_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->price_type(), target);
  }

  // double vol = 2;
  if (this->vol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->vol(), target);
  }

  // double rate = 3;
  if (this->rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->rate(), target);
  }

  // int32 step = 4;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->step(), target);
  }

  // int32 iterations = 5;
  if (this->iterations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->iterations(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.option_argv)
  return target;
}

size_t option_argv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.option_argv)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double vol = 2;
  if (this->vol() != 0) {
    total_size += 1 + 8;
  }

  // int32 price_type = 1;
  if (this->price_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price_type());
  }

  // int32 step = 4;
  if (this->step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->step());
  }

  // double rate = 3;
  if (this->rate() != 0) {
    total_size += 1 + 8;
  }

  // int32 iterations = 5;
  if (this->iterations() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iterations());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void option_argv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  const option_argv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const option_argv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.option_argv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.option_argv)
    MergeFrom(*source);
  }
}

void option_argv::MergeFrom(const option_argv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vol() != 0) {
    set_vol(from.vol());
  }
  if (from.price_type() != 0) {
    set_price_type(from.price_type());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
  if (from.rate() != 0) {
    set_rate(from.rate());
  }
  if (from.iterations() != 0) {
    set_iterations(from.iterations());
  }
}

void option_argv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void option_argv::CopyFrom(const option_argv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool option_argv::IsInitialized() const {
  return true;
}

void option_argv::Swap(option_argv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void option_argv::InternalSwap(option_argv* other) {
  using std::swap;
  swap(vol_, other->vol_);
  swap(price_type_, other->price_type_);
  swap(step_, other->step_);
  swap(rate_, other->rate_);
  swap(iterations_, other->iterations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata option_argv::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// option_argv

// int32 price_type = 1;
void option_argv::clear_price_type() {
  price_type_ = 0;
}
::google::protobuf::int32 option_argv::price_type() const {
  // @@protoc_insertion_point(field_get:manager.option_argv.price_type)
  return price_type_;
}
void option_argv::set_price_type(::google::protobuf::int32 value) {
  
  price_type_ = value;
  // @@protoc_insertion_point(field_set:manager.option_argv.price_type)
}

// double vol = 2;
void option_argv::clear_vol() {
  vol_ = 0;
}
double option_argv::vol() const {
  // @@protoc_insertion_point(field_get:manager.option_argv.vol)
  return vol_;
}
void option_argv::set_vol(double value) {
  
  vol_ = value;
  // @@protoc_insertion_point(field_set:manager.option_argv.vol)
}

// double rate = 3;
void option_argv::clear_rate() {
  rate_ = 0;
}
double option_argv::rate() const {
  // @@protoc_insertion_point(field_get:manager.option_argv.rate)
  return rate_;
}
void option_argv::set_rate(double value) {
  
  rate_ = value;
  // @@protoc_insertion_point(field_set:manager.option_argv.rate)
}

// int32 step = 4;
void option_argv::clear_step() {
  step_ = 0;
}
::google::protobuf::int32 option_argv::step() const {
  // @@protoc_insertion_point(field_get:manager.option_argv.step)
  return step_;
}
void option_argv::set_step(::google::protobuf::int32 value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:manager.option_argv.step)
}

// int32 iterations = 5;
void option_argv::clear_iterations() {
  iterations_ = 0;
}
::google::protobuf::int32 option_argv::iterations() const {
  // @@protoc_insertion_point(field_get:manager.option_argv.iterations)
  return iterations_;
}
void option_argv::set_iterations(::google::protobuf::int32 value) {
  
  iterations_ = value;
  // @@protoc_insertion_point(field_set:manager.option_argv.iterations)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_option_argv::kHeaderFieldNumber;
const int rsp_option_argv::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_option_argv::rsp_option_argv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_option_argv)
}
rsp_option_argv::rsp_option_argv(const rsp_option_argv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::manager::option_argv(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_option_argv)
}

void rsp_option_argv::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&info_) -
      reinterpret_cast<char*>(&header_)) + sizeof(info_));
  _cached_size_ = 0;
}

rsp_option_argv::~rsp_option_argv() {
  // @@protoc_insertion_point(destructor:manager.rsp_option_argv)
  SharedDtor();
}

void rsp_option_argv::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete info_;
}

void rsp_option_argv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_option_argv::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_option_argv& rsp_option_argv::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_option_argv* rsp_option_argv::New(::google::protobuf::Arena* arena) const {
  rsp_option_argv* n = new rsp_option_argv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_option_argv::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_option_argv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_option_argv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.option_argv info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_option_argv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_option_argv)
  return false;
#undef DO_
}

void rsp_option_argv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .manager.option_argv info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_option_argv)
}

::google::protobuf::uint8* rsp_option_argv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_option_argv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // .manager.option_argv info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_option_argv)
  return target;
}

size_t rsp_option_argv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_option_argv)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // .manager.option_argv info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_option_argv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_option_argv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_option_argv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_option_argv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_option_argv)
    MergeFrom(*source);
  }
}

void rsp_option_argv::MergeFrom(const rsp_option_argv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_option_argv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
  if (from.has_info()) {
    mutable_info()->::manager::option_argv::MergeFrom(from.info());
  }
}

void rsp_option_argv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_option_argv::CopyFrom(const rsp_option_argv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_option_argv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_option_argv::IsInitialized() const {
  return true;
}

void rsp_option_argv::Swap(rsp_option_argv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_option_argv::InternalSwap(rsp_option_argv* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_option_argv::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_option_argv

// .manager.rsp_head_info header = 1;
bool rsp_option_argv::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_option_argv::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_option_argv::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_option_argv.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_option_argv::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_option_argv.header)
  return header_;
}
::manager::rsp_head_info* rsp_option_argv::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_option_argv.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_option_argv::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_option_argv.header)
}

// .manager.option_argv info = 2;
bool rsp_option_argv::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void rsp_option_argv::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::option_argv& rsp_option_argv::info() const {
  const ::manager::option_argv* p = info_;
  // @@protoc_insertion_point(field_get:manager.rsp_option_argv.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::option_argv*>(
      &::manager::_option_argv_default_instance_);
}
::manager::option_argv* rsp_option_argv::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::option_argv;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_option_argv.info)
  return info_;
}
::manager::option_argv* rsp_option_argv::release_info() {
  // @@protoc_insertion_point(field_release:manager.rsp_option_argv.info)
  
  ::manager::option_argv* temp = info_;
  info_ = NULL;
  return temp;
}
void rsp_option_argv::set_allocated_info(::manager::option_argv* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_option_argv.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_option_argv_adj::kRequestidFieldNumber;
const int req_option_argv_adj::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_option_argv_adj::req_option_argv_adj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_option_argv_adj)
}
req_option_argv_adj::req_option_argv_adj(const req_option_argv_adj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::manager::option_argv(*from.info_);
  } else {
    info_ = NULL;
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_option_argv_adj)
}

void req_option_argv_adj::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&info_)) + sizeof(requestid_));
  _cached_size_ = 0;
}

req_option_argv_adj::~req_option_argv_adj() {
  // @@protoc_insertion_point(destructor:manager.req_option_argv_adj)
  SharedDtor();
}

void req_option_argv_adj::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void req_option_argv_adj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_option_argv_adj::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_option_argv_adj& req_option_argv_adj::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_option_argv_adj* req_option_argv_adj::New(::google::protobuf::Arena* arena) const {
  req_option_argv_adj* n = new req_option_argv_adj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_option_argv_adj::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_option_argv_adj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_option_argv_adj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_option_argv_adj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manager.option_argv info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_option_argv_adj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_option_argv_adj)
  return false;
#undef DO_
}

void req_option_argv_adj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_option_argv_adj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // .manager.option_argv info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_option_argv_adj)
}

::google::protobuf::uint8* req_option_argv_adj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_option_argv_adj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // .manager.option_argv info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_option_argv_adj)
  return target;
}

size_t req_option_argv_adj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_option_argv_adj)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .manager.option_argv info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_option_argv_adj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_option_argv_adj)
  GOOGLE_DCHECK_NE(&from, this);
  const req_option_argv_adj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_option_argv_adj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_option_argv_adj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_option_argv_adj)
    MergeFrom(*source);
  }
}

void req_option_argv_adj::MergeFrom(const req_option_argv_adj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_option_argv_adj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::manager::option_argv::MergeFrom(from.info());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_option_argv_adj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_option_argv_adj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_option_argv_adj::CopyFrom(const req_option_argv_adj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_option_argv_adj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_option_argv_adj::IsInitialized() const {
  return true;
}

void req_option_argv_adj::Swap(req_option_argv_adj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_option_argv_adj::InternalSwap(req_option_argv_adj* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_option_argv_adj::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_option_argv_adj

// int32 requestid = 1;
void req_option_argv_adj::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_option_argv_adj::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_option_argv_adj.requestid)
  return requestid_;
}
void req_option_argv_adj::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_option_argv_adj.requestid)
}

// .manager.option_argv info = 2;
bool req_option_argv_adj::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void req_option_argv_adj::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::manager::option_argv& req_option_argv_adj::info() const {
  const ::manager::option_argv* p = info_;
  // @@protoc_insertion_point(field_get:manager.req_option_argv_adj.info)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::option_argv*>(
      &::manager::_option_argv_default_instance_);
}
::manager::option_argv* req_option_argv_adj::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::manager::option_argv;
  }
  // @@protoc_insertion_point(field_mutable:manager.req_option_argv_adj.info)
  return info_;
}
::manager::option_argv* req_option_argv_adj::release_info() {
  // @@protoc_insertion_point(field_release:manager.req_option_argv_adj.info)
  
  ::manager::option_argv* temp = info_;
  info_ = NULL;
  return temp;
}
void req_option_argv_adj::set_allocated_info(::manager::option_argv* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.req_option_argv_adj.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_contract::kRequestidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_contract::req_contract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_contract)
}
req_contract::req_contract(const req_contract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_contract)
}

void req_contract::SharedCtor() {
  requestid_ = 0;
  _cached_size_ = 0;
}

req_contract::~req_contract() {
  // @@protoc_insertion_point(destructor:manager.req_contract)
  SharedDtor();
}

void req_contract::SharedDtor() {
}

void req_contract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_contract::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_contract& req_contract::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_contract* req_contract::New(::google::protobuf::Arena* arena) const {
  req_contract* n = new req_contract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_contract::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_contract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_contract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_contract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_contract)
  return false;
#undef DO_
}

void req_contract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_contract)
}

::google::protobuf::uint8* req_contract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_contract)
  return target;
}

size_t req_contract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_contract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_contract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_contract)
  GOOGLE_DCHECK_NE(&from, this);
  const req_contract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_contract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_contract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_contract)
    MergeFrom(*source);
  }
}

void req_contract::MergeFrom(const req_contract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_contract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_contract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_contract::CopyFrom(const req_contract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_contract::IsInitialized() const {
  return true;
}

void req_contract::Swap(req_contract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_contract::InternalSwap(req_contract* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_contract::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_contract

// int32 requestid = 1;
void req_contract::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_contract::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_contract.requestid)
  return requestid_;
}
void req_contract::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_contract.requestid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int contract_info::kContractcodeFieldNumber;
const int contract_info::kProductcodeFieldNumber;
const int contract_info::kProductkindFieldNumber;
const int contract_info::kExchangecodeFieldNumber;
const int contract_info::kMarketcodeFieldNumber;
const int contract_info::kCreatedateFieldNumber;
const int contract_info::kOpendateFieldNumber;
const int contract_info::kExpiredateFieldNumber;
const int contract_info::kMultiplierFieldNumber;
const int contract_info::kPricetickFieldNumber;
const int contract_info::kContractnameFieldNumber;
const int contract_info::kDelivbegindateFieldNumber;
const int contract_info::kDelivenddateFieldNumber;
const int contract_info::kExcontractnameFieldNumber;
const int contract_info::kExproductnameFieldNumber;
const int contract_info::kIsmrgndiscFieldNumber;
const int contract_info::kProductclassFieldNumber;
const int contract_info::kBasepriceFieldNumber;
const int contract_info::kOptionstypeFieldNumber;
const int contract_info::kStrikepriceFieldNumber;
const int contract_info::kUnderlyinginstridFieldNumber;
const int contract_info::kStrikemodeFieldNumber;
const int contract_info::kUnderlyingmultipleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

contract_info::contract_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.contract_info)
}
contract_info::contract_info(const contract_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  contractcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contractcode().size() > 0) {
    contractcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractcode_);
  }
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productcode().size() > 0) {
    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  productkind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productkind().size() > 0) {
    productkind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productkind_);
  }
  exchangecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchangecode().size() > 0) {
    exchangecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangecode_);
  }
  marketcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.marketcode().size() > 0) {
    marketcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.marketcode_);
  }
  createdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.createdate().size() > 0) {
    createdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createdate_);
  }
  opendate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.opendate().size() > 0) {
    opendate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opendate_);
  }
  expiredate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.expiredate().size() > 0) {
    expiredate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiredate_);
  }
  contractname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contractname().size() > 0) {
    contractname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractname_);
  }
  delivbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.delivbegindate().size() > 0) {
    delivbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.delivbegindate_);
  }
  delivenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.delivenddate().size() > 0) {
    delivenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.delivenddate_);
  }
  excontractname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.excontractname().size() > 0) {
    excontractname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.excontractname_);
  }
  exproductname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exproductname().size() > 0) {
    exproductname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exproductname_);
  }
  ismrgndisc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ismrgndisc().size() > 0) {
    ismrgndisc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ismrgndisc_);
  }
  productclass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productclass().size() > 0) {
    productclass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productclass_);
  }
  optionstype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.optionstype().size() > 0) {
    optionstype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionstype_);
  }
  underlyinginstrid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.underlyinginstrid().size() > 0) {
    underlyinginstrid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlyinginstrid_);
  }
  strikemode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strikemode().size() > 0) {
    strikemode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strikemode_);
  }
  ::memcpy(&pricetick_, &from.pricetick_,
    static_cast<size_t>(reinterpret_cast<char*>(&multiplier_) -
    reinterpret_cast<char*>(&pricetick_)) + sizeof(multiplier_));
  // @@protoc_insertion_point(copy_constructor:manager.contract_info)
}

void contract_info::SharedCtor() {
  contractcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productkind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  marketcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opendate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiredate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delivbegindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delivenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  excontractname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exproductname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ismrgndisc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productclass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionstype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlyinginstrid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strikemode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pricetick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&multiplier_) -
      reinterpret_cast<char*>(&pricetick_)) + sizeof(multiplier_));
  _cached_size_ = 0;
}

contract_info::~contract_info() {
  // @@protoc_insertion_point(destructor:manager.contract_info)
  SharedDtor();
}

void contract_info::SharedDtor() {
  contractcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productkind_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  marketcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opendate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiredate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delivbegindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delivenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  excontractname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exproductname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ismrgndisc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productclass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionstype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlyinginstrid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strikemode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void contract_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* contract_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const contract_info& contract_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

contract_info* contract_info::New(::google::protobuf::Arena* arena) const {
  contract_info* n = new contract_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void contract_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.contract_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contractcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productkind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  marketcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opendate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delivbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delivenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  excontractname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exproductname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ismrgndisc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionstype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlyinginstrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strikemode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pricetick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&multiplier_) -
      reinterpret_cast<char*>(&pricetick_)) + sizeof(multiplier_));
  _internal_metadata_.Clear();
}

bool contract_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.contract_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string contractcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contractcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contractcode().data(), static_cast<int>(this->contractcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.contractcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productcode().data(), static_cast<int>(this->productcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.productcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productkind = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productkind()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productkind().data(), static_cast<int>(this->productkind().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.productkind"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchangecode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchangecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchangecode().data(), static_cast<int>(this->exchangecode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.exchangecode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string marketcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->marketcode().data(), static_cast<int>(this->marketcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.marketcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string createdate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->createdate().data(), static_cast<int>(this->createdate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.createdate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string opendate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opendate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opendate().data(), static_cast<int>(this->opendate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.opendate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string expiredate = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expiredate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expiredate().data(), static_cast<int>(this->expiredate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.expiredate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 multiplier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multiplier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pricetick = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pricetick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contractname = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contractname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contractname().data(), static_cast<int>(this->contractname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.contractname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string delivbegindate = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_delivbegindate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->delivbegindate().data(), static_cast<int>(this->delivbegindate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.delivbegindate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string delivenddate = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_delivenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->delivenddate().data(), static_cast<int>(this->delivenddate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.delivenddate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string excontractname = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_excontractname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->excontractname().data(), static_cast<int>(this->excontractname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.excontractname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exproductname = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exproductname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exproductname().data(), static_cast<int>(this->exproductname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.exproductname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ismrgndisc = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ismrgndisc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ismrgndisc().data(), static_cast<int>(this->ismrgndisc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.ismrgndisc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productclass = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productclass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productclass().data(), static_cast<int>(this->productclass().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.productclass"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double baseprice = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &baseprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string optionstype = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionstype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionstype().data(), static_cast<int>(this->optionstype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.optionstype"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double strikeprice = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strikeprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string underlyinginstrid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_underlyinginstrid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->underlyinginstrid().data(), static_cast<int>(this->underlyinginstrid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.underlyinginstrid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strikemode = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strikemode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strikemode().data(), static_cast<int>(this->strikemode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.contract_info.strikemode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double underlyingmultiple = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &underlyingmultiple_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.contract_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.contract_info)
  return false;
#undef DO_
}

void contract_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.contract_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string contractcode = 1;
  if (this->contractcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractcode().data(), static_cast<int>(this->contractcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.contractcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->contractcode(), output);
  }

  // string productcode = 2;
  if (this->productcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productcode().data(), static_cast<int>(this->productcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.productcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->productcode(), output);
  }

  // string productkind = 3;
  if (this->productkind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productkind().data(), static_cast<int>(this->productkind().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.productkind");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->productkind(), output);
  }

  // string exchangecode = 4;
  if (this->exchangecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangecode().data(), static_cast<int>(this->exchangecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.exchangecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchangecode(), output);
  }

  // string marketcode = 5;
  if (this->marketcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->marketcode().data(), static_cast<int>(this->marketcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.marketcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->marketcode(), output);
  }

  // string createdate = 6;
  if (this->createdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createdate().data(), static_cast<int>(this->createdate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.createdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->createdate(), output);
  }

  // string opendate = 7;
  if (this->opendate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opendate().data(), static_cast<int>(this->opendate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.opendate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->opendate(), output);
  }

  // string expiredate = 8;
  if (this->expiredate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiredate().data(), static_cast<int>(this->expiredate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.expiredate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->expiredate(), output);
  }

  // int32 multiplier = 9;
  if (this->multiplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->multiplier(), output);
  }

  // double pricetick = 10;
  if (this->pricetick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->pricetick(), output);
  }

  // string contractname = 11;
  if (this->contractname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractname().data(), static_cast<int>(this->contractname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.contractname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->contractname(), output);
  }

  // string delivbegindate = 12;
  if (this->delivbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delivbegindate().data(), static_cast<int>(this->delivbegindate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.delivbegindate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->delivbegindate(), output);
  }

  // string delivenddate = 13;
  if (this->delivenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delivenddate().data(), static_cast<int>(this->delivenddate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.delivenddate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->delivenddate(), output);
  }

  // string excontractname = 14;
  if (this->excontractname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->excontractname().data(), static_cast<int>(this->excontractname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.excontractname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->excontractname(), output);
  }

  // string exproductname = 15;
  if (this->exproductname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exproductname().data(), static_cast<int>(this->exproductname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.exproductname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->exproductname(), output);
  }

  // string ismrgndisc = 16;
  if (this->ismrgndisc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ismrgndisc().data(), static_cast<int>(this->ismrgndisc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.ismrgndisc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->ismrgndisc(), output);
  }

  // string productclass = 17;
  if (this->productclass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productclass().data(), static_cast<int>(this->productclass().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.productclass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->productclass(), output);
  }

  // double baseprice = 18;
  if (this->baseprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->baseprice(), output);
  }

  // string optionstype = 19;
  if (this->optionstype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionstype().data(), static_cast<int>(this->optionstype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.optionstype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->optionstype(), output);
  }

  // double strikeprice = 20;
  if (this->strikeprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->strikeprice(), output);
  }

  // string underlyinginstrid = 21;
  if (this->underlyinginstrid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlyinginstrid().data(), static_cast<int>(this->underlyinginstrid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.underlyinginstrid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->underlyinginstrid(), output);
  }

  // string strikemode = 22;
  if (this->strikemode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strikemode().data(), static_cast<int>(this->strikemode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.strikemode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->strikemode(), output);
  }

  // double underlyingmultiple = 23;
  if (this->underlyingmultiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->underlyingmultiple(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.contract_info)
}

::google::protobuf::uint8* contract_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.contract_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string contractcode = 1;
  if (this->contractcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractcode().data(), static_cast<int>(this->contractcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.contractcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->contractcode(), target);
  }

  // string productcode = 2;
  if (this->productcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productcode().data(), static_cast<int>(this->productcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.productcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->productcode(), target);
  }

  // string productkind = 3;
  if (this->productkind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productkind().data(), static_cast<int>(this->productkind().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.productkind");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->productkind(), target);
  }

  // string exchangecode = 4;
  if (this->exchangecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangecode().data(), static_cast<int>(this->exchangecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.exchangecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchangecode(), target);
  }

  // string marketcode = 5;
  if (this->marketcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->marketcode().data(), static_cast<int>(this->marketcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.marketcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->marketcode(), target);
  }

  // string createdate = 6;
  if (this->createdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createdate().data(), static_cast<int>(this->createdate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.createdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->createdate(), target);
  }

  // string opendate = 7;
  if (this->opendate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opendate().data(), static_cast<int>(this->opendate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.opendate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->opendate(), target);
  }

  // string expiredate = 8;
  if (this->expiredate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiredate().data(), static_cast<int>(this->expiredate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.expiredate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->expiredate(), target);
  }

  // int32 multiplier = 9;
  if (this->multiplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->multiplier(), target);
  }

  // double pricetick = 10;
  if (this->pricetick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->pricetick(), target);
  }

  // string contractname = 11;
  if (this->contractname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractname().data(), static_cast<int>(this->contractname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.contractname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->contractname(), target);
  }

  // string delivbegindate = 12;
  if (this->delivbegindate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delivbegindate().data(), static_cast<int>(this->delivbegindate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.delivbegindate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->delivbegindate(), target);
  }

  // string delivenddate = 13;
  if (this->delivenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delivenddate().data(), static_cast<int>(this->delivenddate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.delivenddate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->delivenddate(), target);
  }

  // string excontractname = 14;
  if (this->excontractname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->excontractname().data(), static_cast<int>(this->excontractname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.excontractname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->excontractname(), target);
  }

  // string exproductname = 15;
  if (this->exproductname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exproductname().data(), static_cast<int>(this->exproductname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.exproductname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->exproductname(), target);
  }

  // string ismrgndisc = 16;
  if (this->ismrgndisc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ismrgndisc().data(), static_cast<int>(this->ismrgndisc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.ismrgndisc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->ismrgndisc(), target);
  }

  // string productclass = 17;
  if (this->productclass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productclass().data(), static_cast<int>(this->productclass().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.productclass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->productclass(), target);
  }

  // double baseprice = 18;
  if (this->baseprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->baseprice(), target);
  }

  // string optionstype = 19;
  if (this->optionstype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionstype().data(), static_cast<int>(this->optionstype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.optionstype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->optionstype(), target);
  }

  // double strikeprice = 20;
  if (this->strikeprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->strikeprice(), target);
  }

  // string underlyinginstrid = 21;
  if (this->underlyinginstrid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlyinginstrid().data(), static_cast<int>(this->underlyinginstrid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.underlyinginstrid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->underlyinginstrid(), target);
  }

  // string strikemode = 22;
  if (this->strikemode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strikemode().data(), static_cast<int>(this->strikemode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.contract_info.strikemode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->strikemode(), target);
  }

  // double underlyingmultiple = 23;
  if (this->underlyingmultiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->underlyingmultiple(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.contract_info)
  return target;
}

size_t contract_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.contract_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string contractcode = 1;
  if (this->contractcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contractcode());
  }

  // string productcode = 2;
  if (this->productcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productcode());
  }

  // string productkind = 3;
  if (this->productkind().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productkind());
  }

  // string exchangecode = 4;
  if (this->exchangecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchangecode());
  }

  // string marketcode = 5;
  if (this->marketcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->marketcode());
  }

  // string createdate = 6;
  if (this->createdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->createdate());
  }

  // string opendate = 7;
  if (this->opendate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opendate());
  }

  // string expiredate = 8;
  if (this->expiredate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expiredate());
  }

  // string contractname = 11;
  if (this->contractname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contractname());
  }

  // string delivbegindate = 12;
  if (this->delivbegindate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->delivbegindate());
  }

  // string delivenddate = 13;
  if (this->delivenddate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->delivenddate());
  }

  // string excontractname = 14;
  if (this->excontractname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->excontractname());
  }

  // string exproductname = 15;
  if (this->exproductname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exproductname());
  }

  // string ismrgndisc = 16;
  if (this->ismrgndisc().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ismrgndisc());
  }

  // string productclass = 17;
  if (this->productclass().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productclass());
  }

  // string optionstype = 19;
  if (this->optionstype().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionstype());
  }

  // string underlyinginstrid = 21;
  if (this->underlyinginstrid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->underlyinginstrid());
  }

  // string strikemode = 22;
  if (this->strikemode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strikemode());
  }

  // double pricetick = 10;
  if (this->pricetick() != 0) {
    total_size += 1 + 8;
  }

  // double baseprice = 18;
  if (this->baseprice() != 0) {
    total_size += 2 + 8;
  }

  // double strikeprice = 20;
  if (this->strikeprice() != 0) {
    total_size += 2 + 8;
  }

  // double underlyingmultiple = 23;
  if (this->underlyingmultiple() != 0) {
    total_size += 2 + 8;
  }

  // int32 multiplier = 9;
  if (this->multiplier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->multiplier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void contract_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.contract_info)
  GOOGLE_DCHECK_NE(&from, this);
  const contract_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const contract_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.contract_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.contract_info)
    MergeFrom(*source);
  }
}

void contract_info::MergeFrom(const contract_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.contract_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.contractcode().size() > 0) {

    contractcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractcode_);
  }
  if (from.productcode().size() > 0) {

    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  if (from.productkind().size() > 0) {

    productkind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productkind_);
  }
  if (from.exchangecode().size() > 0) {

    exchangecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangecode_);
  }
  if (from.marketcode().size() > 0) {

    marketcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.marketcode_);
  }
  if (from.createdate().size() > 0) {

    createdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createdate_);
  }
  if (from.opendate().size() > 0) {

    opendate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opendate_);
  }
  if (from.expiredate().size() > 0) {

    expiredate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiredate_);
  }
  if (from.contractname().size() > 0) {

    contractname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractname_);
  }
  if (from.delivbegindate().size() > 0) {

    delivbegindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.delivbegindate_);
  }
  if (from.delivenddate().size() > 0) {

    delivenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.delivenddate_);
  }
  if (from.excontractname().size() > 0) {

    excontractname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.excontractname_);
  }
  if (from.exproductname().size() > 0) {

    exproductname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exproductname_);
  }
  if (from.ismrgndisc().size() > 0) {

    ismrgndisc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ismrgndisc_);
  }
  if (from.productclass().size() > 0) {

    productclass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productclass_);
  }
  if (from.optionstype().size() > 0) {

    optionstype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionstype_);
  }
  if (from.underlyinginstrid().size() > 0) {

    underlyinginstrid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlyinginstrid_);
  }
  if (from.strikemode().size() > 0) {

    strikemode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strikemode_);
  }
  if (from.pricetick() != 0) {
    set_pricetick(from.pricetick());
  }
  if (from.baseprice() != 0) {
    set_baseprice(from.baseprice());
  }
  if (from.strikeprice() != 0) {
    set_strikeprice(from.strikeprice());
  }
  if (from.underlyingmultiple() != 0) {
    set_underlyingmultiple(from.underlyingmultiple());
  }
  if (from.multiplier() != 0) {
    set_multiplier(from.multiplier());
  }
}

void contract_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.contract_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void contract_info::CopyFrom(const contract_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.contract_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool contract_info::IsInitialized() const {
  return true;
}

void contract_info::Swap(contract_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void contract_info::InternalSwap(contract_info* other) {
  using std::swap;
  contractcode_.Swap(&other->contractcode_);
  productcode_.Swap(&other->productcode_);
  productkind_.Swap(&other->productkind_);
  exchangecode_.Swap(&other->exchangecode_);
  marketcode_.Swap(&other->marketcode_);
  createdate_.Swap(&other->createdate_);
  opendate_.Swap(&other->opendate_);
  expiredate_.Swap(&other->expiredate_);
  contractname_.Swap(&other->contractname_);
  delivbegindate_.Swap(&other->delivbegindate_);
  delivenddate_.Swap(&other->delivenddate_);
  excontractname_.Swap(&other->excontractname_);
  exproductname_.Swap(&other->exproductname_);
  ismrgndisc_.Swap(&other->ismrgndisc_);
  productclass_.Swap(&other->productclass_);
  optionstype_.Swap(&other->optionstype_);
  underlyinginstrid_.Swap(&other->underlyinginstrid_);
  strikemode_.Swap(&other->strikemode_);
  swap(pricetick_, other->pricetick_);
  swap(baseprice_, other->baseprice_);
  swap(strikeprice_, other->strikeprice_);
  swap(underlyingmultiple_, other->underlyingmultiple_);
  swap(multiplier_, other->multiplier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata contract_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// contract_info

// string contractcode = 1;
void contract_info::clear_contractcode() {
  contractcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::contractcode() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.contractcode)
  return contractcode_.GetNoArena();
}
void contract_info::set_contractcode(const ::std::string& value) {
  
  contractcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.contractcode)
}
#if LANG_CXX11
void contract_info::set_contractcode(::std::string&& value) {
  
  contractcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.contractcode)
}
#endif
void contract_info::set_contractcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contractcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.contractcode)
}
void contract_info::set_contractcode(const char* value, size_t size) {
  
  contractcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.contractcode)
}
::std::string* contract_info::mutable_contractcode() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.contractcode)
  return contractcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_contractcode() {
  // @@protoc_insertion_point(field_release:manager.contract_info.contractcode)
  
  return contractcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_contractcode(::std::string* contractcode) {
  if (contractcode != NULL) {
    
  } else {
    
  }
  contractcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contractcode);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.contractcode)
}

// string productcode = 2;
void contract_info::clear_productcode() {
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::productcode() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.productcode)
  return productcode_.GetNoArena();
}
void contract_info::set_productcode(const ::std::string& value) {
  
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.productcode)
}
#if LANG_CXX11
void contract_info::set_productcode(::std::string&& value) {
  
  productcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.productcode)
}
#endif
void contract_info::set_productcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.productcode)
}
void contract_info::set_productcode(const char* value, size_t size) {
  
  productcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.productcode)
}
::std::string* contract_info::mutable_productcode() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.productcode)
  return productcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_productcode() {
  // @@protoc_insertion_point(field_release:manager.contract_info.productcode)
  
  return productcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_productcode(::std::string* productcode) {
  if (productcode != NULL) {
    
  } else {
    
  }
  productcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productcode);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.productcode)
}

// string productkind = 3;
void contract_info::clear_productkind() {
  productkind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::productkind() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.productkind)
  return productkind_.GetNoArena();
}
void contract_info::set_productkind(const ::std::string& value) {
  
  productkind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.productkind)
}
#if LANG_CXX11
void contract_info::set_productkind(::std::string&& value) {
  
  productkind_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.productkind)
}
#endif
void contract_info::set_productkind(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  productkind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.productkind)
}
void contract_info::set_productkind(const char* value, size_t size) {
  
  productkind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.productkind)
}
::std::string* contract_info::mutable_productkind() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.productkind)
  return productkind_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_productkind() {
  // @@protoc_insertion_point(field_release:manager.contract_info.productkind)
  
  return productkind_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_productkind(::std::string* productkind) {
  if (productkind != NULL) {
    
  } else {
    
  }
  productkind_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productkind);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.productkind)
}

// string exchangecode = 4;
void contract_info::clear_exchangecode() {
  exchangecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::exchangecode() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.exchangecode)
  return exchangecode_.GetNoArena();
}
void contract_info::set_exchangecode(const ::std::string& value) {
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.exchangecode)
}
#if LANG_CXX11
void contract_info::set_exchangecode(::std::string&& value) {
  
  exchangecode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.exchangecode)
}
#endif
void contract_info::set_exchangecode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.exchangecode)
}
void contract_info::set_exchangecode(const char* value, size_t size) {
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.exchangecode)
}
::std::string* contract_info::mutable_exchangecode() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.exchangecode)
  return exchangecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_exchangecode() {
  // @@protoc_insertion_point(field_release:manager.contract_info.exchangecode)
  
  return exchangecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_exchangecode(::std::string* exchangecode) {
  if (exchangecode != NULL) {
    
  } else {
    
  }
  exchangecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangecode);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.exchangecode)
}

// string marketcode = 5;
void contract_info::clear_marketcode() {
  marketcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::marketcode() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.marketcode)
  return marketcode_.GetNoArena();
}
void contract_info::set_marketcode(const ::std::string& value) {
  
  marketcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.marketcode)
}
#if LANG_CXX11
void contract_info::set_marketcode(::std::string&& value) {
  
  marketcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.marketcode)
}
#endif
void contract_info::set_marketcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  marketcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.marketcode)
}
void contract_info::set_marketcode(const char* value, size_t size) {
  
  marketcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.marketcode)
}
::std::string* contract_info::mutable_marketcode() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.marketcode)
  return marketcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_marketcode() {
  // @@protoc_insertion_point(field_release:manager.contract_info.marketcode)
  
  return marketcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_marketcode(::std::string* marketcode) {
  if (marketcode != NULL) {
    
  } else {
    
  }
  marketcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), marketcode);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.marketcode)
}

// string createdate = 6;
void contract_info::clear_createdate() {
  createdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::createdate() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.createdate)
  return createdate_.GetNoArena();
}
void contract_info::set_createdate(const ::std::string& value) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.createdate)
}
#if LANG_CXX11
void contract_info::set_createdate(::std::string&& value) {
  
  createdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.createdate)
}
#endif
void contract_info::set_createdate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.createdate)
}
void contract_info::set_createdate(const char* value, size_t size) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.createdate)
}
::std::string* contract_info::mutable_createdate() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.createdate)
  return createdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_createdate() {
  // @@protoc_insertion_point(field_release:manager.contract_info.createdate)
  
  return createdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_createdate(::std::string* createdate) {
  if (createdate != NULL) {
    
  } else {
    
  }
  createdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createdate);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.createdate)
}

// string opendate = 7;
void contract_info::clear_opendate() {
  opendate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::opendate() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.opendate)
  return opendate_.GetNoArena();
}
void contract_info::set_opendate(const ::std::string& value) {
  
  opendate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.opendate)
}
#if LANG_CXX11
void contract_info::set_opendate(::std::string&& value) {
  
  opendate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.opendate)
}
#endif
void contract_info::set_opendate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  opendate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.opendate)
}
void contract_info::set_opendate(const char* value, size_t size) {
  
  opendate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.opendate)
}
::std::string* contract_info::mutable_opendate() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.opendate)
  return opendate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_opendate() {
  // @@protoc_insertion_point(field_release:manager.contract_info.opendate)
  
  return opendate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_opendate(::std::string* opendate) {
  if (opendate != NULL) {
    
  } else {
    
  }
  opendate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opendate);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.opendate)
}

// string expiredate = 8;
void contract_info::clear_expiredate() {
  expiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::expiredate() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.expiredate)
  return expiredate_.GetNoArena();
}
void contract_info::set_expiredate(const ::std::string& value) {
  
  expiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.expiredate)
}
#if LANG_CXX11
void contract_info::set_expiredate(::std::string&& value) {
  
  expiredate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.expiredate)
}
#endif
void contract_info::set_expiredate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  expiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.expiredate)
}
void contract_info::set_expiredate(const char* value, size_t size) {
  
  expiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.expiredate)
}
::std::string* contract_info::mutable_expiredate() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.expiredate)
  return expiredate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_expiredate() {
  // @@protoc_insertion_point(field_release:manager.contract_info.expiredate)
  
  return expiredate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_expiredate(::std::string* expiredate) {
  if (expiredate != NULL) {
    
  } else {
    
  }
  expiredate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiredate);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.expiredate)
}

// int32 multiplier = 9;
void contract_info::clear_multiplier() {
  multiplier_ = 0;
}
::google::protobuf::int32 contract_info::multiplier() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.multiplier)
  return multiplier_;
}
void contract_info::set_multiplier(::google::protobuf::int32 value) {
  
  multiplier_ = value;
  // @@protoc_insertion_point(field_set:manager.contract_info.multiplier)
}

// double pricetick = 10;
void contract_info::clear_pricetick() {
  pricetick_ = 0;
}
double contract_info::pricetick() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.pricetick)
  return pricetick_;
}
void contract_info::set_pricetick(double value) {
  
  pricetick_ = value;
  // @@protoc_insertion_point(field_set:manager.contract_info.pricetick)
}

// string contractname = 11;
void contract_info::clear_contractname() {
  contractname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::contractname() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.contractname)
  return contractname_.GetNoArena();
}
void contract_info::set_contractname(const ::std::string& value) {
  
  contractname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.contractname)
}
#if LANG_CXX11
void contract_info::set_contractname(::std::string&& value) {
  
  contractname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.contractname)
}
#endif
void contract_info::set_contractname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contractname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.contractname)
}
void contract_info::set_contractname(const char* value, size_t size) {
  
  contractname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.contractname)
}
::std::string* contract_info::mutable_contractname() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.contractname)
  return contractname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_contractname() {
  // @@protoc_insertion_point(field_release:manager.contract_info.contractname)
  
  return contractname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_contractname(::std::string* contractname) {
  if (contractname != NULL) {
    
  } else {
    
  }
  contractname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contractname);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.contractname)
}

// string delivbegindate = 12;
void contract_info::clear_delivbegindate() {
  delivbegindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::delivbegindate() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.delivbegindate)
  return delivbegindate_.GetNoArena();
}
void contract_info::set_delivbegindate(const ::std::string& value) {
  
  delivbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.delivbegindate)
}
#if LANG_CXX11
void contract_info::set_delivbegindate(::std::string&& value) {
  
  delivbegindate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.delivbegindate)
}
#endif
void contract_info::set_delivbegindate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  delivbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.delivbegindate)
}
void contract_info::set_delivbegindate(const char* value, size_t size) {
  
  delivbegindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.delivbegindate)
}
::std::string* contract_info::mutable_delivbegindate() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.delivbegindate)
  return delivbegindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_delivbegindate() {
  // @@protoc_insertion_point(field_release:manager.contract_info.delivbegindate)
  
  return delivbegindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_delivbegindate(::std::string* delivbegindate) {
  if (delivbegindate != NULL) {
    
  } else {
    
  }
  delivbegindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), delivbegindate);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.delivbegindate)
}

// string delivenddate = 13;
void contract_info::clear_delivenddate() {
  delivenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::delivenddate() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.delivenddate)
  return delivenddate_.GetNoArena();
}
void contract_info::set_delivenddate(const ::std::string& value) {
  
  delivenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.delivenddate)
}
#if LANG_CXX11
void contract_info::set_delivenddate(::std::string&& value) {
  
  delivenddate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.delivenddate)
}
#endif
void contract_info::set_delivenddate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  delivenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.delivenddate)
}
void contract_info::set_delivenddate(const char* value, size_t size) {
  
  delivenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.delivenddate)
}
::std::string* contract_info::mutable_delivenddate() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.delivenddate)
  return delivenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_delivenddate() {
  // @@protoc_insertion_point(field_release:manager.contract_info.delivenddate)
  
  return delivenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_delivenddate(::std::string* delivenddate) {
  if (delivenddate != NULL) {
    
  } else {
    
  }
  delivenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), delivenddate);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.delivenddate)
}

// string excontractname = 14;
void contract_info::clear_excontractname() {
  excontractname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::excontractname() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.excontractname)
  return excontractname_.GetNoArena();
}
void contract_info::set_excontractname(const ::std::string& value) {
  
  excontractname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.excontractname)
}
#if LANG_CXX11
void contract_info::set_excontractname(::std::string&& value) {
  
  excontractname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.excontractname)
}
#endif
void contract_info::set_excontractname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  excontractname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.excontractname)
}
void contract_info::set_excontractname(const char* value, size_t size) {
  
  excontractname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.excontractname)
}
::std::string* contract_info::mutable_excontractname() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.excontractname)
  return excontractname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_excontractname() {
  // @@protoc_insertion_point(field_release:manager.contract_info.excontractname)
  
  return excontractname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_excontractname(::std::string* excontractname) {
  if (excontractname != NULL) {
    
  } else {
    
  }
  excontractname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), excontractname);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.excontractname)
}

// string exproductname = 15;
void contract_info::clear_exproductname() {
  exproductname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::exproductname() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.exproductname)
  return exproductname_.GetNoArena();
}
void contract_info::set_exproductname(const ::std::string& value) {
  
  exproductname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.exproductname)
}
#if LANG_CXX11
void contract_info::set_exproductname(::std::string&& value) {
  
  exproductname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.exproductname)
}
#endif
void contract_info::set_exproductname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exproductname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.exproductname)
}
void contract_info::set_exproductname(const char* value, size_t size) {
  
  exproductname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.exproductname)
}
::std::string* contract_info::mutable_exproductname() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.exproductname)
  return exproductname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_exproductname() {
  // @@protoc_insertion_point(field_release:manager.contract_info.exproductname)
  
  return exproductname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_exproductname(::std::string* exproductname) {
  if (exproductname != NULL) {
    
  } else {
    
  }
  exproductname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exproductname);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.exproductname)
}

// string ismrgndisc = 16;
void contract_info::clear_ismrgndisc() {
  ismrgndisc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::ismrgndisc() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.ismrgndisc)
  return ismrgndisc_.GetNoArena();
}
void contract_info::set_ismrgndisc(const ::std::string& value) {
  
  ismrgndisc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.ismrgndisc)
}
#if LANG_CXX11
void contract_info::set_ismrgndisc(::std::string&& value) {
  
  ismrgndisc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.ismrgndisc)
}
#endif
void contract_info::set_ismrgndisc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ismrgndisc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.ismrgndisc)
}
void contract_info::set_ismrgndisc(const char* value, size_t size) {
  
  ismrgndisc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.ismrgndisc)
}
::std::string* contract_info::mutable_ismrgndisc() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.ismrgndisc)
  return ismrgndisc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_ismrgndisc() {
  // @@protoc_insertion_point(field_release:manager.contract_info.ismrgndisc)
  
  return ismrgndisc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_ismrgndisc(::std::string* ismrgndisc) {
  if (ismrgndisc != NULL) {
    
  } else {
    
  }
  ismrgndisc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ismrgndisc);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.ismrgndisc)
}

// string productclass = 17;
void contract_info::clear_productclass() {
  productclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::productclass() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.productclass)
  return productclass_.GetNoArena();
}
void contract_info::set_productclass(const ::std::string& value) {
  
  productclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.productclass)
}
#if LANG_CXX11
void contract_info::set_productclass(::std::string&& value) {
  
  productclass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.productclass)
}
#endif
void contract_info::set_productclass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  productclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.productclass)
}
void contract_info::set_productclass(const char* value, size_t size) {
  
  productclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.productclass)
}
::std::string* contract_info::mutable_productclass() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.productclass)
  return productclass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_productclass() {
  // @@protoc_insertion_point(field_release:manager.contract_info.productclass)
  
  return productclass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_productclass(::std::string* productclass) {
  if (productclass != NULL) {
    
  } else {
    
  }
  productclass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productclass);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.productclass)
}

// double baseprice = 18;
void contract_info::clear_baseprice() {
  baseprice_ = 0;
}
double contract_info::baseprice() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.baseprice)
  return baseprice_;
}
void contract_info::set_baseprice(double value) {
  
  baseprice_ = value;
  // @@protoc_insertion_point(field_set:manager.contract_info.baseprice)
}

// string optionstype = 19;
void contract_info::clear_optionstype() {
  optionstype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::optionstype() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.optionstype)
  return optionstype_.GetNoArena();
}
void contract_info::set_optionstype(const ::std::string& value) {
  
  optionstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.optionstype)
}
#if LANG_CXX11
void contract_info::set_optionstype(::std::string&& value) {
  
  optionstype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.optionstype)
}
#endif
void contract_info::set_optionstype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  optionstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.optionstype)
}
void contract_info::set_optionstype(const char* value, size_t size) {
  
  optionstype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.optionstype)
}
::std::string* contract_info::mutable_optionstype() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.optionstype)
  return optionstype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_optionstype() {
  // @@protoc_insertion_point(field_release:manager.contract_info.optionstype)
  
  return optionstype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_optionstype(::std::string* optionstype) {
  if (optionstype != NULL) {
    
  } else {
    
  }
  optionstype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionstype);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.optionstype)
}

// double strikeprice = 20;
void contract_info::clear_strikeprice() {
  strikeprice_ = 0;
}
double contract_info::strikeprice() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.strikeprice)
  return strikeprice_;
}
void contract_info::set_strikeprice(double value) {
  
  strikeprice_ = value;
  // @@protoc_insertion_point(field_set:manager.contract_info.strikeprice)
}

// string underlyinginstrid = 21;
void contract_info::clear_underlyinginstrid() {
  underlyinginstrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::underlyinginstrid() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.underlyinginstrid)
  return underlyinginstrid_.GetNoArena();
}
void contract_info::set_underlyinginstrid(const ::std::string& value) {
  
  underlyinginstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.underlyinginstrid)
}
#if LANG_CXX11
void contract_info::set_underlyinginstrid(::std::string&& value) {
  
  underlyinginstrid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.underlyinginstrid)
}
#endif
void contract_info::set_underlyinginstrid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  underlyinginstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.underlyinginstrid)
}
void contract_info::set_underlyinginstrid(const char* value, size_t size) {
  
  underlyinginstrid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.underlyinginstrid)
}
::std::string* contract_info::mutable_underlyinginstrid() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.underlyinginstrid)
  return underlyinginstrid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_underlyinginstrid() {
  // @@protoc_insertion_point(field_release:manager.contract_info.underlyinginstrid)
  
  return underlyinginstrid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_underlyinginstrid(::std::string* underlyinginstrid) {
  if (underlyinginstrid != NULL) {
    
  } else {
    
  }
  underlyinginstrid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), underlyinginstrid);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.underlyinginstrid)
}

// string strikemode = 22;
void contract_info::clear_strikemode() {
  strikemode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& contract_info::strikemode() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.strikemode)
  return strikemode_.GetNoArena();
}
void contract_info::set_strikemode(const ::std::string& value) {
  
  strikemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.contract_info.strikemode)
}
#if LANG_CXX11
void contract_info::set_strikemode(::std::string&& value) {
  
  strikemode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.contract_info.strikemode)
}
#endif
void contract_info::set_strikemode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strikemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.contract_info.strikemode)
}
void contract_info::set_strikemode(const char* value, size_t size) {
  
  strikemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.contract_info.strikemode)
}
::std::string* contract_info::mutable_strikemode() {
  
  // @@protoc_insertion_point(field_mutable:manager.contract_info.strikemode)
  return strikemode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* contract_info::release_strikemode() {
  // @@protoc_insertion_point(field_release:manager.contract_info.strikemode)
  
  return strikemode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void contract_info::set_allocated_strikemode(::std::string* strikemode) {
  if (strikemode != NULL) {
    
  } else {
    
  }
  strikemode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strikemode);
  // @@protoc_insertion_point(field_set_allocated:manager.contract_info.strikemode)
}

// double underlyingmultiple = 23;
void contract_info::clear_underlyingmultiple() {
  underlyingmultiple_ = 0;
}
double contract_info::underlyingmultiple() const {
  // @@protoc_insertion_point(field_get:manager.contract_info.underlyingmultiple)
  return underlyingmultiple_;
}
void contract_info::set_underlyingmultiple(double value) {
  
  underlyingmultiple_ = value;
  // @@protoc_insertion_point(field_set:manager.contract_info.underlyingmultiple)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_contract::kHeaderFieldNumber;
const int rsp_contract::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_contract::rsp_contract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_contract)
}
rsp_contract::rsp_contract(const rsp_contract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_contract)
}

void rsp_contract::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_contract::~rsp_contract() {
  // @@protoc_insertion_point(destructor:manager.rsp_contract)
  SharedDtor();
}

void rsp_contract::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void rsp_contract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_contract::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_contract& rsp_contract::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_contract* rsp_contract::New(::google::protobuf::Arena* arena) const {
  rsp_contract* n = new rsp_contract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_contract::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_contract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_contract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.contract_info infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_contract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_contract)
  return false;
#undef DO_
}

void rsp_contract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .manager.contract_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->infos(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_contract)
}

::google::protobuf::uint8* rsp_contract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .manager.contract_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_contract)
  return target;
}

size_t rsp_contract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_contract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.contract_info infos = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infos(static_cast<int>(i)));
    }
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_contract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_contract)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_contract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_contract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_contract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_contract)
    MergeFrom(*source);
  }
}

void rsp_contract::MergeFrom(const rsp_contract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_contract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_contract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_contract::CopyFrom(const rsp_contract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_contract::IsInitialized() const {
  return true;
}

void rsp_contract::Swap(rsp_contract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_contract::InternalSwap(rsp_contract* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_contract::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_contract

// .manager.rsp_head_info header = 1;
bool rsp_contract::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_contract::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_contract::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_contract.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_contract::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_contract.header)
  return header_;
}
::manager::rsp_head_info* rsp_contract::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_contract.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_contract::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_contract.header)
}

// repeated .manager.contract_info infos = 2;
int rsp_contract::infos_size() const {
  return infos_.size();
}
void rsp_contract::clear_infos() {
  infos_.Clear();
}
const ::manager::contract_info& rsp_contract::infos(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_contract.infos)
  return infos_.Get(index);
}
::manager::contract_info* rsp_contract::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_contract.infos)
  return infos_.Mutable(index);
}
::manager::contract_info* rsp_contract::add_infos() {
  // @@protoc_insertion_point(field_add:manager.rsp_contract.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::contract_info >*
rsp_contract::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_contract.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::contract_info >&
rsp_contract::infos() const {
  // @@protoc_insertion_point(field_list:manager.rsp_contract.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_investor_info::kRequestidFieldNumber;
const int req_investor_info::kInvestorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_investor_info::req_investor_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.req_investor_info)
}
req_investor_info::req_investor_info(const req_investor_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investor_(from.investor_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:manager.req_investor_info)
}

void req_investor_info::SharedCtor() {
  requestid_ = 0;
  _cached_size_ = 0;
}

req_investor_info::~req_investor_info() {
  // @@protoc_insertion_point(destructor:manager.req_investor_info)
  SharedDtor();
}

void req_investor_info::SharedDtor() {
}

void req_investor_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_investor_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const req_investor_info& req_investor_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

req_investor_info* req_investor_info::New(::google::protobuf::Arena* arena) const {
  req_investor_info* n = new req_investor_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_investor_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.req_investor_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_.Clear();
  requestid_ = 0;
  _internal_metadata_.Clear();
}

bool req_investor_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.req_investor_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 requestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string investor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_investor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor(this->investor_size() - 1).data(),
            static_cast<int>(this->investor(this->investor_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.req_investor_info.investor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.req_investor_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.req_investor_info)
  return false;
#undef DO_
}

void req_investor_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.req_investor_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // repeated string investor = 2;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_investor_info.investor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->investor(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.req_investor_info)
}

::google::protobuf::uint8* req_investor_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.req_investor_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // repeated string investor = 2;
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor(i).data(), static_cast<int>(this->investor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.req_investor_info.investor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->investor(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.req_investor_info)
  return target;
}

size_t req_investor_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.req_investor_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string investor = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->investor_size());
  for (int i = 0, n = this->investor_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->investor(i));
  }

  // int32 requestid = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_investor_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.req_investor_info)
  GOOGLE_DCHECK_NE(&from, this);
  const req_investor_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const req_investor_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.req_investor_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.req_investor_info)
    MergeFrom(*source);
  }
}

void req_investor_info::MergeFrom(const req_investor_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.req_investor_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investor_.MergeFrom(from.investor_);
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void req_investor_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.req_investor_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_investor_info::CopyFrom(const req_investor_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.req_investor_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_investor_info::IsInitialized() const {
  return true;
}

void req_investor_info::Swap(req_investor_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_investor_info::InternalSwap(req_investor_info* other) {
  using std::swap;
  investor_.InternalSwap(&other->investor_);
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_investor_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_investor_info

// int32 requestid = 1;
void req_investor_info::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 req_investor_info::requestid() const {
  // @@protoc_insertion_point(field_get:manager.req_investor_info.requestid)
  return requestid_;
}
void req_investor_info::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:manager.req_investor_info.requestid)
}

// repeated string investor = 2;
int req_investor_info::investor_size() const {
  return investor_.size();
}
void req_investor_info::clear_investor() {
  investor_.Clear();
}
const ::std::string& req_investor_info::investor(int index) const {
  // @@protoc_insertion_point(field_get:manager.req_investor_info.investor)
  return investor_.Get(index);
}
::std::string* req_investor_info::mutable_investor(int index) {
  // @@protoc_insertion_point(field_mutable:manager.req_investor_info.investor)
  return investor_.Mutable(index);
}
void req_investor_info::set_investor(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:manager.req_investor_info.investor)
  investor_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void req_investor_info::set_investor(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:manager.req_investor_info.investor)
  investor_.Mutable(index)->assign(std::move(value));
}
#endif
void req_investor_info::set_investor(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:manager.req_investor_info.investor)
}
void req_investor_info::set_investor(int index, const char* value, size_t size) {
  investor_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manager.req_investor_info.investor)
}
::std::string* req_investor_info::add_investor() {
  // @@protoc_insertion_point(field_add_mutable:manager.req_investor_info.investor)
  return investor_.Add();
}
void req_investor_info::add_investor(const ::std::string& value) {
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:manager.req_investor_info.investor)
}
#if LANG_CXX11
void req_investor_info::add_investor(::std::string&& value) {
  investor_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:manager.req_investor_info.investor)
}
#endif
void req_investor_info::add_investor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  investor_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:manager.req_investor_info.investor)
}
void req_investor_info::add_investor(const char* value, size_t size) {
  investor_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:manager.req_investor_info.investor)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
req_investor_info::investor() const {
  // @@protoc_insertion_point(field_list:manager.req_investor_info.investor)
  return investor_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
req_investor_info::mutable_investor() {
  // @@protoc_insertion_point(field_mutable_list:manager.req_investor_info.investor)
  return &investor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int investor_info::kInvestoridFieldNumber;
const int investor_info::kBrokeridFieldNumber;
const int investor_info::kInvestortypeFieldNumber;
const int investor_info::kInvestornameFieldNumber;
const int investor_info::kIdentifiedcardtypeFieldNumber;
const int investor_info::kIdentifiedcardnoFieldNumber;
const int investor_info::kCountryFieldNumber;
const int investor_info::kProvinceFieldNumber;
const int investor_info::kCityFieldNumber;
const int investor_info::kBirthdayFieldNumber;
const int investor_info::kSexFieldNumber;
const int investor_info::kProfessionFieldNumber;
const int investor_info::kNationalFieldNumber;
const int investor_info::kCapitalFieldNumber;
const int investor_info::kCapitalcurrencyFieldNumber;
const int investor_info::kTelephoneFieldNumber;
const int investor_info::kAddressFieldNumber;
const int investor_info::kZipcodeFieldNumber;
const int investor_info::kEmailFieldNumber;
const int investor_info::kMemoFieldNumber;
const int investor_info::kOpeninvestornameFieldNumber;
const int investor_info::kOrderinvestornameFieldNumber;
const int investor_info::kFundinvestornameFieldNumber;
const int investor_info::kSettleinvestornameFieldNumber;
const int investor_info::kIsactiveFieldNumber;
const int investor_info::kDepartmentidFieldNumber;
const int investor_info::kInvestorfullnameFieldNumber;
const int investor_info::kIsemailFieldNumber;
const int investor_info::kIssmsFieldNumber;
const int investor_info::kIsusingotpFieldNumber;
const int investor_info::kClientregionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

investor_info::investor_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.investor_info)
}
investor_info::investor_info(const investor_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  investorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investorid().size() > 0) {
    investorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investorid_);
  }
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brokerid().size() > 0) {
    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  investortype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investortype().size() > 0) {
    investortype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investortype_);
  }
  investorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investorname().size() > 0) {
    investorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investorname_);
  }
  identifiedcardtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identifiedcardtype().size() > 0) {
    identifiedcardtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifiedcardtype_);
  }
  identifiedcardno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identifiedcardno().size() > 0) {
    identifiedcardno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifiedcardno_);
  }
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.country().size() > 0) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.province().size() > 0) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.city().size() > 0) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.birthday().size() > 0) {
    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  sex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sex().size() > 0) {
    sex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sex_);
  }
  profession_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.profession().size() > 0) {
    profession_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profession_);
  }
  national_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.national().size() > 0) {
    national_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.national_);
  }
  capitalcurrency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.capitalcurrency().size() > 0) {
    capitalcurrency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.capitalcurrency_);
  }
  telephone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.telephone().size() > 0) {
    telephone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telephone_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  zipcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zipcode().size() > 0) {
    zipcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zipcode_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.memo().size() > 0) {
    memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  openinvestorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.openinvestorname().size() > 0) {
    openinvestorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openinvestorname_);
  }
  orderinvestorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.orderinvestorname().size() > 0) {
    orderinvestorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderinvestorname_);
  }
  fundinvestorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fundinvestorname().size() > 0) {
    fundinvestorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fundinvestorname_);
  }
  settleinvestorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.settleinvestorname().size() > 0) {
    settleinvestorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.settleinvestorname_);
  }
  departmentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.departmentid().size() > 0) {
    departmentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.departmentid_);
  }
  investorfullname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investorfullname().size() > 0) {
    investorfullname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investorfullname_);
  }
  clientregion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientregion().size() > 0) {
    clientregion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientregion_);
  }
  ::memcpy(&capital_, &from.capital_,
    static_cast<size_t>(reinterpret_cast<char*>(&isusingotp_) -
    reinterpret_cast<char*>(&capital_)) + sizeof(isusingotp_));
  // @@protoc_insertion_point(copy_constructor:manager.investor_info)
}

void investor_info::SharedCtor() {
  investorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investortype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifiedcardtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifiedcardno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profession_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  national_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capitalcurrency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telephone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openinvestorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderinvestorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fundinvestorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  settleinvestorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  departmentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorfullname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientregion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&capital_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isusingotp_) -
      reinterpret_cast<char*>(&capital_)) + sizeof(isusingotp_));
  _cached_size_ = 0;
}

investor_info::~investor_info() {
  // @@protoc_insertion_point(destructor:manager.investor_info)
  SharedDtor();
}

void investor_info::SharedDtor() {
  investorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investortype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifiedcardtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifiedcardno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profession_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  national_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capitalcurrency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telephone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openinvestorname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderinvestorname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fundinvestorname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  settleinvestorname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  departmentid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorfullname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientregion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void investor_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* investor_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const investor_info& investor_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

investor_info* investor_info::New(::google::protobuf::Arena* arena) const {
  investor_info* n = new investor_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void investor_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.investor_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investortype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifiedcardtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifiedcardno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profession_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  national_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capitalcurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telephone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openinvestorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderinvestorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fundinvestorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  settleinvestorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  departmentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorfullname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientregion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&capital_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isusingotp_) -
      reinterpret_cast<char*>(&capital_)) + sizeof(isusingotp_));
  _internal_metadata_.Clear();
}

bool investor_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.investor_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string investorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investorid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investorid().data(), static_cast<int>(this->investorid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.investorid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string brokerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), static_cast<int>(this->brokerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.brokerid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investortype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investortype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investortype().data(), static_cast<int>(this->investortype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.investortype"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investorname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investorname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investorname().data(), static_cast<int>(this->investorname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.investorname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identifiedcardtype = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identifiedcardtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identifiedcardtype().data(), static_cast<int>(this->identifiedcardtype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.identifiedcardtype"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identifiedcardno = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identifiedcardno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identifiedcardno().data(), static_cast<int>(this->identifiedcardno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.identifiedcardno"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string country = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->country().data(), static_cast<int>(this->country().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.country"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string province = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->province().data(), static_cast<int>(this->province().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.province"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string city = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string birthday = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthday().data(), static_cast<int>(this->birthday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.birthday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sex = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sex().data(), static_cast<int>(this->sex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.sex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string profession = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_profession()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->profession().data(), static_cast<int>(this->profession().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.profession"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string national = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_national()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->national().data(), static_cast<int>(this->national().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.national"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double capital = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &capital_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string capitalcurrency = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_capitalcurrency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->capitalcurrency().data(), static_cast<int>(this->capitalcurrency().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.capitalcurrency"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string telephone = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_telephone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->telephone().data(), static_cast<int>(this->telephone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.telephone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zipcode = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zipcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zipcode().data(), static_cast<int>(this->zipcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.zipcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string memo = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->memo().data(), static_cast<int>(this->memo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.memo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string openinvestorname = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_openinvestorname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->openinvestorname().data(), static_cast<int>(this->openinvestorname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.openinvestorname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string orderinvestorname = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderinvestorname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->orderinvestorname().data(), static_cast<int>(this->orderinvestorname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.orderinvestorname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fundinvestorname = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundinvestorname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fundinvestorname().data(), static_cast<int>(this->fundinvestorname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.fundinvestorname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string settleinvestorname = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_settleinvestorname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->settleinvestorname().data(), static_cast<int>(this->settleinvestorname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.settleinvestorname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isactive = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string departmentid = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->departmentid().data(), static_cast<int>(this->departmentid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.departmentid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investorfullname = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investorfullname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investorfullname().data(), static_cast<int>(this->investorfullname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.investorfullname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isemail = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isemail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 issms = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &issms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isusingotp = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isusingotp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string clientregion = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientregion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientregion().data(), static_cast<int>(this->clientregion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manager.investor_info.clientregion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.investor_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.investor_info)
  return false;
#undef DO_
}

void investor_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.investor_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string investorid = 1;
  if (this->investorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorid().data(), static_cast<int>(this->investorid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.investorid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->investorid(), output);
  }

  // string brokerid = 2;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), static_cast<int>(this->brokerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.brokerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->brokerid(), output);
  }

  // string investortype = 3;
  if (this->investortype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investortype().data(), static_cast<int>(this->investortype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.investortype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->investortype(), output);
  }

  // string investorname = 4;
  if (this->investorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorname().data(), static_cast<int>(this->investorname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.investorname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->investorname(), output);
  }

  // string identifiedcardtype = 5;
  if (this->identifiedcardtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifiedcardtype().data(), static_cast<int>(this->identifiedcardtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.identifiedcardtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->identifiedcardtype(), output);
  }

  // string identifiedcardno = 6;
  if (this->identifiedcardno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifiedcardno().data(), static_cast<int>(this->identifiedcardno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.identifiedcardno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->identifiedcardno(), output);
  }

  // string country = 7;
  if (this->country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->country(), output);
  }

  // string province = 8;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->province(), output);
  }

  // string city = 9;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->city(), output);
  }

  // string birthday = 10;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.birthday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->birthday(), output);
  }

  // string sex = 11;
  if (this->sex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sex().data(), static_cast<int>(this->sex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.sex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sex(), output);
  }

  // string profession = 12;
  if (this->profession().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->profession().data(), static_cast<int>(this->profession().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.profession");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->profession(), output);
  }

  // string national = 13;
  if (this->national().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->national().data(), static_cast<int>(this->national().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.national");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->national(), output);
  }

  // double capital = 14;
  if (this->capital() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->capital(), output);
  }

  // string capitalcurrency = 15;
  if (this->capitalcurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->capitalcurrency().data(), static_cast<int>(this->capitalcurrency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.capitalcurrency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->capitalcurrency(), output);
  }

  // string telephone = 16;
  if (this->telephone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->telephone().data(), static_cast<int>(this->telephone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.telephone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->telephone(), output);
  }

  // string address = 17;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->address(), output);
  }

  // string zipcode = 18;
  if (this->zipcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zipcode().data(), static_cast<int>(this->zipcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.zipcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->zipcode(), output);
  }

  // string email = 19;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->email(), output);
  }

  // string memo = 20;
  if (this->memo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.memo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->memo(), output);
  }

  // string openinvestorname = 21;
  if (this->openinvestorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->openinvestorname().data(), static_cast<int>(this->openinvestorname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.openinvestorname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->openinvestorname(), output);
  }

  // string orderinvestorname = 22;
  if (this->orderinvestorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orderinvestorname().data(), static_cast<int>(this->orderinvestorname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.orderinvestorname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->orderinvestorname(), output);
  }

  // string fundinvestorname = 23;
  if (this->fundinvestorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fundinvestorname().data(), static_cast<int>(this->fundinvestorname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.fundinvestorname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->fundinvestorname(), output);
  }

  // string settleinvestorname = 24;
  if (this->settleinvestorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->settleinvestorname().data(), static_cast<int>(this->settleinvestorname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.settleinvestorname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->settleinvestorname(), output);
  }

  // int32 isactive = 25;
  if (this->isactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->isactive(), output);
  }

  // string departmentid = 26;
  if (this->departmentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->departmentid().data(), static_cast<int>(this->departmentid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.departmentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->departmentid(), output);
  }

  // string investorfullname = 27;
  if (this->investorfullname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorfullname().data(), static_cast<int>(this->investorfullname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.investorfullname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->investorfullname(), output);
  }

  // int32 isemail = 28;
  if (this->isemail() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->isemail(), output);
  }

  // int32 issms = 29;
  if (this->issms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->issms(), output);
  }

  // int32 isusingotp = 30;
  if (this->isusingotp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->isusingotp(), output);
  }

  // string clientregion = 31;
  if (this->clientregion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientregion().data(), static_cast<int>(this->clientregion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.clientregion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      31, this->clientregion(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.investor_info)
}

::google::protobuf::uint8* investor_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.investor_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string investorid = 1;
  if (this->investorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorid().data(), static_cast<int>(this->investorid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.investorid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->investorid(), target);
  }

  // string brokerid = 2;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), static_cast<int>(this->brokerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.brokerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->brokerid(), target);
  }

  // string investortype = 3;
  if (this->investortype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investortype().data(), static_cast<int>(this->investortype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.investortype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->investortype(), target);
  }

  // string investorname = 4;
  if (this->investorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorname().data(), static_cast<int>(this->investorname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.investorname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->investorname(), target);
  }

  // string identifiedcardtype = 5;
  if (this->identifiedcardtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifiedcardtype().data(), static_cast<int>(this->identifiedcardtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.identifiedcardtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->identifiedcardtype(), target);
  }

  // string identifiedcardno = 6;
  if (this->identifiedcardno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifiedcardno().data(), static_cast<int>(this->identifiedcardno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.identifiedcardno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->identifiedcardno(), target);
  }

  // string country = 7;
  if (this->country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->country(), target);
  }

  // string province = 8;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->province(), target);
  }

  // string city = 9;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->city(), target);
  }

  // string birthday = 10;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.birthday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->birthday(), target);
  }

  // string sex = 11;
  if (this->sex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sex().data(), static_cast<int>(this->sex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.sex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sex(), target);
  }

  // string profession = 12;
  if (this->profession().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->profession().data(), static_cast<int>(this->profession().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.profession");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->profession(), target);
  }

  // string national = 13;
  if (this->national().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->national().data(), static_cast<int>(this->national().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.national");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->national(), target);
  }

  // double capital = 14;
  if (this->capital() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->capital(), target);
  }

  // string capitalcurrency = 15;
  if (this->capitalcurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->capitalcurrency().data(), static_cast<int>(this->capitalcurrency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.capitalcurrency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->capitalcurrency(), target);
  }

  // string telephone = 16;
  if (this->telephone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->telephone().data(), static_cast<int>(this->telephone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.telephone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->telephone(), target);
  }

  // string address = 17;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->address(), target);
  }

  // string zipcode = 18;
  if (this->zipcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zipcode().data(), static_cast<int>(this->zipcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.zipcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->zipcode(), target);
  }

  // string email = 19;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->email(), target);
  }

  // string memo = 20;
  if (this->memo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.memo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->memo(), target);
  }

  // string openinvestorname = 21;
  if (this->openinvestorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->openinvestorname().data(), static_cast<int>(this->openinvestorname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.openinvestorname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->openinvestorname(), target);
  }

  // string orderinvestorname = 22;
  if (this->orderinvestorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orderinvestorname().data(), static_cast<int>(this->orderinvestorname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.orderinvestorname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->orderinvestorname(), target);
  }

  // string fundinvestorname = 23;
  if (this->fundinvestorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fundinvestorname().data(), static_cast<int>(this->fundinvestorname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.fundinvestorname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->fundinvestorname(), target);
  }

  // string settleinvestorname = 24;
  if (this->settleinvestorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->settleinvestorname().data(), static_cast<int>(this->settleinvestorname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.settleinvestorname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->settleinvestorname(), target);
  }

  // int32 isactive = 25;
  if (this->isactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->isactive(), target);
  }

  // string departmentid = 26;
  if (this->departmentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->departmentid().data(), static_cast<int>(this->departmentid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.departmentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->departmentid(), target);
  }

  // string investorfullname = 27;
  if (this->investorfullname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorfullname().data(), static_cast<int>(this->investorfullname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.investorfullname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->investorfullname(), target);
  }

  // int32 isemail = 28;
  if (this->isemail() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->isemail(), target);
  }

  // int32 issms = 29;
  if (this->issms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->issms(), target);
  }

  // int32 isusingotp = 30;
  if (this->isusingotp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->isusingotp(), target);
  }

  // string clientregion = 31;
  if (this->clientregion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientregion().data(), static_cast<int>(this->clientregion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manager.investor_info.clientregion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->clientregion(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.investor_info)
  return target;
}

size_t investor_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.investor_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string investorid = 1;
  if (this->investorid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investorid());
  }

  // string brokerid = 2;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // string investortype = 3;
  if (this->investortype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investortype());
  }

  // string investorname = 4;
  if (this->investorname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investorname());
  }

  // string identifiedcardtype = 5;
  if (this->identifiedcardtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identifiedcardtype());
  }

  // string identifiedcardno = 6;
  if (this->identifiedcardno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identifiedcardno());
  }

  // string country = 7;
  if (this->country().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country());
  }

  // string province = 8;
  if (this->province().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->province());
  }

  // string city = 9;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // string birthday = 10;
  if (this->birthday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthday());
  }

  // string sex = 11;
  if (this->sex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sex());
  }

  // string profession = 12;
  if (this->profession().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->profession());
  }

  // string national = 13;
  if (this->national().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->national());
  }

  // string capitalcurrency = 15;
  if (this->capitalcurrency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->capitalcurrency());
  }

  // string telephone = 16;
  if (this->telephone().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->telephone());
  }

  // string address = 17;
  if (this->address().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string zipcode = 18;
  if (this->zipcode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zipcode());
  }

  // string email = 19;
  if (this->email().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string memo = 20;
  if (this->memo().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->memo());
  }

  // string openinvestorname = 21;
  if (this->openinvestorname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->openinvestorname());
  }

  // string orderinvestorname = 22;
  if (this->orderinvestorname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orderinvestorname());
  }

  // string fundinvestorname = 23;
  if (this->fundinvestorname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fundinvestorname());
  }

  // string settleinvestorname = 24;
  if (this->settleinvestorname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->settleinvestorname());
  }

  // string departmentid = 26;
  if (this->departmentid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->departmentid());
  }

  // string investorfullname = 27;
  if (this->investorfullname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investorfullname());
  }

  // string clientregion = 31;
  if (this->clientregion().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientregion());
  }

  // double capital = 14;
  if (this->capital() != 0) {
    total_size += 1 + 8;
  }

  // int32 isactive = 25;
  if (this->isactive() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isactive());
  }

  // int32 isemail = 28;
  if (this->isemail() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isemail());
  }

  // int32 issms = 29;
  if (this->issms() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->issms());
  }

  // int32 isusingotp = 30;
  if (this->isusingotp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isusingotp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void investor_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.investor_info)
  GOOGLE_DCHECK_NE(&from, this);
  const investor_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const investor_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.investor_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.investor_info)
    MergeFrom(*source);
  }
}

void investor_info::MergeFrom(const investor_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.investor_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.investorid().size() > 0) {

    investorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investorid_);
  }
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.investortype().size() > 0) {

    investortype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investortype_);
  }
  if (from.investorname().size() > 0) {

    investorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investorname_);
  }
  if (from.identifiedcardtype().size() > 0) {

    identifiedcardtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifiedcardtype_);
  }
  if (from.identifiedcardno().size() > 0) {

    identifiedcardno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifiedcardno_);
  }
  if (from.country().size() > 0) {

    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  if (from.province().size() > 0) {

    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.birthday().size() > 0) {

    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  if (from.sex().size() > 0) {

    sex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sex_);
  }
  if (from.profession().size() > 0) {

    profession_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profession_);
  }
  if (from.national().size() > 0) {

    national_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.national_);
  }
  if (from.capitalcurrency().size() > 0) {

    capitalcurrency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.capitalcurrency_);
  }
  if (from.telephone().size() > 0) {

    telephone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telephone_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.zipcode().size() > 0) {

    zipcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zipcode_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.memo().size() > 0) {

    memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  if (from.openinvestorname().size() > 0) {

    openinvestorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openinvestorname_);
  }
  if (from.orderinvestorname().size() > 0) {

    orderinvestorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderinvestorname_);
  }
  if (from.fundinvestorname().size() > 0) {

    fundinvestorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fundinvestorname_);
  }
  if (from.settleinvestorname().size() > 0) {

    settleinvestorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.settleinvestorname_);
  }
  if (from.departmentid().size() > 0) {

    departmentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.departmentid_);
  }
  if (from.investorfullname().size() > 0) {

    investorfullname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investorfullname_);
  }
  if (from.clientregion().size() > 0) {

    clientregion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientregion_);
  }
  if (from.capital() != 0) {
    set_capital(from.capital());
  }
  if (from.isactive() != 0) {
    set_isactive(from.isactive());
  }
  if (from.isemail() != 0) {
    set_isemail(from.isemail());
  }
  if (from.issms() != 0) {
    set_issms(from.issms());
  }
  if (from.isusingotp() != 0) {
    set_isusingotp(from.isusingotp());
  }
}

void investor_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.investor_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void investor_info::CopyFrom(const investor_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.investor_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool investor_info::IsInitialized() const {
  return true;
}

void investor_info::Swap(investor_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void investor_info::InternalSwap(investor_info* other) {
  using std::swap;
  investorid_.Swap(&other->investorid_);
  brokerid_.Swap(&other->brokerid_);
  investortype_.Swap(&other->investortype_);
  investorname_.Swap(&other->investorname_);
  identifiedcardtype_.Swap(&other->identifiedcardtype_);
  identifiedcardno_.Swap(&other->identifiedcardno_);
  country_.Swap(&other->country_);
  province_.Swap(&other->province_);
  city_.Swap(&other->city_);
  birthday_.Swap(&other->birthday_);
  sex_.Swap(&other->sex_);
  profession_.Swap(&other->profession_);
  national_.Swap(&other->national_);
  capitalcurrency_.Swap(&other->capitalcurrency_);
  telephone_.Swap(&other->telephone_);
  address_.Swap(&other->address_);
  zipcode_.Swap(&other->zipcode_);
  email_.Swap(&other->email_);
  memo_.Swap(&other->memo_);
  openinvestorname_.Swap(&other->openinvestorname_);
  orderinvestorname_.Swap(&other->orderinvestorname_);
  fundinvestorname_.Swap(&other->fundinvestorname_);
  settleinvestorname_.Swap(&other->settleinvestorname_);
  departmentid_.Swap(&other->departmentid_);
  investorfullname_.Swap(&other->investorfullname_);
  clientregion_.Swap(&other->clientregion_);
  swap(capital_, other->capital_);
  swap(isactive_, other->isactive_);
  swap(isemail_, other->isemail_);
  swap(issms_, other->issms_);
  swap(isusingotp_, other->isusingotp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata investor_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// investor_info

// string investorid = 1;
void investor_info::clear_investorid() {
  investorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::investorid() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.investorid)
  return investorid_.GetNoArena();
}
void investor_info::set_investorid(const ::std::string& value) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.investorid)
}
#if LANG_CXX11
void investor_info::set_investorid(::std::string&& value) {
  
  investorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.investorid)
}
#endif
void investor_info::set_investorid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.investorid)
}
void investor_info::set_investorid(const char* value, size_t size) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.investorid)
}
::std::string* investor_info::mutable_investorid() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.investorid)
  return investorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_investorid() {
  // @@protoc_insertion_point(field_release:manager.investor_info.investorid)
  
  return investorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_investorid(::std::string* investorid) {
  if (investorid != NULL) {
    
  } else {
    
  }
  investorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investorid);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.investorid)
}

// string brokerid = 2;
void investor_info::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::brokerid() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.brokerid)
  return brokerid_.GetNoArena();
}
void investor_info::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.brokerid)
}
#if LANG_CXX11
void investor_info::set_brokerid(::std::string&& value) {
  
  brokerid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.brokerid)
}
#endif
void investor_info::set_brokerid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.brokerid)
}
void investor_info::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.brokerid)
}
::std::string* investor_info::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.brokerid)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_brokerid() {
  // @@protoc_insertion_point(field_release:manager.investor_info.brokerid)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.brokerid)
}

// string investortype = 3;
void investor_info::clear_investortype() {
  investortype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::investortype() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.investortype)
  return investortype_.GetNoArena();
}
void investor_info::set_investortype(const ::std::string& value) {
  
  investortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.investortype)
}
#if LANG_CXX11
void investor_info::set_investortype(::std::string&& value) {
  
  investortype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.investortype)
}
#endif
void investor_info::set_investortype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  investortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.investortype)
}
void investor_info::set_investortype(const char* value, size_t size) {
  
  investortype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.investortype)
}
::std::string* investor_info::mutable_investortype() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.investortype)
  return investortype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_investortype() {
  // @@protoc_insertion_point(field_release:manager.investor_info.investortype)
  
  return investortype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_investortype(::std::string* investortype) {
  if (investortype != NULL) {
    
  } else {
    
  }
  investortype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investortype);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.investortype)
}

// string investorname = 4;
void investor_info::clear_investorname() {
  investorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::investorname() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.investorname)
  return investorname_.GetNoArena();
}
void investor_info::set_investorname(const ::std::string& value) {
  
  investorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.investorname)
}
#if LANG_CXX11
void investor_info::set_investorname(::std::string&& value) {
  
  investorname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.investorname)
}
#endif
void investor_info::set_investorname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  investorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.investorname)
}
void investor_info::set_investorname(const char* value, size_t size) {
  
  investorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.investorname)
}
::std::string* investor_info::mutable_investorname() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.investorname)
  return investorname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_investorname() {
  // @@protoc_insertion_point(field_release:manager.investor_info.investorname)
  
  return investorname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_investorname(::std::string* investorname) {
  if (investorname != NULL) {
    
  } else {
    
  }
  investorname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investorname);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.investorname)
}

// string identifiedcardtype = 5;
void investor_info::clear_identifiedcardtype() {
  identifiedcardtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::identifiedcardtype() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.identifiedcardtype)
  return identifiedcardtype_.GetNoArena();
}
void investor_info::set_identifiedcardtype(const ::std::string& value) {
  
  identifiedcardtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.identifiedcardtype)
}
#if LANG_CXX11
void investor_info::set_identifiedcardtype(::std::string&& value) {
  
  identifiedcardtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.identifiedcardtype)
}
#endif
void investor_info::set_identifiedcardtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  identifiedcardtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.identifiedcardtype)
}
void investor_info::set_identifiedcardtype(const char* value, size_t size) {
  
  identifiedcardtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.identifiedcardtype)
}
::std::string* investor_info::mutable_identifiedcardtype() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.identifiedcardtype)
  return identifiedcardtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_identifiedcardtype() {
  // @@protoc_insertion_point(field_release:manager.investor_info.identifiedcardtype)
  
  return identifiedcardtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_identifiedcardtype(::std::string* identifiedcardtype) {
  if (identifiedcardtype != NULL) {
    
  } else {
    
  }
  identifiedcardtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifiedcardtype);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.identifiedcardtype)
}

// string identifiedcardno = 6;
void investor_info::clear_identifiedcardno() {
  identifiedcardno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::identifiedcardno() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.identifiedcardno)
  return identifiedcardno_.GetNoArena();
}
void investor_info::set_identifiedcardno(const ::std::string& value) {
  
  identifiedcardno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.identifiedcardno)
}
#if LANG_CXX11
void investor_info::set_identifiedcardno(::std::string&& value) {
  
  identifiedcardno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.identifiedcardno)
}
#endif
void investor_info::set_identifiedcardno(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  identifiedcardno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.identifiedcardno)
}
void investor_info::set_identifiedcardno(const char* value, size_t size) {
  
  identifiedcardno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.identifiedcardno)
}
::std::string* investor_info::mutable_identifiedcardno() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.identifiedcardno)
  return identifiedcardno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_identifiedcardno() {
  // @@protoc_insertion_point(field_release:manager.investor_info.identifiedcardno)
  
  return identifiedcardno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_identifiedcardno(::std::string* identifiedcardno) {
  if (identifiedcardno != NULL) {
    
  } else {
    
  }
  identifiedcardno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifiedcardno);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.identifiedcardno)
}

// string country = 7;
void investor_info::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::country() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.country)
  return country_.GetNoArena();
}
void investor_info::set_country(const ::std::string& value) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.country)
}
#if LANG_CXX11
void investor_info::set_country(::std::string&& value) {
  
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.country)
}
#endif
void investor_info::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.country)
}
void investor_info::set_country(const char* value, size_t size) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.country)
}
::std::string* investor_info::mutable_country() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_country() {
  // @@protoc_insertion_point(field_release:manager.investor_info.country)
  
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    
  } else {
    
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.country)
}

// string province = 8;
void investor_info::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::province() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.province)
  return province_.GetNoArena();
}
void investor_info::set_province(const ::std::string& value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.province)
}
#if LANG_CXX11
void investor_info::set_province(::std::string&& value) {
  
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.province)
}
#endif
void investor_info::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.province)
}
void investor_info::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.province)
}
::std::string* investor_info::mutable_province() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_province() {
  // @@protoc_insertion_point(field_release:manager.investor_info.province)
  
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.province)
}

// string city = 9;
void investor_info::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::city() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.city)
  return city_.GetNoArena();
}
void investor_info::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.city)
}
#if LANG_CXX11
void investor_info::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.city)
}
#endif
void investor_info::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.city)
}
void investor_info::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.city)
}
::std::string* investor_info::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_city() {
  // @@protoc_insertion_point(field_release:manager.investor_info.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.city)
}

// string birthday = 10;
void investor_info::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::birthday() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.birthday)
  return birthday_.GetNoArena();
}
void investor_info::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.birthday)
}
#if LANG_CXX11
void investor_info::set_birthday(::std::string&& value) {
  
  birthday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.birthday)
}
#endif
void investor_info::set_birthday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.birthday)
}
void investor_info::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.birthday)
}
::std::string* investor_info::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_birthday() {
  // @@protoc_insertion_point(field_release:manager.investor_info.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.birthday)
}

// string sex = 11;
void investor_info::clear_sex() {
  sex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::sex() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.sex)
  return sex_.GetNoArena();
}
void investor_info::set_sex(const ::std::string& value) {
  
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.sex)
}
#if LANG_CXX11
void investor_info::set_sex(::std::string&& value) {
  
  sex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.sex)
}
#endif
void investor_info::set_sex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.sex)
}
void investor_info::set_sex(const char* value, size_t size) {
  
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.sex)
}
::std::string* investor_info::mutable_sex() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.sex)
  return sex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_sex() {
  // @@protoc_insertion_point(field_release:manager.investor_info.sex)
  
  return sex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_sex(::std::string* sex) {
  if (sex != NULL) {
    
  } else {
    
  }
  sex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sex);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.sex)
}

// string profession = 12;
void investor_info::clear_profession() {
  profession_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::profession() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.profession)
  return profession_.GetNoArena();
}
void investor_info::set_profession(const ::std::string& value) {
  
  profession_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.profession)
}
#if LANG_CXX11
void investor_info::set_profession(::std::string&& value) {
  
  profession_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.profession)
}
#endif
void investor_info::set_profession(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  profession_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.profession)
}
void investor_info::set_profession(const char* value, size_t size) {
  
  profession_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.profession)
}
::std::string* investor_info::mutable_profession() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.profession)
  return profession_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_profession() {
  // @@protoc_insertion_point(field_release:manager.investor_info.profession)
  
  return profession_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_profession(::std::string* profession) {
  if (profession != NULL) {
    
  } else {
    
  }
  profession_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profession);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.profession)
}

// string national = 13;
void investor_info::clear_national() {
  national_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::national() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.national)
  return national_.GetNoArena();
}
void investor_info::set_national(const ::std::string& value) {
  
  national_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.national)
}
#if LANG_CXX11
void investor_info::set_national(::std::string&& value) {
  
  national_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.national)
}
#endif
void investor_info::set_national(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  national_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.national)
}
void investor_info::set_national(const char* value, size_t size) {
  
  national_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.national)
}
::std::string* investor_info::mutable_national() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.national)
  return national_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_national() {
  // @@protoc_insertion_point(field_release:manager.investor_info.national)
  
  return national_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_national(::std::string* national) {
  if (national != NULL) {
    
  } else {
    
  }
  national_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), national);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.national)
}

// double capital = 14;
void investor_info::clear_capital() {
  capital_ = 0;
}
double investor_info::capital() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.capital)
  return capital_;
}
void investor_info::set_capital(double value) {
  
  capital_ = value;
  // @@protoc_insertion_point(field_set:manager.investor_info.capital)
}

// string capitalcurrency = 15;
void investor_info::clear_capitalcurrency() {
  capitalcurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::capitalcurrency() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.capitalcurrency)
  return capitalcurrency_.GetNoArena();
}
void investor_info::set_capitalcurrency(const ::std::string& value) {
  
  capitalcurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.capitalcurrency)
}
#if LANG_CXX11
void investor_info::set_capitalcurrency(::std::string&& value) {
  
  capitalcurrency_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.capitalcurrency)
}
#endif
void investor_info::set_capitalcurrency(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  capitalcurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.capitalcurrency)
}
void investor_info::set_capitalcurrency(const char* value, size_t size) {
  
  capitalcurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.capitalcurrency)
}
::std::string* investor_info::mutable_capitalcurrency() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.capitalcurrency)
  return capitalcurrency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_capitalcurrency() {
  // @@protoc_insertion_point(field_release:manager.investor_info.capitalcurrency)
  
  return capitalcurrency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_capitalcurrency(::std::string* capitalcurrency) {
  if (capitalcurrency != NULL) {
    
  } else {
    
  }
  capitalcurrency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), capitalcurrency);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.capitalcurrency)
}

// string telephone = 16;
void investor_info::clear_telephone() {
  telephone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::telephone() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.telephone)
  return telephone_.GetNoArena();
}
void investor_info::set_telephone(const ::std::string& value) {
  
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.telephone)
}
#if LANG_CXX11
void investor_info::set_telephone(::std::string&& value) {
  
  telephone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.telephone)
}
#endif
void investor_info::set_telephone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.telephone)
}
void investor_info::set_telephone(const char* value, size_t size) {
  
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.telephone)
}
::std::string* investor_info::mutable_telephone() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.telephone)
  return telephone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_telephone() {
  // @@protoc_insertion_point(field_release:manager.investor_info.telephone)
  
  return telephone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_telephone(::std::string* telephone) {
  if (telephone != NULL) {
    
  } else {
    
  }
  telephone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), telephone);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.telephone)
}

// string address = 17;
void investor_info::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::address() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.address)
  return address_.GetNoArena();
}
void investor_info::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.address)
}
#if LANG_CXX11
void investor_info::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.address)
}
#endif
void investor_info::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.address)
}
void investor_info::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.address)
}
::std::string* investor_info::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_address() {
  // @@protoc_insertion_point(field_release:manager.investor_info.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.address)
}

// string zipcode = 18;
void investor_info::clear_zipcode() {
  zipcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::zipcode() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.zipcode)
  return zipcode_.GetNoArena();
}
void investor_info::set_zipcode(const ::std::string& value) {
  
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.zipcode)
}
#if LANG_CXX11
void investor_info::set_zipcode(::std::string&& value) {
  
  zipcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.zipcode)
}
#endif
void investor_info::set_zipcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.zipcode)
}
void investor_info::set_zipcode(const char* value, size_t size) {
  
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.zipcode)
}
::std::string* investor_info::mutable_zipcode() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.zipcode)
  return zipcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_zipcode() {
  // @@protoc_insertion_point(field_release:manager.investor_info.zipcode)
  
  return zipcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_zipcode(::std::string* zipcode) {
  if (zipcode != NULL) {
    
  } else {
    
  }
  zipcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zipcode);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.zipcode)
}

// string email = 19;
void investor_info::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::email() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.email)
  return email_.GetNoArena();
}
void investor_info::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.email)
}
#if LANG_CXX11
void investor_info::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.email)
}
#endif
void investor_info::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.email)
}
void investor_info::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.email)
}
::std::string* investor_info::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_email() {
  // @@protoc_insertion_point(field_release:manager.investor_info.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.email)
}

// string memo = 20;
void investor_info::clear_memo() {
  memo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::memo() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.memo)
  return memo_.GetNoArena();
}
void investor_info::set_memo(const ::std::string& value) {
  
  memo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.memo)
}
#if LANG_CXX11
void investor_info::set_memo(::std::string&& value) {
  
  memo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.memo)
}
#endif
void investor_info::set_memo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  memo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.memo)
}
void investor_info::set_memo(const char* value, size_t size) {
  
  memo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.memo)
}
::std::string* investor_info::mutable_memo() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.memo)
  return memo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_memo() {
  // @@protoc_insertion_point(field_release:manager.investor_info.memo)
  
  return memo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_memo(::std::string* memo) {
  if (memo != NULL) {
    
  } else {
    
  }
  memo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), memo);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.memo)
}

// string openinvestorname = 21;
void investor_info::clear_openinvestorname() {
  openinvestorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::openinvestorname() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.openinvestorname)
  return openinvestorname_.GetNoArena();
}
void investor_info::set_openinvestorname(const ::std::string& value) {
  
  openinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.openinvestorname)
}
#if LANG_CXX11
void investor_info::set_openinvestorname(::std::string&& value) {
  
  openinvestorname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.openinvestorname)
}
#endif
void investor_info::set_openinvestorname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  openinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.openinvestorname)
}
void investor_info::set_openinvestorname(const char* value, size_t size) {
  
  openinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.openinvestorname)
}
::std::string* investor_info::mutable_openinvestorname() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.openinvestorname)
  return openinvestorname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_openinvestorname() {
  // @@protoc_insertion_point(field_release:manager.investor_info.openinvestorname)
  
  return openinvestorname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_openinvestorname(::std::string* openinvestorname) {
  if (openinvestorname != NULL) {
    
  } else {
    
  }
  openinvestorname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openinvestorname);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.openinvestorname)
}

// string orderinvestorname = 22;
void investor_info::clear_orderinvestorname() {
  orderinvestorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::orderinvestorname() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.orderinvestorname)
  return orderinvestorname_.GetNoArena();
}
void investor_info::set_orderinvestorname(const ::std::string& value) {
  
  orderinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.orderinvestorname)
}
#if LANG_CXX11
void investor_info::set_orderinvestorname(::std::string&& value) {
  
  orderinvestorname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.orderinvestorname)
}
#endif
void investor_info::set_orderinvestorname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  orderinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.orderinvestorname)
}
void investor_info::set_orderinvestorname(const char* value, size_t size) {
  
  orderinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.orderinvestorname)
}
::std::string* investor_info::mutable_orderinvestorname() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.orderinvestorname)
  return orderinvestorname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_orderinvestorname() {
  // @@protoc_insertion_point(field_release:manager.investor_info.orderinvestorname)
  
  return orderinvestorname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_orderinvestorname(::std::string* orderinvestorname) {
  if (orderinvestorname != NULL) {
    
  } else {
    
  }
  orderinvestorname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderinvestorname);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.orderinvestorname)
}

// string fundinvestorname = 23;
void investor_info::clear_fundinvestorname() {
  fundinvestorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::fundinvestorname() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.fundinvestorname)
  return fundinvestorname_.GetNoArena();
}
void investor_info::set_fundinvestorname(const ::std::string& value) {
  
  fundinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.fundinvestorname)
}
#if LANG_CXX11
void investor_info::set_fundinvestorname(::std::string&& value) {
  
  fundinvestorname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.fundinvestorname)
}
#endif
void investor_info::set_fundinvestorname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fundinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.fundinvestorname)
}
void investor_info::set_fundinvestorname(const char* value, size_t size) {
  
  fundinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.fundinvestorname)
}
::std::string* investor_info::mutable_fundinvestorname() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.fundinvestorname)
  return fundinvestorname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_fundinvestorname() {
  // @@protoc_insertion_point(field_release:manager.investor_info.fundinvestorname)
  
  return fundinvestorname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_fundinvestorname(::std::string* fundinvestorname) {
  if (fundinvestorname != NULL) {
    
  } else {
    
  }
  fundinvestorname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fundinvestorname);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.fundinvestorname)
}

// string settleinvestorname = 24;
void investor_info::clear_settleinvestorname() {
  settleinvestorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::settleinvestorname() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.settleinvestorname)
  return settleinvestorname_.GetNoArena();
}
void investor_info::set_settleinvestorname(const ::std::string& value) {
  
  settleinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.settleinvestorname)
}
#if LANG_CXX11
void investor_info::set_settleinvestorname(::std::string&& value) {
  
  settleinvestorname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.settleinvestorname)
}
#endif
void investor_info::set_settleinvestorname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  settleinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.settleinvestorname)
}
void investor_info::set_settleinvestorname(const char* value, size_t size) {
  
  settleinvestorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.settleinvestorname)
}
::std::string* investor_info::mutable_settleinvestorname() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.settleinvestorname)
  return settleinvestorname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_settleinvestorname() {
  // @@protoc_insertion_point(field_release:manager.investor_info.settleinvestorname)
  
  return settleinvestorname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_settleinvestorname(::std::string* settleinvestorname) {
  if (settleinvestorname != NULL) {
    
  } else {
    
  }
  settleinvestorname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), settleinvestorname);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.settleinvestorname)
}

// int32 isactive = 25;
void investor_info::clear_isactive() {
  isactive_ = 0;
}
::google::protobuf::int32 investor_info::isactive() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.isactive)
  return isactive_;
}
void investor_info::set_isactive(::google::protobuf::int32 value) {
  
  isactive_ = value;
  // @@protoc_insertion_point(field_set:manager.investor_info.isactive)
}

// string departmentid = 26;
void investor_info::clear_departmentid() {
  departmentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::departmentid() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.departmentid)
  return departmentid_.GetNoArena();
}
void investor_info::set_departmentid(const ::std::string& value) {
  
  departmentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.departmentid)
}
#if LANG_CXX11
void investor_info::set_departmentid(::std::string&& value) {
  
  departmentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.departmentid)
}
#endif
void investor_info::set_departmentid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  departmentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.departmentid)
}
void investor_info::set_departmentid(const char* value, size_t size) {
  
  departmentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.departmentid)
}
::std::string* investor_info::mutable_departmentid() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.departmentid)
  return departmentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_departmentid() {
  // @@protoc_insertion_point(field_release:manager.investor_info.departmentid)
  
  return departmentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_departmentid(::std::string* departmentid) {
  if (departmentid != NULL) {
    
  } else {
    
  }
  departmentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), departmentid);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.departmentid)
}

// string investorfullname = 27;
void investor_info::clear_investorfullname() {
  investorfullname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::investorfullname() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.investorfullname)
  return investorfullname_.GetNoArena();
}
void investor_info::set_investorfullname(const ::std::string& value) {
  
  investorfullname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.investorfullname)
}
#if LANG_CXX11
void investor_info::set_investorfullname(::std::string&& value) {
  
  investorfullname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.investorfullname)
}
#endif
void investor_info::set_investorfullname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  investorfullname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.investorfullname)
}
void investor_info::set_investorfullname(const char* value, size_t size) {
  
  investorfullname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.investorfullname)
}
::std::string* investor_info::mutable_investorfullname() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.investorfullname)
  return investorfullname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_investorfullname() {
  // @@protoc_insertion_point(field_release:manager.investor_info.investorfullname)
  
  return investorfullname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_investorfullname(::std::string* investorfullname) {
  if (investorfullname != NULL) {
    
  } else {
    
  }
  investorfullname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investorfullname);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.investorfullname)
}

// int32 isemail = 28;
void investor_info::clear_isemail() {
  isemail_ = 0;
}
::google::protobuf::int32 investor_info::isemail() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.isemail)
  return isemail_;
}
void investor_info::set_isemail(::google::protobuf::int32 value) {
  
  isemail_ = value;
  // @@protoc_insertion_point(field_set:manager.investor_info.isemail)
}

// int32 issms = 29;
void investor_info::clear_issms() {
  issms_ = 0;
}
::google::protobuf::int32 investor_info::issms() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.issms)
  return issms_;
}
void investor_info::set_issms(::google::protobuf::int32 value) {
  
  issms_ = value;
  // @@protoc_insertion_point(field_set:manager.investor_info.issms)
}

// int32 isusingotp = 30;
void investor_info::clear_isusingotp() {
  isusingotp_ = 0;
}
::google::protobuf::int32 investor_info::isusingotp() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.isusingotp)
  return isusingotp_;
}
void investor_info::set_isusingotp(::google::protobuf::int32 value) {
  
  isusingotp_ = value;
  // @@protoc_insertion_point(field_set:manager.investor_info.isusingotp)
}

// string clientregion = 31;
void investor_info::clear_clientregion() {
  clientregion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& investor_info::clientregion() const {
  // @@protoc_insertion_point(field_get:manager.investor_info.clientregion)
  return clientregion_.GetNoArena();
}
void investor_info::set_clientregion(const ::std::string& value) {
  
  clientregion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.investor_info.clientregion)
}
#if LANG_CXX11
void investor_info::set_clientregion(::std::string&& value) {
  
  clientregion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:manager.investor_info.clientregion)
}
#endif
void investor_info::set_clientregion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clientregion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.investor_info.clientregion)
}
void investor_info::set_clientregion(const char* value, size_t size) {
  
  clientregion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.investor_info.clientregion)
}
::std::string* investor_info::mutable_clientregion() {
  
  // @@protoc_insertion_point(field_mutable:manager.investor_info.clientregion)
  return clientregion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* investor_info::release_clientregion() {
  // @@protoc_insertion_point(field_release:manager.investor_info.clientregion)
  
  return clientregion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void investor_info::set_allocated_clientregion(::std::string* clientregion) {
  if (clientregion != NULL) {
    
  } else {
    
  }
  clientregion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientregion);
  // @@protoc_insertion_point(field_set_allocated:manager.investor_info.clientregion)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsp_investor_info::kHeaderFieldNumber;
const int rsp_investor_info::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsp_investor_info::rsp_investor_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manager_5fprotocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.rsp_investor_info)
}
rsp_investor_info::rsp_investor_info(const rsp_investor_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::manager::rsp_head_info(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manager.rsp_investor_info)
}

void rsp_investor_info::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

rsp_investor_info::~rsp_investor_info() {
  // @@protoc_insertion_point(destructor:manager.rsp_investor_info)
  SharedDtor();
}

void rsp_investor_info::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void rsp_investor_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rsp_investor_info::descriptor() {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rsp_investor_info& rsp_investor_info::default_instance() {
  protobuf_manager_5fprotocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

rsp_investor_info* rsp_investor_info::New(::google::protobuf::Arena* arena) const {
  rsp_investor_info* n = new rsp_investor_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rsp_investor_info::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.rsp_investor_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool rsp_investor_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.rsp_investor_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manager.rsp_head_info header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manager.investor_info infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.rsp_investor_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.rsp_investor_info)
  return false;
#undef DO_
}

void rsp_investor_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.rsp_investor_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .manager.investor_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->infos(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.rsp_investor_info)
}

::google::protobuf::uint8* rsp_investor_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.rsp_investor_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .manager.investor_info infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.rsp_investor_info)
  return target;
}

size_t rsp_investor_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.rsp_investor_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manager.investor_info infos = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infos(static_cast<int>(i)));
    }
  }

  // .manager.rsp_head_info header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rsp_investor_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.rsp_investor_info)
  GOOGLE_DCHECK_NE(&from, this);
  const rsp_investor_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rsp_investor_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.rsp_investor_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.rsp_investor_info)
    MergeFrom(*source);
  }
}

void rsp_investor_info::MergeFrom(const rsp_investor_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.rsp_investor_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  if (from.has_header()) {
    mutable_header()->::manager::rsp_head_info::MergeFrom(from.header());
  }
}

void rsp_investor_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.rsp_investor_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsp_investor_info::CopyFrom(const rsp_investor_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.rsp_investor_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsp_investor_info::IsInitialized() const {
  return true;
}

void rsp_investor_info::Swap(rsp_investor_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsp_investor_info::InternalSwap(rsp_investor_info* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rsp_investor_info::GetMetadata() const {
  protobuf_manager_5fprotocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manager_5fprotocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rsp_investor_info

// .manager.rsp_head_info header = 1;
bool rsp_investor_info::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void rsp_investor_info::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::manager::rsp_head_info& rsp_investor_info::header() const {
  const ::manager::rsp_head_info* p = header_;
  // @@protoc_insertion_point(field_get:manager.rsp_investor_info.header)
  return p != NULL ? *p : *reinterpret_cast<const ::manager::rsp_head_info*>(
      &::manager::_rsp_head_info_default_instance_);
}
::manager::rsp_head_info* rsp_investor_info::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::manager::rsp_head_info;
  }
  // @@protoc_insertion_point(field_mutable:manager.rsp_investor_info.header)
  return header_;
}
::manager::rsp_head_info* rsp_investor_info::release_header() {
  // @@protoc_insertion_point(field_release:manager.rsp_investor_info.header)
  
  ::manager::rsp_head_info* temp = header_;
  header_ = NULL;
  return temp;
}
void rsp_investor_info::set_allocated_header(::manager::rsp_head_info* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:manager.rsp_investor_info.header)
}

// repeated .manager.investor_info infos = 2;
int rsp_investor_info::infos_size() const {
  return infos_.size();
}
void rsp_investor_info::clear_infos() {
  infos_.Clear();
}
const ::manager::investor_info& rsp_investor_info::infos(int index) const {
  // @@protoc_insertion_point(field_get:manager.rsp_investor_info.infos)
  return infos_.Get(index);
}
::manager::investor_info* rsp_investor_info::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:manager.rsp_investor_info.infos)
  return infos_.Mutable(index);
}
::manager::investor_info* rsp_investor_info::add_infos() {
  // @@protoc_insertion_point(field_add:manager.rsp_investor_info.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::manager::investor_info >*
rsp_investor_info::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:manager.rsp_investor_info.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::manager::investor_info >&
rsp_investor_info::infos() const {
  // @@protoc_insertion_point(field_list:manager.rsp_investor_info.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace manager

// @@protoc_insertion_point(global_scope)
